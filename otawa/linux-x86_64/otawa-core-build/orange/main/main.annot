"main.ml" 29 480 505 "main.ml" 29 480 552
call(
  stack
)
"main.ml" 29 480 492 "main.ml" 29 480 553
call(
  stack
)
"main.ml" 30 554 579 "main.ml" 30 554 616
call(
  stack
)
"main.ml" 30 554 566 "main.ml" 30 554 617
call(
  stack
)
"main.ml" 35 698 706 "main.ml" 35 698 718
type(
  Util.typeES list -> string list
)
ident(
  def listeOutputs "main.ml" 35 698 698 "main.ml" 1 0 -1
)
"main.ml" 35 698 719 "main.ml" 35 698 725
type(
  Util.typeES list
)
ident(
  def listES "main.ml" 36 728 728 "main.ml" 43 940 943
)
"main.ml" 36 728 731 "main.ml" 36 728 737
type(
  Util.typeES list
)
ident(
  int_ref listES "main.ml" 35 698 719 "main.ml" 35 698 725
)
"main.ml" 36 728 738 "main.ml" 36 728 739
type(
  Util.typeES list -> Util.typeES list -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 36 728 740 "main.ml" 36 728 742
type(
  Util.typeES list
)
"main.ml" 36 728 731 "main.ml" 36 728 742
type(
  bool
)
"main.ml" 36 728 748 "main.ml" 36 728 750
type(
  string list
)
"main.ml" 39 762 768 "main.ml" 39 762 773
type(
  Util.typeES
)
ident(
  def first "main.ml" 40 819 820 "main.ml" 42 874 939
)
"main.ml" 39 762 775 "main.ml" 39 762 779
type(
  Util.typeES list
)
ident(
  def next "main.ml" 40 819 820 "main.ml" 42 874 939
)
"main.ml" 39 762 767 "main.ml" 39 762 780
type(
  Util.typeES * Util.typeES list
)
"main.ml" 39 762 784 "main.ml" 39 762 791
type(
  Util.typeES list -> Util.typeES
)
ident(
  ext_ref List.hd
)
"main.ml" 39 762 792 "main.ml" 39 762 798
type(
  Util.typeES list
)
ident(
  int_ref listES "main.ml" 35 698 719 "main.ml" 35 698 725
)
"main.ml" 39 762 784 "main.ml" 39 762 798
call(
  stack
)
type(
  Util.typeES
)
"main.ml" 39 762 800 "main.ml" 39 762 807
type(
  Util.typeES list -> Util.typeES list
)
ident(
  ext_ref List.tl
)
"main.ml" 39 762 808 "main.ml" 39 762 814
type(
  Util.typeES list
)
ident(
  int_ref listES "main.ml" 35 698 719 "main.ml" 35 698 725
)
"main.ml" 39 762 800 "main.ml" 39 762 814
call(
  stack
)
type(
  Util.typeES list
)
"main.ml" 39 762 783 "main.ml" 39 762 815
type(
  Util.typeES * Util.typeES list
)
"main.ml" 40 819 827 "main.ml" 40 819 832
type(
  Util.typeES
)
ident(
  int_ref first "main.ml" 39 762 768 "main.ml" 39 762 773
)
"main.ml" 41 838 848 "main.ml" 41 838 851
type(
  string
)
"main.ml" 41 838 841 "main.ml" 41 838 851
type(
  Util.typeES
)
"main.ml" 41 838 856 "main.ml" 41 838 868
type(
  Util.typeES list -> string list
)
ident(
  int_ref listeOutputs "main.ml" 35 698 706 "main.ml" 35 698 718
)
"main.ml" 41 838 869 "main.ml" 41 838 873
type(
  Util.typeES list
)
ident(
  int_ref next "main.ml" 39 762 775 "main.ml" 39 762 779
)
"main.ml" 41 838 856 "main.ml" 41 838 873
call(
  tail
)
type(
  string list
)
"main.ml" 42 874 887 "main.ml" 42 874 890
ident(
  def nom "main.ml" 42 874 916 "main.ml" 42 874 938
)
"main.ml" 42 874 886 "main.ml" 42 874 891
type(
  string
)
"main.ml" 42 874 879 "main.ml" 42 874 891
type(
  Util.typeES
)
"main.ml" 42 874 908 "main.ml" 42 874 911
ident(
  def nom "main.ml" 42 874 916 "main.ml" 42 874 938
)
"main.ml" 42 874 907 "main.ml" 42 874 912
type(
  string
)
"main.ml" 42 874 894 "main.ml" 42 874 912
type(
  Util.typeES
)
"main.ml" 42 874 879 "main.ml" 42 874 912
type(
  Util.typeES
)
"main.ml" 42 874 916 "main.ml" 42 874 919
type(
  string
)
ident(
  int_ref nom "main.ml" 42 874 886 "main.ml" 42 874 891
)
"main.ml" 42 874 921 "main.ml" 42 874 933
type(
  Util.typeES list -> string list
)
ident(
  int_ref listeOutputs "main.ml" 35 698 706 "main.ml" 35 698 718
)
"main.ml" 42 874 934 "main.ml" 42 874 938
type(
  Util.typeES list
)
ident(
  int_ref next "main.ml" 39 762 775 "main.ml" 39 762 779
)
"main.ml" 42 874 921 "main.ml" 42 874 938
call(
  stack
)
type(
  string list
)
"main.ml" 42 874 916 "main.ml" 42 874 938
type(
  string list
)
"main.ml" 40 819 820 "main.ml" 42 874 939
type(
  string list
)
"main.ml" 38 756 756 "main.ml" 43 940 943
type(
  string list
)
"main.ml" 36 728 728 "main.ml" 43 940 943
type(
  string list
)
"main.ml" 48 980 984 "main.ml" 48 980 990
type(
  string
)
ident(
  def banner "main.ml" 77 3207 3207 "main.ml" 1 0 -1
)
"main.ml" 49 993 994 "main.ml" 49 993 1009
type(
  string
)
"main.ml" 49 993 1010 "main.ml" 49 993 1011
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 50 1012 1013 "main.ml" 50 1012 1076
type(
  string
)
"main.ml" 50 1012 1077 "main.ml" 50 1012 1078
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 51 1079 1080 "main.ml" 51 1079 1091
type(
  string
)
"main.ml" 51 1079 1092 "main.ml" 51 1079 1093
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 52 1094 1095 "main.ml" 52 1094 1123
type(
  string
)
"main.ml" 52 1094 1124 "main.ml" 52 1094 1125
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 53 1126 1127 "main.ml" 53 1126 1318
type(
  string
)
"main.ml" 53 1126 1319 "main.ml" 53 1126 1320
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 54 1321 1322 "main.ml" 54 1321 1507
type(
  string
)
"main.ml" 54 1321 1508 "main.ml" 54 1321 1509
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 55 1510 1511 "main.ml" 55 1510 1529
type(
  string
)
"main.ml" 55 1510 1530 "main.ml" 55 1510 1531
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 56 1532 1533 "main.ml" 56 1532 1682
type(
  string
)
"main.ml" 56 1532 1683 "main.ml" 56 1532 1684
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 57 1685 1686 "main.ml" 57 1685 1828
type(
  string
)
"main.ml" 57 1685 1829 "main.ml" 57 1685 1830
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 58 1831 1832 "main.ml" 58 1831 1853
type(
  string
)
"main.ml" 58 1831 1854 "main.ml" 58 1831 1855
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 59 1856 1857 "main.ml" 59 1856 1965
type(
  string
)
"main.ml" 59 1856 1966 "main.ml" 59 1856 1967
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 60 1968 1969 "main.ml" 60 1968 2071
type(
  string
)
"main.ml" 60 1968 2072 "main.ml" 60 1968 2073
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 61 2074 2075 "main.ml" 61 2074 2101
type(
  string
)
"main.ml" 61 2074 2102 "main.ml" 61 2074 2103
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 62 2104 2105 "main.ml" 62 2104 2188
type(
  string
)
"main.ml" 62 2104 2189 "main.ml" 62 2104 2190
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 63 2191 2192 "main.ml" 63 2191 2269
type(
  string
)
"main.ml" 63 2191 2269 "main.ml" 63 2191 2270
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 64 2271 2272 "main.ml" 64 2271 2390
type(
  string
)
"main.ml" 64 2271 2390 "main.ml" 64 2271 2391
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 65 2392 2393 "main.ml" 65 2392 2480
type(
  string
)
"main.ml" 65 2392 2481 "main.ml" 65 2392 2482
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 66 2483 2484 "main.ml" 66 2483 2565
type(
  string
)
"main.ml" 66 2483 2565 "main.ml" 66 2483 2566
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 67 2567 2568 "main.ml" 67 2567 2592
type(
  string
)
"main.ml" 67 2567 2593 "main.ml" 67 2567 2594
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 68 2595 2596 "main.ml" 68 2595 2626
type(
  string
)
"main.ml" 68 2595 2626 "main.ml" 68 2595 2627
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 69 2628 2629 "main.ml" 69 2628 2798
type(
  string
)
"main.ml" 69 2628 2798 "main.ml" 69 2628 2799
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 70 2800 2804 "main.ml" 70 2800 2892
type(
  string
)
"main.ml" 69 2628 2629 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 68 2595 2596 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 67 2567 2568 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 66 2483 2484 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 65 2392 2393 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 64 2271 2272 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 63 2191 2192 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 62 2104 2105 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 61 2074 2075 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 60 1968 1969 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 59 1856 1857 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 58 1831 1832 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 57 1685 1686 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 56 1532 1533 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 55 1510 1511 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 54 1321 1322 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 53 1126 1127 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 52 1094 1095 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 51 1079 1080 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 50 1012 1013 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 49 993 994 "main.ml" 70 2800 2892
call(
  stack
)
type(
  string
)
"main.ml" 77 3207 3211 "main.ml" 77 3207 3215
type(
  Frontc.parsing_arg list ref
)
ident(
  def args "main.ml" 79 3255 3255 "main.ml" 1 0 -1
)
"main.ml" 77 3207 3247 "main.ml" 77 3207 3250
type(
  Frontc.parsing_arg list -> Frontc.parsing_arg list ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 77 3207 3251 "main.ml" 77 3207 3253
type(
  Frontc.parsing_arg list
)
"main.ml" 77 3207 3247 "main.ml" 77 3207 3253
type(
  Frontc.parsing_arg list ref
)
type(
  Frontc.parsing_arg list ref
)
"main.ml" 79 3255 3259 "main.ml" 79 3255 3277
type(
  string list ref
)
ident(
  def list_file_and_name "main.ml" 80 3304 3304 "main.ml" 1 0 -1
)
"main.ml" 79 3255 3297 "main.ml" 79 3255 3300
type(
  string list -> string list ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 79 3255 3301 "main.ml" 79 3255 3303
type(
  string list
)
"main.ml" 79 3255 3297 "main.ml" 79 3255 3303
type(
  string list ref
)
type(
  string list ref
)
"main.ml" 80 3304 3308 "main.ml" 80 3304 3325
type(
  string -> unit
)
ident(
  def add_file_and_name "main.ml" 82 3403 3403 "main.ml" 1 0 -1
)
"main.ml" 80 3304 3326 "main.ml" 80 3304 3334
type(
  string
)
ident(
  def filename "main.ml" 81 3337 3338 "main.ml" 81 3337 3402
)
"main.ml" 81 3337 3338 "main.ml" 81 3337 3356
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 81 3337 3357 "main.ml" 81 3337 3359
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 81 3337 3360 "main.ml" 81 3337 3371
type(
  string list -> string list -> string list
)
ident(
  ext_ref List.append
)
"main.ml" 81 3337 3372 "main.ml" 81 3337 3373
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 81 3337 3373 "main.ml" 81 3337 3391
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 81 3337 3372 "main.ml" 81 3337 3391
type(
  string list
)
"main.ml" 81 3337 3393 "main.ml" 81 3337 3401
type(
  string
)
ident(
  int_ref filename "main.ml" 80 3304 3326 "main.ml" 80 3304 3334
)
"main.ml" 81 3337 3392 "main.ml" 81 3337 3402
type(
  string list
)
"main.ml" 81 3337 3360 "main.ml" 81 3337 3402
call(
  stack
)
type(
  string list
)
"main.ml" 81 3337 3338 "main.ml" 81 3337 3402
type(
  unit
)
"main.ml" 82 3403 3407 "main.ml" 82 3403 3417
type(
  bool ref
)
ident(
  def from_stdin "main.ml" 83 3430 3430 "main.ml" 1 0 -1
)
"main.ml" 82 3403 3420 "main.ml" 82 3403 3423
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 82 3403 3424 "main.ml" 82 3403 3429
type(
  bool
)
"main.ml" 82 3403 3420 "main.ml" 82 3403 3429
type(
  bool ref
)
"main.ml" 83 3430 3434 "main.ml" 83 3430 3447
type(
  string ref
)
ident(
  def fun_list_file "main.ml" 85 3509 3509 "main.ml" 1 0 -1
)
"main.ml" 83 3430 3450 "main.ml" 83 3430 3453
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 83 3430 3454 "main.ml" 83 3430 3456
type(
  string
)
"main.ml" 83 3430 3450 "main.ml" 83 3430 3456
type(
  string ref
)
"main.ml" 85 3509 3513 "main.ml" 85 3509 3525
type(
  string -> string list
)
ident(
  def get_fun_list "main.ml" 100 3865 3865 "main.ml" 1 0 -1
)
"main.ml" 85 3509 3526 "main.ml" 85 3509 3534
type(
  string
)
ident(
  def filename "main.ml" 86 3537 3538 "main.ml" 97 3789 3837
)
"main.ml" 86 3537 3544 "main.ml" 86 3537 3552
type(
  string
)
ident(
  int_ref filename "main.ml" 85 3509 3526 "main.ml" 85 3509 3534
)
"main.ml" 87 3558 3562 "main.ml" 87 3558 3564
type(
  string
)
"main.ml" 87 3558 3568 "main.ml" 87 3558 3570
type(
  string list
)
"main.ml" 88 3571 3575 "main.ml" 88 3571 3576
type(
  string
)
"main.ml" 89 3580 3588 "main.ml" 89 3580 3595
type(
  string ref
)
ident(
  def content "main.ml" 90 3608 3612 "main.ml" 97 3789 3837
)
"main.ml" 89 3580 3598 "main.ml" 89 3580 3601
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 89 3580 3602 "main.ml" 89 3580 3604
type(
  string
)
"main.ml" 89 3580 3598 "main.ml" 89 3580 3604
type(
  string ref
)
"main.ml" 90 3608 3616 "main.ml" 90 3608 3620
type(
  in_channel
)
ident(
  def chan "main.ml" 91 3643 3647 "main.ml" 97 3789 3837
)
"main.ml" 90 3608 3623 "main.ml" 90 3608 3630
type(
  string -> in_channel
)
ident(
  ext_ref Pervasives.open_in
)
"main.ml" 90 3608 3631 "main.ml" 90 3608 3639
type(
  string
)
ident(
  int_ref filename "main.ml" 85 3509 3526 "main.ml" 85 3509 3534
)
"main.ml" 90 3608 3623 "main.ml" 90 3608 3639
call(
  stack
)
type(
  in_channel
)
"main.ml" 92 3651 3663 "main.ml" 92 3651 3668
type(
  bool
)
"main.ml" 93 3672 3680 "main.ml" 93 3672 3687
type(
  string ref
)
ident(
  int_ref content "main.ml" 89 3580 3588 "main.ml" 89 3580 3595
)
"main.ml" 93 3672 3688 "main.ml" 93 3672 3690
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 93 3672 3692 "main.ml" 93 3672 3693
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 93 3672 3693 "main.ml" 93 3672 3700
type(
  string ref
)
ident(
  int_ref content "main.ml" 89 3580 3588 "main.ml" 89 3580 3595
)
"main.ml" 93 3672 3691 "main.ml" 93 3672 3701
type(
  string
)
"main.ml" 93 3672 3702 "main.ml" 93 3672 3703
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 93 3672 3704 "main.ml" 93 3672 3708
type(
  string
)
"main.ml" 93 3672 3709 "main.ml" 93 3672 3710
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 93 3672 3712 "main.ml" 93 3672 3722
type(
  in_channel -> string
)
ident(
  ext_ref Pervasives.input_line
)
"main.ml" 93 3672 3723 "main.ml" 93 3672 3727
type(
  in_channel
)
ident(
  int_ref chan "main.ml" 90 3608 3616 "main.ml" 90 3608 3620
)
"main.ml" 93 3672 3711 "main.ml" 93 3672 3728
call(
  stack
)
type(
  string
)
"main.ml" 93 3672 3704 "main.ml" 93 3672 3728
call(
  stack
)
type(
  string
)
"main.ml" 93 3672 3691 "main.ml" 93 3672 3728
call(
  stack
)
type(
  string
)
"main.ml" 93 3672 3680 "main.ml" 93 3672 3728
type(
  unit
)
"main.ml" 92 3651 3657 "main.ml" 94 3729 3739
type(
  unit
)
"main.ml" 94 3729 3741 "main.ml" 94 3729 3743
type(
  string list
)
"main.ml" 92 3651 3657 "main.ml" 94 3729 3743
type(
  string list
)
"main.ml" 95 3744 3753 "main.ml" 95 3744 3764
type(
  exn
)
"main.ml" 96 3768 3774 "main.ml" 96 3768 3782
type(
  in_channel -> unit
)
ident(
  ext_ref Pervasives.close_in
)
"main.ml" 96 3768 3783 "main.ml" 96 3768 3787
type(
  in_channel
)
ident(
  int_ref chan "main.ml" 90 3608 3616 "main.ml" 90 3608 3620
)
"main.ml" 96 3768 3774 "main.ml" 96 3768 3787
call(
  stack
)
type(
  unit
)
"main.ml" 97 3789 3795 "main.ml" 97 3789 3804
type(
  Str.regexp -> string -> string list
)
ident(
  ext_ref Str.split
)
"main.ml" 97 3789 3806 "main.ml" 97 3789 3816
type(
  string -> Str.regexp
)
ident(
  ext_ref Str.regexp
)
"main.ml" 97 3789 3817 "main.ml" 97 3789 3827
type(
  string
)
"main.ml" 97 3789 3805 "main.ml" 97 3789 3828
call(
  stack
)
type(
  Str.regexp
)
"main.ml" 97 3789 3829 "main.ml" 97 3789 3830
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 97 3789 3830 "main.ml" 97 3789 3837
type(
  string ref
)
ident(
  int_ref content "main.ml" 89 3580 3588 "main.ml" 89 3580 3595
)
"main.ml" 97 3789 3829 "main.ml" 97 3789 3837
type(
  string
)
"main.ml" 97 3789 3795 "main.ml" 97 3789 3837
call(
  tail
)
type(
  string list
)
"main.ml" 96 3768 3774 "main.ml" 97 3789 3837
type(
  string list
)
"main.ml" 91 3643 3647 "main.ml" 97 3789 3837
type(
  string list
)
"main.ml" 90 3608 3612 "main.ml" 97 3789 3837
type(
  string list
)
"main.ml" 89 3580 3584 "main.ml" 97 3789 3837
type(
  string list
)
"main.ml" 86 3537 3538 "main.ml" 97 3789 3837
type(
  string list
)
"main.ml" 100 3865 3869 "main.ml" 100 3865 3880
type(
  bool ref
)
ident(
  def run_calipso "main.ml" 101 3893 3893 "main.ml" 1 0 -1
)
"main.ml" 100 3865 3883 "main.ml" 100 3865 3886
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 100 3865 3887 "main.ml" 100 3865 3892
type(
  bool
)
"main.ml" 100 3865 3883 "main.ml" 100 3865 3892
type(
  bool ref
)
"main.ml" 101 3893 3897 "main.ml" 101 3893 3909
type(
  bool ref
)
ident(
  def calipso_rrec "main.ml" 102 3922 3922 "main.ml" 1 0 -1
)
"main.ml" 101 3893 3912 "main.ml" 101 3893 3915
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 101 3893 3916 "main.ml" 101 3893 3921
type(
  bool
)
"main.ml" 101 3893 3912 "main.ml" 101 3893 3921
type(
  bool ref
)
"main.ml" 102 3922 3926 "main.ml" 102 3922 3937
type(
  bool ref
)
ident(
  def frontc_frec "main.ml" 111 4163 4163 "main.ml" 1 0 -1
)
"main.ml" 102 3922 3940 "main.ml" 102 3922 3943
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 102 3922 3944 "main.ml" 102 3922 3949
type(
  bool
)
"main.ml" 102 3922 3940 "main.ml" 102 3922 3949
type(
  bool ref
)
"main.ml" 111 4163 4167 "main.ml" 111 4163 4175
type(
  string ref
)
ident(
  def out_file "main.ml" 112 4185 4185 "main.ml" 1 0 -1
)
"main.ml" 111 4163 4178 "main.ml" 111 4163 4181
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 111 4163 4182 "main.ml" 111 4163 4184
type(
  string
)
"main.ml" 111 4163 4178 "main.ml" 111 4163 4184
type(
  string ref
)
"main.ml" 112 4185 4189 "main.ml" 112 4185 4196
type(
  string ref
)
ident(
  def out_dir "main.ml" 113 4207 4207 "main.ml" 1 0 -1
)
"main.ml" 112 4185 4199 "main.ml" 112 4185 4202
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 112 4185 4203 "main.ml" 112 4185 4206
type(
  string
)
"main.ml" 112 4185 4199 "main.ml" 112 4185 4206
type(
  string ref
)
"main.ml" 113 4207 4211 "main.ml" 113 4207 4220
type(
  bool ref
)
ident(
  def print_exp "main.ml" 116 4251 4251 "main.ml" 1 0 -1
)
"main.ml" 113 4207 4223 "main.ml" 113 4207 4226
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 113 4207 4227 "main.ml" 113 4207 4232
type(
  bool
)
"main.ml" 113 4207 4223 "main.ml" 113 4207 4232
type(
  bool ref
)
"main.ml" 116 4251 4255 "main.ml" 116 4251 4259
type(
  bool ref
)
ident(
  def auto "main.ml" 117 4272 4272 "main.ml" 1 0 -1
)
"main.ml" 116 4251 4262 "main.ml" 116 4251 4265
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 116 4251 4266 "main.ml" 116 4251 4271
type(
  bool
)
"main.ml" 116 4251 4262 "main.ml" 116 4251 4271
type(
  bool ref
)
"main.ml" 117 4272 4276 "main.ml" 117 4272 4291
type(
  bool ref
)
ident(
  def allow_pessimism "main.ml" 120 4325 4325 "main.ml" 1 0 -1
)
"main.ml" 117 4272 4294 "main.ml" 117 4272 4297
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 117 4272 4298 "main.ml" 117 4272 4303
type(
  bool
)
"main.ml" 117 4272 4294 "main.ml" 117 4272 4303
type(
  bool ref
)
"main.ml" 120 4325 4329 "main.ml" 120 4325 4336
type(
  bool ref
)
ident(
  def partial "main.ml" 123 4368 4368 "main.ml" 1 0 -1
)
"main.ml" 120 4325 4339 "main.ml" 120 4325 4342
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 120 4325 4343 "main.ml" 120 4325 4348
type(
  bool
)
"main.ml" 120 4325 4339 "main.ml" 120 4325 4348
type(
  bool ref
)
"main.ml" 123 4368 4372 "main.ml" 123 4368 4382
type(
  bool ref
)
ident(
  def onlyGraphe "main.ml" 124 4395 4395 "main.ml" 1 0 -1
)
"main.ml" 123 4368 4385 "main.ml" 123 4368 4388
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 123 4368 4389 "main.ml" 123 4368 4394
type(
  bool
)
"main.ml" 123 4368 4385 "main.ml" 123 4368 4394
type(
  bool ref
)
"main.ml" 124 4395 4399 "main.ml" 124 4395 4413
type(
  bool ref
)
ident(
  def completeGraphe "main.ml" 125 4426 4426 "main.ml" 1 0 -1
)
"main.ml" 124 4395 4416 "main.ml" 124 4395 4419
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 124 4395 4420 "main.ml" 124 4395 4425
type(
  bool
)
"main.ml" 124 4395 4416 "main.ml" 124 4395 4425
type(
  bool ref
)
"main.ml" 125 4426 4430 "main.ml" 125 4426 4449
type(
  'a -> bool
)
ident(
  def existsPartialResult "main.ml" 126 4460 4460 "main.ml" 1 0 -1
)
"main.ml" 125 4426 4450 "main.ml" 125 4426 4451
type(
  'a
)
"main.ml" 125 4426 4454 "main.ml" 125 4426 4459
type(
  bool
)
"main.ml" 126 4460 4464 "main.ml" 126 4460 4490
type(
  bool ref
)
ident(
  def withoutGlobalAndStaticInit "main.ml" 127 4503 4503 "main.ml" 1 0 -1
)
"main.ml" 126 4460 4493 "main.ml" 126 4460 4496
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 126 4460 4497 "main.ml" 126 4460 4502
type(
  bool
)
"main.ml" 126 4460 4493 "main.ml" 126 4460 4502
type(
  bool ref
)
"main.ml" 127 4503 4507 "main.ml" 127 4503 4516
type(
  bool ref
)
ident(
  def multiTree "main.ml" 128 4529 4529 "main.ml" 1 0 -1
)
"main.ml" 127 4503 4519 "main.ml" 127 4503 4522
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 127 4503 4523 "main.ml" 127 4503 4528
type(
  bool
)
"main.ml" 127 4503 4519 "main.ml" 127 4503 4528
type(
  bool ref
)
"main.ml" 128 4529 4533 "main.ml" 128 4529 4539
type(
  bool ref
)
ident(
  def resume "main.ml" 132 4606 4606 "main.ml" 1 0 -1
)
"main.ml" 128 4529 4542 "main.ml" 128 4529 4545
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 128 4529 4546 "main.ml" 128 4529 4551
type(
  bool
)
"main.ml" 128 4529 4542 "main.ml" 128 4529 4551
type(
  bool ref
)
"main.ml" 132 4606 4610 "main.ml" 132 4606 4614
type(
  (string * Arg.spec * string) list
)
ident(
  def opts "main.ml" 214 9375 9375 "main.ml" 1 0 -1
)
"main.ml" 141 4961 4963 "main.ml" 141 4961 4971
type(
  string
)
"main.ml" 141 4961 4988 "main.ml" 141 4961 4999
type(
  string ref
)
ident(
  ext_ref Util.in_ffx_file
)
"main.ml" 141 4961 4973 "main.ml" 141 4961 4999
type(
  Arg.spec
)
"main.ml" 142 5002 5004 "main.ml" 142 5002 5070
type(
  string
)
"main.ml" 141 4961 4962 "main.ml" 142 5002 5071
type(
  string * Arg.spec * string
)
"main.ml" 143 5073 5075 "main.ml" 143 5073 5084
type(
  string
)
"main.ml" 143 5073 5094 "main.ml" 143 5073 5099
type(
  bool ref
)
ident(
  ext_ref Util.ghost
)
"main.ml" 143 5073 5086 "main.ml" 143 5073 5099
type(
  Arg.spec
)
"main.ml" 144 5101 5103 "main.ml" 144 5101 5194
type(
  string
)
"main.ml" 143 5073 5074 "main.ml" 144 5101 5195
type(
  string * Arg.spec * string
)
"main.ml" 145 5197 5199 "main.ml" 145 5197 5208
type(
  string
)
"main.ml" 145 5197 5224 "main.ml" 145 5197 5226
type(
  unit
)
"main.ml" 145 5197 5230 "main.ml" 145 5197 5235
type(
  [ `Run of [ `OutDir of string ] | `Skip ] ref
)
ident(
  ext_ref Util.delta
)
"main.ml" 145 5197 5236 "main.ml" 145 5197 5238
type(
  [ `Run of [ `OutDir of string ] | `Skip ] ref ->
  [ `Run of [ `OutDir of string ] | `Skip ] -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 145 5197 5253 "main.ml" 145 5197 5256
type(
  string
)
"main.ml" 145 5197 5244 "main.ml" 145 5197 5257
type(
  [ `OutDir of string ]
)
"main.ml" 145 5197 5239 "main.ml" 145 5197 5257
type(
  [ `Run of [ `OutDir of string ] | `Skip ]
)
"main.ml" 145 5197 5230 "main.ml" 145 5197 5257
type(
  unit
)
"main.ml" 145 5197 5219 "main.ml" 145 5197 5259
type(
  unit -> unit
)
"main.ml" 145 5197 5210 "main.ml" 145 5197 5259
type(
  Arg.spec
)
"main.ml" 146 5261 5263 "main.ml" 146 5261 5311
type(
  string
)
"main.ml" 145 5197 5198 "main.ml" 146 5261 5312
type(
  string * Arg.spec * string
)
"main.ml" 147 5314 5316 "main.ml" 147 5314 5326
type(
  string
)
"main.ml" 147 5314 5344 "main.ml" 147 5314 5347
type(
  string
)
ident(
  def dir "main.ml" 147 5314 5351 "main.ml" 147 5314 5378
)
"main.ml" 147 5314 5351 "main.ml" 147 5314 5356
type(
  [ `Run of [ `OutDir of string ] | `Skip ] ref
)
ident(
  ext_ref Util.delta
)
"main.ml" 147 5314 5357 "main.ml" 147 5314 5359
type(
  [ `Run of [ `OutDir of string ] | `Skip ] ref ->
  [ `Run of [ `OutDir of string ] | `Skip ] -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 147 5314 5374 "main.ml" 147 5314 5377
type(
  string
)
ident(
  int_ref dir "main.ml" 147 5314 5344 "main.ml" 147 5314 5347
)
"main.ml" 147 5314 5365 "main.ml" 147 5314 5378
type(
  [ `OutDir of string ]
)
"main.ml" 147 5314 5360 "main.ml" 147 5314 5378
type(
  [ `Run of [ `OutDir of string ] | `Skip ]
)
"main.ml" 147 5314 5351 "main.ml" 147 5314 5378
type(
  unit
)
"main.ml" 147 5314 5339 "main.ml" 147 5314 5379
type(
  string -> unit
)
"main.ml" 147 5314 5328 "main.ml" 147 5314 5379
type(
  Arg.spec
)
"main.ml" 148 5381 5383 "main.ml" 148 5381 5477
type(
  string
)
"main.ml" 147 5314 5315 "main.ml" 148 5381 5478
type(
  string * Arg.spec * string
)
"main.ml" 149 5480 5482 "main.ml" 149 5480 5490
type(
  string
)
"main.ml" 149 5480 5500 "main.ml" 149 5480 5504
type(
  bool ref
)
ident(
  ext_ref Util.wcee
)
"main.ml" 149 5480 5492 "main.ml" 149 5480 5504
type(
  Arg.spec
)
"main.ml" 150 5506 5508 "main.ml" 150 5506 5573
type(
  string
)
"main.ml" 149 5480 5481 "main.ml" 150 5506 5574
type(
  string * Arg.spec * string
)
"main.ml" 151 5576 5578 "main.ml" 151 5576 5582
type(
  string
)
"main.ml" 151 5576 5592 "main.ml" 151 5576 5602
type(
  bool ref
)
ident(
  int_ref from_stdin "main.ml" 82 3403 3407 "main.ml" 82 3403 3417
)
"main.ml" 151 5576 5584 "main.ml" 151 5576 5602
type(
  Arg.spec
)
"main.ml" 152 5604 5606 "main.ml" 152 5604 5640
type(
  string
)
"main.ml" 151 5576 5577 "main.ml" 152 5604 5641
type(
  string * Arg.spec * string
)
"main.ml" 153 5643 5645 "main.ml" 153 5643 5656
type(
  string
)
"main.ml" 153 5643 5674 "main.ml" 153 5643 5678
type(
  string
)
ident(
  def file "main.ml" 153 5643 5682 "main.ml" 153 5643 5703
)
"main.ml" 153 5643 5682 "main.ml" 153 5643 5695
type(
  string ref
)
ident(
  int_ref fun_list_file "main.ml" 83 3430 3434 "main.ml" 83 3430 3447
)
"main.ml" 153 5643 5696 "main.ml" 153 5643 5698
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 153 5643 5699 "main.ml" 153 5643 5703
type(
  string
)
ident(
  int_ref file "main.ml" 153 5643 5674 "main.ml" 153 5643 5678
)
"main.ml" 153 5643 5682 "main.ml" 153 5643 5703
type(
  unit
)
"main.ml" 153 5643 5669 "main.ml" 153 5643 5704
type(
  string -> unit
)
"main.ml" 153 5643 5658 "main.ml" 153 5643 5704
type(
  Arg.spec
)
"main.ml" 154 5706 5708 "main.ml" 154 5706 5763
type(
  string
)
"main.ml" 153 5643 5644 "main.ml" 154 5706 5764
type(
  string * Arg.spec * string
)
"main.ml" 155 5766 5768 "main.ml" 155 5766 5774
type(
  string
)
"main.ml" 155 5766 5792 "main.ml" 155 5766 5796
type(
  string
)
ident(
  def name "main.ml" 155 5766 5800 "main.ml" 155 5766 5941
)
"main.ml" 155 5766 5800 "main.ml" 155 5766 5831
type(
  string -> unit
)
ident(
  ext_ref Cextraireboucle.add_use_partial
)
"main.ml" 155 5766 5832 "main.ml" 155 5766 5836
type(
  string
)
ident(
  int_ref name "main.ml" 155 5766 5792 "main.ml" 155 5766 5796
)
"main.ml" 155 5766 5800 "main.ml" 155 5766 5836
call(
  stack
)
type(
  unit
)
"main.ml" 155 5766 5838 "main.ml" 155 5766 5859
type(
  (string * Cvarabs.typeListeAS) list ref
)
ident(
  ext_ref Util.alreadyEvalFunctionAS
)
"main.ml" 155 5766 5860 "main.ml" 155 5766 5862
type(
  (string * Cvarabs.typeListeAS) list ref ->
  (string * Cvarabs.typeListeAS) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 155 5766 5863 "main.ml" 155 5766 5871
type(
  (string -> string * Cvarabs.typeListeAS) ->
  string list -> (string * Cvarabs.typeListeAS) list
)
ident(
  ext_ref List.map
)
"main.ml" 155 5766 5877 "main.ml" 155 5766 5878
type(
  string
)
ident(
  def n "main.ml" 155 5766 5883 "main.ml" 155 5766 5924
)
"main.ml" 155 5766 5884 "main.ml" 155 5766 5885
type(
  string
)
ident(
  int_ref n "main.ml" 155 5766 5877 "main.ml" 155 5766 5878
)
"main.ml" 155 5766 5886 "main.ml" 155 5766 5921
type(
  string -> Cvarabs.typeListeAS
)
ident(
  ext_ref Cextraireboucle.getAbsStoreFromComp
)
"main.ml" 155 5766 5922 "main.ml" 155 5766 5923
type(
  string
)
ident(
  int_ref n "main.ml" 155 5766 5877 "main.ml" 155 5766 5878
)
"main.ml" 155 5766 5886 "main.ml" 155 5766 5923
call(
  stack
)
type(
  Cvarabs.typeListeAS
)
"main.ml" 155 5766 5883 "main.ml" 155 5766 5924
type(
  string * Cvarabs.typeListeAS
)
"main.ml" 155 5766 5872 "main.ml" 155 5766 5927
type(
  string -> string * Cvarabs.typeListeAS
)
"main.ml" 155 5766 5927 "main.ml" 155 5766 5928
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 155 5766 5928 "main.ml" 155 5766 5939
type(
  string list ref
)
ident(
  ext_ref Cextraireboucle.use_partial
)
"main.ml" 155 5766 5927 "main.ml" 155 5766 5939
type(
  string list
)
"main.ml" 155 5766 5863 "main.ml" 155 5766 5939
call(
  stack
)
type(
  (string * Cvarabs.typeListeAS) list
)
"main.ml" 155 5766 5838 "main.ml" 155 5766 5941
type(
  unit
)
"main.ml" 155 5766 5800 "main.ml" 155 5766 5941
type(
  unit
)
"main.ml" 155 5766 5787 "main.ml" 155 5766 5942
type(
  string -> unit
)
"main.ml" 155 5766 5776 "main.ml" 155 5766 5942
type(
  Arg.spec
)
"main.ml" 156 5944 5946 "main.ml" 156 5944 5996
type(
  string
)
"main.ml" 155 5766 5767 "main.ml" 156 5944 5997
type(
  string * Arg.spec * string
)
"main.ml" 157 5999 6001 "main.ml" 157 5999 6011
type(
  string
)
"main.ml" 157 5999 6028 "main.ml" 157 5999 6031
type(
  string
)
ident(
  def dir "main.ml" 157 5999 6036 "main.ml" 157 5999 6091
)
"main.ml" 157 5999 6036 "main.ml" 157 5999 6056
type(
  bool ref
)
ident(
  ext_ref Util.hasCondListFile_name
)
"main.ml" 157 5999 6057 "main.ml" 157 5999 6059
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 157 5999 6059 "main.ml" 157 5999 6063
type(
  bool
)
"main.ml" 157 5999 6036 "main.ml" 157 5999 6063
type(
  unit
)
"main.ml" 157 5999 6066 "main.ml" 157 5999 6083
type(
  string ref
)
ident(
  ext_ref Util.condListFile_name
)
"main.ml" 157 5999 6085 "main.ml" 157 5999 6087
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 157 5999 6088 "main.ml" 157 5999 6091
type(
  string
)
ident(
  int_ref dir "main.ml" 157 5999 6028 "main.ml" 157 5999 6031
)
"main.ml" 157 5999 6066 "main.ml" 157 5999 6091
type(
  unit
)
"main.ml" 157 5999 6036 "main.ml" 157 5999 6091
type(
  unit
)
"main.ml" 157 5999 6023 "main.ml" 157 5999 6092
type(
  string -> unit
)
"main.ml" 157 5999 6012 "main.ml" 157 5999 6092
type(
  Arg.spec
)
"main.ml" 158 6094 6096 "main.ml" 158 6094 6184
type(
  string
)
"main.ml" 157 5999 6000 "main.ml" 158 6094 6185
type(
  string * Arg.spec * string
)
"main.ml" 160 6207 6209 "main.ml" 160 6207 6217
type(
  string
)
"main.ml" 160 6207 6227 "main.ml" 160 6207 6231
type(
  bool ref
)
ident(
  int_ref auto "main.ml" 116 4251 4255 "main.ml" 116 4251 4259
)
"main.ml" 160 6207 6219 "main.ml" 160 6207 6231
type(
  Arg.spec
)
"main.ml" 161 6233 6235 "main.ml" 161 6233 6260
type(
  string
)
"main.ml" 160 6207 6208 "main.ml" 161 6233 6261
type(
  string * Arg.spec * string
)
"main.ml" 162 6263 6265 "main.ml" 162 6263 6278
type(
  string
)
"main.ml" 162 6263 6288 "main.ml" 162 6263 6297
type(
  bool ref
)
ident(
  int_ref print_exp "main.ml" 113 4207 4211 "main.ml" 113 4207 4220
)
"main.ml" 162 6263 6280 "main.ml" 162 6263 6297
type(
  Arg.spec
)
"main.ml" 162 6263 6299 "main.ml" 162 6263 6341
type(
  string
)
"main.ml" 162 6263 6264 "main.ml" 162 6263 6342
type(
  string * Arg.spec * string
)
"main.ml" 163 6344 6346 "main.ml" 163 6344 6365
type(
  string
)
"main.ml" 163 6344 6375 "main.ml" 163 6344 6390
type(
  bool ref
)
ident(
  int_ref allow_pessimism "main.ml" 117 4272 4276 "main.ml" 117 4272 4291
)
"main.ml" 163 6344 6367 "main.ml" 163 6344 6390
type(
  Arg.spec
)
"main.ml" 164 6392 6394 "main.ml" 164 6392 6473
type(
  string
)
"main.ml" 163 6344 6345 "main.ml" 164 6392 6474
type(
  string * Arg.spec * string
)
"main.ml" 165 6476 6478 "main.ml" 165 6476 6482
type(
  string
)
"main.ml" 165 6476 6492 "main.ml" 165 6476 6499
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 165 6476 6484 "main.ml" 165 6476 6499
type(
  Arg.spec
)
"main.ml" 166 6501 6503 "main.ml" 166 6501 6552
type(
  string
)
"main.ml" 165 6476 6477 "main.ml" 166 6501 6553
type(
  string * Arg.spec * string
)
"main.ml" 168 6577 6579 "main.ml" 168 6577 6583
type(
  string
)
"main.ml" 168 6577 6600 "main.ml" 168 6577 6608
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 168 6577 6585 "main.ml" 168 6577 6608
type(
  Arg.spec
)
"main.ml" 169 6610 6612 "main.ml" 169 6610 6650
type(
  string
)
"main.ml" 168 6577 6578 "main.ml" 169 6610 6651
type(
  string * Arg.spec * string
)
"main.ml" 170 6653 6655 "main.ml" 170 6653 6668
type(
  string
)
"main.ml" 170 6653 6686 "main.ml" 170 6653 6689
type(
  string
)
ident(
  def dir "main.ml" 170 6653 6693 "main.ml" 170 6653 6741
)
"main.ml" 170 6653 6693 "main.ml" 170 6653 6700
type(
  string ref
)
ident(
  int_ref out_dir "main.ml" 112 4185 4189 "main.ml" 112 4185 4196
)
"main.ml" 170 6653 6701 "main.ml" 170 6653 6703
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 170 6653 6704 "main.ml" 170 6653 6707
type(
  string
)
ident(
  int_ref dir "main.ml" 170 6653 6686 "main.ml" 170 6653 6689
)
"main.ml" 170 6653 6693 "main.ml" 170 6653 6707
type(
  unit
)
"main.ml" 170 6653 6709 "main.ml" 170 6653 6736
type(
  string -> unit
)
ident(
  ext_ref Cextraireboucle.set_out_dir
)
"main.ml" 170 6653 6737 "main.ml" 170 6653 6740
type(
  string
)
ident(
  int_ref dir "main.ml" 170 6653 6686 "main.ml" 170 6653 6689
)
"main.ml" 170 6653 6709 "main.ml" 170 6653 6741
call(
  tail
)
type(
  unit
)
"main.ml" 170 6653 6693 "main.ml" 170 6653 6741
type(
  unit
)
"main.ml" 170 6653 6681 "main.ml" 170 6653 6742
type(
  string -> unit
)
"main.ml" 170 6653 6670 "main.ml" 170 6653 6742
type(
  Arg.spec
)
"main.ml" 171 6744 6746 "main.ml" 171 6744 6826
type(
  string
)
"main.ml" 170 6653 6654 "main.ml" 171 6744 6827
type(
  string * Arg.spec * string
)
"main.ml" 172 6829 6831 "main.ml" 172 6829 6857
type(
  string
)
"main.ml" 172 6829 6868 "main.ml" 172 6829 6894
type(
  bool ref
)
ident(
  int_ref withoutGlobalAndStaticInit "main.ml" 126 4460 4464 "main.ml" 126 4460 4490
)
"main.ml" 172 6829 6860 "main.ml" 172 6829 6894
type(
  Arg.spec
)
"main.ml" 173 6898 6900 "main.ml" 173 6898 6942
type(
  string
)
"main.ml" 172 6829 6830 "main.ml" 173 6898 6943
type(
  string * Arg.spec * string
)
"main.ml" 174 6945 6950 "main.ml" 174 6945 6959
type(
  string
)
"main.ml" 174 6945 6970 "main.ml" 174 6945 6981
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 174 6945 6962 "main.ml" 174 6945 6981
type(
  Arg.spec
)
"main.ml" 175 6985 6987 "main.ml" 175 6985 7022
type(
  string
)
"main.ml" 174 6945 6949 "main.ml" 175 6985 7023
type(
  string * Arg.spec * string
)
"main.ml" 176 7025 7030 "main.ml" 176 7025 7040
type(
  string
)
"main.ml" 176 7025 7051 "main.ml" 176 7025 7057
type(
  bool ref
)
ident(
  int_ref resume "main.ml" 128 4529 4533 "main.ml" 128 4529 4539
)
"main.ml" 176 7025 7043 "main.ml" 176 7025 7057
type(
  Arg.spec
)
"main.ml" 177 7061 7063 "main.ml" 177 7061 7181
type(
  string
)
"main.ml" 176 7025 7029 "main.ml" 177 7061 7182
type(
  string * Arg.spec * string
)
"main.ml" 178 7184 7189 "main.ml" 178 7184 7202
type(
  string
)
"main.ml" 178 7184 7212 "main.ml" 178 7184 7221
type(
  bool ref
)
ident(
  int_ref multiTree "main.ml" 127 4503 4507 "main.ml" 127 4503 4516
)
"main.ml" 178 7184 7204 "main.ml" 178 7184 7221
type(
  Arg.spec
)
"main.ml" 179 7225 7227 "main.ml" 179 7225 7269
type(
  string
)
"main.ml" 178 7184 7188 "main.ml" 179 7225 7270
type(
  string * Arg.spec * string
)
"main.ml" 181 7287 7289 "main.ml" 181 7287 7293
type(
  string
)
"main.ml" 181 7287 7309 "main.ml" 181 7287 7310
type(
  unit
)
"main.ml" 181 7287 7313 "main.ml" 181 7287 7317
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 181 7287 7318 "main.ml" 181 7287 7320
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 181 7287 7341 "main.ml" 181 7287 7345
type(
  bool
)
"main.ml" 181 7287 7321 "main.ml" 181 7287 7346
type(
  Frontc.parsing_arg
)
"main.ml" 181 7287 7348 "main.ml" 181 7287 7349
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 181 7287 7349 "main.ml" 181 7287 7353
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 181 7287 7348 "main.ml" 181 7287 7353
type(
  Frontc.parsing_arg list
)
"main.ml" 181 7287 7321 "main.ml" 181 7287 7353
type(
  Frontc.parsing_arg list
)
"main.ml" 181 7287 7313 "main.ml" 181 7287 7353
type(
  unit
)
"main.ml" 181 7287 7357 "main.ml" 181 7287 7369
type(
  bool ref
)
ident(
  int_ref calipso_rrec "main.ml" 101 3893 3897 "main.ml" 101 3893 3909
)
"main.ml" 181 7287 7370 "main.ml" 181 7287 7372
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 181 7287 7373 "main.ml" 181 7287 7377
type(
  bool
)
"main.ml" 181 7287 7357 "main.ml" 181 7287 7377
type(
  unit
)
"main.ml" 181 7287 7379 "main.ml" 181 7287 7390
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 181 7287 7391 "main.ml" 181 7287 7393
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 181 7287 7394 "main.ml" 181 7287 7398
type(
  bool
)
"main.ml" 181 7287 7379 "main.ml" 181 7287 7398
type(
  unit
)
"main.ml" 181 7287 7399 "main.ml" 181 7287 7403
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 181 7287 7404 "main.ml" 181 7287 7406
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 181 7287 7407 "main.ml" 181 7287 7414
type(
  Frontc.parsing_arg
)
"main.ml" 181 7287 7418 "main.ml" 181 7287 7419
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 181 7287 7419 "main.ml" 181 7287 7423
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 181 7287 7418 "main.ml" 181 7287 7423
type(
  Frontc.parsing_arg list
)
"main.ml" 181 7287 7407 "main.ml" 181 7287 7423
type(
  Frontc.parsing_arg list
)
"main.ml" 181 7287 7399 "main.ml" 181 7287 7423
type(
  unit
)
"main.ml" 181 7287 7424 "main.ml" 181 7287 7434
type(
  bool ref
)
ident(
  int_ref onlyGraphe "main.ml" 123 4368 4372 "main.ml" 123 4368 4382
)
"main.ml" 181 7287 7435 "main.ml" 181 7287 7437
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 181 7287 7438 "main.ml" 181 7287 7442
type(
  bool
)
"main.ml" 181 7287 7424 "main.ml" 181 7287 7442
type(
  unit
)
"main.ml" 181 7287 7399 "main.ml" 181 7287 7442
type(
  unit
)
"main.ml" 181 7287 7379 "main.ml" 181 7287 7442
type(
  unit
)
"main.ml" 181 7287 7357 "main.ml" 181 7287 7442
type(
  unit
)
"main.ml" 181 7287 7313 "main.ml" 181 7287 7442
type(
  unit
)
"main.ml" 181 7287 7304 "main.ml" 181 7287 7443
type(
  unit -> unit
)
"main.ml" 181 7287 7295 "main.ml" 181 7287 7443
type(
  Arg.spec
)
"main.ml" 182 7445 7447 "main.ml" 182 7445 7510
type(
  string
)
"main.ml" 181 7287 7288 "main.ml" 182 7445 7511
type(
  string * Arg.spec * string
)
"main.ml" 184 7541 7543 "main.ml" 184 7541 7552
type(
  string
)
"main.ml" 184 7541 7569 "main.ml" 184 7541 7570
type(
  unit
)
"main.ml" 184 7541 7573 "main.ml" 184 7541 7577
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7578 "main.ml" 184 7541 7580
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 184 7541 7601 "main.ml" 184 7541 7605
type(
  bool
)
"main.ml" 184 7541 7581 "main.ml" 184 7541 7606
type(
  Frontc.parsing_arg
)
"main.ml" 184 7541 7608 "main.ml" 184 7541 7609
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 184 7541 7609 "main.ml" 184 7541 7613
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7608 "main.ml" 184 7541 7613
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7581 "main.ml" 184 7541 7613
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7573 "main.ml" 184 7541 7613
type(
  unit
)
"main.ml" 184 7541 7617 "main.ml" 184 7541 7629
type(
  bool ref
)
ident(
  int_ref calipso_rrec "main.ml" 101 3893 3897 "main.ml" 101 3893 3909
)
"main.ml" 184 7541 7630 "main.ml" 184 7541 7632
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 184 7541 7633 "main.ml" 184 7541 7637
type(
  bool
)
"main.ml" 184 7541 7617 "main.ml" 184 7541 7637
type(
  unit
)
"main.ml" 184 7541 7639 "main.ml" 184 7541 7650
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 184 7541 7651 "main.ml" 184 7541 7653
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 184 7541 7654 "main.ml" 184 7541 7658
type(
  bool
)
"main.ml" 184 7541 7639 "main.ml" 184 7541 7658
type(
  unit
)
"main.ml" 184 7541 7659 "main.ml" 184 7541 7663
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7664 "main.ml" 184 7541 7666
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 184 7541 7667 "main.ml" 184 7541 7674
type(
  Frontc.parsing_arg
)
"main.ml" 184 7541 7678 "main.ml" 184 7541 7679
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 184 7541 7679 "main.ml" 184 7541 7683
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7678 "main.ml" 184 7541 7683
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7667 "main.ml" 184 7541 7683
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7659 "main.ml" 184 7541 7683
type(
  unit
)
"main.ml" 184 7541 7685 "main.ml" 184 7541 7689
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7690 "main.ml" 184 7541 7692
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 184 7541 7706 "main.ml" 184 7541 7711
type(
  bool
)
"main.ml" 184 7541 7693 "main.ml" 184 7541 7712
type(
  Frontc.parsing_arg
)
"main.ml" 184 7541 7716 "main.ml" 184 7541 7717
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 184 7541 7717 "main.ml" 184 7541 7721
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 184 7541 7716 "main.ml" 184 7541 7721
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7693 "main.ml" 184 7541 7721
type(
  Frontc.parsing_arg list
)
"main.ml" 184 7541 7685 "main.ml" 184 7541 7721
type(
  unit
)
"main.ml" 184 7541 7659 "main.ml" 184 7541 7721
type(
  unit
)
"main.ml" 184 7541 7639 "main.ml" 184 7541 7721
type(
  unit
)
"main.ml" 184 7541 7617 "main.ml" 184 7541 7721
type(
  unit
)
"main.ml" 184 7541 7573 "main.ml" 184 7541 7721
type(
  unit
)
"main.ml" 184 7541 7564 "main.ml" 184 7541 7722
type(
  unit -> unit
)
"main.ml" 184 7541 7555 "main.ml" 184 7541 7722
type(
  Arg.spec
)
"main.ml" 185 7724 7726 "main.ml" 185 7724 7758
type(
  string
)
"main.ml" 184 7541 7542 "main.ml" 185 7724 7759
type(
  string * Arg.spec * string
)
"main.ml" 192 8273 8275 "main.ml" 192 8273 8283
type(
  string
)
"main.ml" 192 8273 8299 "main.ml" 192 8273 8300
type(
  unit
)
"main.ml" 192 8273 8304 "main.ml" 192 8273 8308
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 192 8273 8309 "main.ml" 192 8273 8311
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 192 8273 8332 "main.ml" 192 8273 8336
type(
  bool
)
"main.ml" 192 8273 8312 "main.ml" 192 8273 8337
type(
  Frontc.parsing_arg
)
"main.ml" 192 8273 8339 "main.ml" 192 8273 8340
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 192 8273 8340 "main.ml" 192 8273 8344
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 192 8273 8339 "main.ml" 192 8273 8344
type(
  Frontc.parsing_arg list
)
"main.ml" 192 8273 8312 "main.ml" 192 8273 8344
type(
  Frontc.parsing_arg list
)
"main.ml" 192 8273 8304 "main.ml" 192 8273 8344
type(
  unit
)
"main.ml" 192 8273 8346 "main.ml" 192 8273 8357
type(
  bool ref
)
ident(
  int_ref frontc_frec "main.ml" 102 3922 3926 "main.ml" 102 3922 3937
)
"main.ml" 192 8273 8358 "main.ml" 192 8273 8360
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 192 8273 8361 "main.ml" 192 8273 8365
type(
  bool
)
"main.ml" 192 8273 8346 "main.ml" 192 8273 8365
type(
  unit
)
"main.ml" 192 8273 8366 "main.ml" 192 8273 8377
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 192 8273 8378 "main.ml" 192 8273 8380
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 192 8273 8381 "main.ml" 192 8273 8386
type(
  bool
)
"main.ml" 192 8273 8366 "main.ml" 192 8273 8386
type(
  unit
)
"main.ml" 192 8273 8388 "main.ml" 192 8273 8392
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 192 8273 8393 "main.ml" 192 8273 8395
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 192 8273 8396 "main.ml" 192 8273 8403
type(
  Frontc.parsing_arg
)
"main.ml" 192 8273 8407 "main.ml" 192 8273 8408
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 192 8273 8408 "main.ml" 192 8273 8412
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 192 8273 8407 "main.ml" 192 8273 8412
type(
  Frontc.parsing_arg list
)
"main.ml" 192 8273 8396 "main.ml" 192 8273 8412
type(
  Frontc.parsing_arg list
)
"main.ml" 192 8273 8388 "main.ml" 192 8273 8412
type(
  unit
)
"main.ml" 192 8273 8366 "main.ml" 192 8273 8412
type(
  unit
)
"main.ml" 192 8273 8346 "main.ml" 192 8273 8412
type(
  unit
)
"main.ml" 192 8273 8304 "main.ml" 192 8273 8412
type(
  unit
)
"main.ml" 192 8273 8294 "main.ml" 192 8273 8414
type(
  unit -> unit
)
"main.ml" 192 8273 8285 "main.ml" 192 8273 8414
type(
  Arg.spec
)
"main.ml" 193 8416 8418 "main.ml" 193 8416 8534
type(
  string
)
"main.ml" 192 8273 8274 "main.ml" 193 8416 8535
type(
  string * Arg.spec * string
)
"main.ml" 194 8537 8539 "main.ml" 194 8537 8563
type(
  string
)
"main.ml" 194 8537 8579 "main.ml" 194 8537 8580
type(
  unit
)
"main.ml" 194 8537 8584 "main.ml" 194 8537 8588
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 194 8537 8589 "main.ml" 194 8537 8591
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 194 8537 8612 "main.ml" 194 8537 8616
type(
  bool
)
"main.ml" 194 8537 8592 "main.ml" 194 8537 8617
type(
  Frontc.parsing_arg
)
"main.ml" 194 8537 8619 "main.ml" 194 8537 8620
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 194 8537 8620 "main.ml" 194 8537 8624
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 194 8537 8619 "main.ml" 194 8537 8624
type(
  Frontc.parsing_arg list
)
"main.ml" 194 8537 8592 "main.ml" 194 8537 8624
type(
  Frontc.parsing_arg list
)
"main.ml" 194 8537 8584 "main.ml" 194 8537 8624
type(
  unit
)
"main.ml" 194 8537 8627 "main.ml" 194 8537 8638
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 194 8537 8639 "main.ml" 194 8537 8641
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 194 8537 8642 "main.ml" 194 8537 8647
type(
  bool
)
"main.ml" 194 8537 8627 "main.ml" 194 8537 8647
type(
  unit
)
"main.ml" 194 8537 8649 "main.ml" 194 8537 8653
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 194 8537 8654 "main.ml" 194 8537 8656
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 194 8537 8657 "main.ml" 194 8537 8664
type(
  Frontc.parsing_arg
)
"main.ml" 194 8537 8668 "main.ml" 194 8537 8669
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 194 8537 8669 "main.ml" 194 8537 8673
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 194 8537 8668 "main.ml" 194 8537 8673
type(
  Frontc.parsing_arg list
)
"main.ml" 194 8537 8657 "main.ml" 194 8537 8673
type(
  Frontc.parsing_arg list
)
"main.ml" 194 8537 8649 "main.ml" 194 8537 8673
type(
  unit
)
"main.ml" 194 8537 8627 "main.ml" 194 8537 8673
type(
  unit
)
"main.ml" 194 8537 8584 "main.ml" 194 8537 8673
type(
  unit
)
"main.ml" 194 8537 8574 "main.ml" 194 8537 8674
type(
  unit -> unit
)
"main.ml" 194 8537 8565 "main.ml" 194 8537 8674
type(
  Arg.spec
)
"main.ml" 195 8676 8678 "main.ml" 195 8676 8717
type(
  string
)
"main.ml" 194 8537 8538 "main.ml" 195 8676 8718
type(
  string * Arg.spec * string
)
"main.ml" 196 8720 8722 "main.ml" 196 8720 8730
type(
  string
)
"main.ml" 196 8720 8748 "main.ml" 196 8720 8751
type(
  string
)
ident(
  def cpp "main.ml" 196 8720 8755 "main.ml" 196 8720 8785
)
"main.ml" 196 8720 8755 "main.ml" 196 8720 8759
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 196 8720 8760 "main.ml" 196 8720 8762
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 196 8720 8772 "main.ml" 196 8720 8775
type(
  string
)
ident(
  int_ref cpp "main.ml" 196 8720 8748 "main.ml" 196 8720 8751
)
"main.ml" 196 8720 8763 "main.ml" 196 8720 8776
type(
  Frontc.parsing_arg
)
"main.ml" 196 8720 8780 "main.ml" 196 8720 8781
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 196 8720 8781 "main.ml" 196 8720 8785
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 196 8720 8780 "main.ml" 196 8720 8785
type(
  Frontc.parsing_arg list
)
"main.ml" 196 8720 8763 "main.ml" 196 8720 8785
type(
  Frontc.parsing_arg list
)
"main.ml" 196 8720 8755 "main.ml" 196 8720 8785
type(
  unit
)
"main.ml" 196 8720 8743 "main.ml" 196 8720 8786
type(
  string -> unit
)
"main.ml" 196 8720 8732 "main.ml" 196 8720 8786
type(
  Arg.spec
)
"main.ml" 197 8788 8790 "main.ml" 197 8788 8819
type(
  string
)
"main.ml" 196 8720 8721 "main.ml" 197 8788 8820
type(
  string * Arg.spec * string
)
"main.ml" 198 8822 8824 "main.ml" 198 8822 8828
type(
  string
)
"main.ml" 198 8822 8846 "main.ml" 198 8822 8849
type(
  string
)
ident(
  def def "main.ml" 198 8822 8853 "main.ml" 198 8822 8879
)
"main.ml" 198 8822 8853 "main.ml" 198 8822 8857
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 198 8822 8858 "main.ml" 198 8822 8860
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 198 8822 8866 "main.ml" 198 8822 8869
type(
  string
)
ident(
  int_ref def "main.ml" 198 8822 8846 "main.ml" 198 8822 8849
)
"main.ml" 198 8822 8861 "main.ml" 198 8822 8870
type(
  Frontc.parsing_arg
)
"main.ml" 198 8822 8874 "main.ml" 198 8822 8875
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 198 8822 8875 "main.ml" 198 8822 8879
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 198 8822 8874 "main.ml" 198 8822 8879
type(
  Frontc.parsing_arg list
)
"main.ml" 198 8822 8861 "main.ml" 198 8822 8879
type(
  Frontc.parsing_arg list
)
"main.ml" 198 8822 8853 "main.ml" 198 8822 8879
type(
  unit
)
"main.ml" 198 8822 8841 "main.ml" 198 8822 8880
type(
  string -> unit
)
"main.ml" 198 8822 8830 "main.ml" 198 8822 8880
type(
  Arg.spec
)
"main.ml" 199 8882 8884 "main.ml" 199 8882 8927
type(
  string
)
"main.ml" 198 8822 8823 "main.ml" 199 8882 8928
type(
  string * Arg.spec * string
)
"main.ml" 200 8930 8932 "main.ml" 200 8930 8936
type(
  string
)
"main.ml" 200 8930 8954 "main.ml" 200 8930 8959
type(
  string
)
ident(
  def undef "main.ml" 200 8930 8963 "main.ml" 200 8930 8993
)
"main.ml" 200 8930 8963 "main.ml" 200 8930 8967
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 200 8930 8968 "main.ml" 200 8930 8970
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 200 8930 8978 "main.ml" 200 8930 8983
type(
  string
)
ident(
  int_ref undef "main.ml" 200 8930 8954 "main.ml" 200 8930 8959
)
"main.ml" 200 8930 8971 "main.ml" 200 8930 8984
type(
  Frontc.parsing_arg
)
"main.ml" 200 8930 8988 "main.ml" 200 8930 8989
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 200 8930 8989 "main.ml" 200 8930 8993
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 200 8930 8988 "main.ml" 200 8930 8993
type(
  Frontc.parsing_arg list
)
"main.ml" 200 8930 8971 "main.ml" 200 8930 8993
type(
  Frontc.parsing_arg list
)
"main.ml" 200 8930 8963 "main.ml" 200 8930 8993
type(
  unit
)
"main.ml" 200 8930 8949 "main.ml" 200 8930 8994
type(
  string -> unit
)
"main.ml" 200 8930 8938 "main.ml" 200 8930 8994
type(
  Arg.spec
)
"main.ml" 201 8996 8998 "main.ml" 201 8996 9043
type(
  string
)
"main.ml" 200 8930 8931 "main.ml" 201 8996 9044
type(
  string * Arg.spec * string
)
"main.ml" 202 9046 9048 "main.ml" 202 9046 9052
type(
  string
)
"main.ml" 202 9046 9070 "main.ml" 202 9046 9074
type(
  string
)
ident(
  def file "main.ml" 202 9046 9078 "main.ml" 202 9046 9109
)
"main.ml" 202 9046 9078 "main.ml" 202 9046 9082
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 202 9046 9083 "main.ml" 202 9046 9085
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 202 9046 9095 "main.ml" 202 9046 9099
type(
  string
)
ident(
  int_ref file "main.ml" 202 9046 9070 "main.ml" 202 9046 9074
)
"main.ml" 202 9046 9086 "main.ml" 202 9046 9100
type(
  Frontc.parsing_arg
)
"main.ml" 202 9046 9104 "main.ml" 202 9046 9105
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 202 9046 9105 "main.ml" 202 9046 9109
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 202 9046 9104 "main.ml" 202 9046 9109
type(
  Frontc.parsing_arg list
)
"main.ml" 202 9046 9086 "main.ml" 202 9046 9109
type(
  Frontc.parsing_arg list
)
"main.ml" 202 9046 9078 "main.ml" 202 9046 9109
type(
  unit
)
"main.ml" 202 9046 9065 "main.ml" 202 9046 9110
type(
  string -> unit
)
"main.ml" 202 9046 9054 "main.ml" 202 9046 9110
type(
  Arg.spec
)
"main.ml" 203 9112 9114 "main.ml" 203 9112 9139
type(
  string
)
"main.ml" 202 9046 9047 "main.ml" 203 9112 9140
type(
  string * Arg.spec * string
)
"main.ml" 204 9142 9144 "main.ml" 204 9142 9148
type(
  string
)
"main.ml" 204 9142 9166 "main.ml" 204 9142 9169
type(
  string
)
ident(
  def dir "main.ml" 204 9142 9173 "main.ml" 204 9142 9207
)
"main.ml" 204 9142 9173 "main.ml" 204 9142 9177
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 204 9142 9178 "main.ml" 204 9142 9180
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 204 9142 9194 "main.ml" 204 9142 9197
type(
  string
)
ident(
  int_ref dir "main.ml" 204 9142 9166 "main.ml" 204 9142 9169
)
"main.ml" 204 9142 9181 "main.ml" 204 9142 9198
type(
  Frontc.parsing_arg
)
"main.ml" 204 9142 9202 "main.ml" 204 9142 9203
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 204 9142 9203 "main.ml" 204 9142 9207
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 204 9142 9202 "main.ml" 204 9142 9207
type(
  Frontc.parsing_arg list
)
"main.ml" 204 9142 9181 "main.ml" 204 9142 9207
type(
  Frontc.parsing_arg list
)
"main.ml" 204 9142 9173 "main.ml" 204 9142 9207
type(
  unit
)
"main.ml" 204 9142 9161 "main.ml" 204 9142 9208
type(
  string -> unit
)
"main.ml" 204 9142 9150 "main.ml" 204 9142 9208
type(
  Arg.spec
)
"main.ml" 205 9210 9212 "main.ml" 205 9210 9242
type(
  string
)
"main.ml" 204 9142 9143 "main.ml" 205 9210 9243
type(
  string * Arg.spec * string
)
"main.ml" 132 4606 4617 "main.ml" 206 9244 9245
type(
  (string * Arg.spec * string) list
)
"main.ml" 214 9375 9379 "main.ml" 214 9375 9390
type(
  string -> bool
)
ident(
  def isComponent "main.ml" 243 10194 10194 "main.ml" 1 0 -1
)
"main.ml" 214 9375 9391 "main.ml" 214 9375 9395
type(
  string
)
ident(
  def comp "main.ml" 216 9400 9401 "main.ml" 236 9956 9987
)
"main.ml" 216 9400 9409 "main.ml" 216 9400 9412
type(
  string ref list -> bool
)
ident(
  def aux "main.ml" 216 9400 9401 "main.ml" 236 9956 9987
)
"main.ml" 217 9424 9428 "main.ml" 217 9424 9430
type(
  string ref list
)
"main.ml" 217 9424 9434 "main.ml" 217 9424 9439
type(
  bool
)
"main.ml" 218 9440 9445 "main.ml" 218 9440 9454
ident(
  def comp_name "main.ml" 219 9464 9467 "main.ml" 235 9939 9955
)
"main.ml" 218 9440 9444 "main.ml" 218 9440 9455
type(
  string ref
)
"main.ml" 218 9440 9459 "main.ml" 218 9440 9460
type(
  string ref list
)
ident(
  def r "main.ml" 219 9464 9467 "main.ml" 235 9939 9955
)
"main.ml" 218 9440 9444 "main.ml" 218 9440 9460
type(
  string ref list
)
"main.ml" 219 9464 9471 "main.ml" 219 9464 9475
type(
  string
)
ident(
  int_ref comp "main.ml" 214 9375 9391 "main.ml" 214 9375 9395
)
"main.ml" 219 9464 9476 "main.ml" 219 9464 9477
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 219 9464 9478 "main.ml" 219 9464 9479
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 219 9464 9479 "main.ml" 219 9464 9488
type(
  string ref
)
ident(
  int_ref comp_name "main.ml" 218 9440 9444 "main.ml" 218 9440 9455
)
"main.ml" 219 9464 9478 "main.ml" 219 9464 9488
type(
  string
)
"main.ml" 219 9464 9470 "main.ml" 219 9464 9489
type(
  bool
)
"main.ml" 224 9528 9539 "main.ml" 224 9528 9542
type(
  string
)
ident(
  def nom "main.ml" 225 9589 9596 "main.ml" 228 9762 9774
)
"main.ml" 224 9528 9546 "main.ml" 224 9528 9561
type(
  string -> string -> string
)
ident(
  ext_ref Filename.concat
)
"main.ml" 224 9528 9562 "main.ml" 224 9528 9563
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 224 9528 9563 "main.ml" 224 9528 9570
type(
  string ref
)
ident(
  int_ref out_dir "main.ml" 112 4185 4189 "main.ml" 112 4185 4196
)
"main.ml" 224 9528 9562 "main.ml" 224 9528 9570
type(
  string
)
"main.ml" 224 9528 9572 "main.ml" 224 9528 9576
type(
  string
)
ident(
  int_ref comp "main.ml" 214 9375 9391 "main.ml" 214 9375 9395
)
"main.ml" 224 9528 9576 "main.ml" 224 9528 9577
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 224 9528 9577 "main.ml" 224 9528 9583
type(
  string
)
"main.ml" 224 9528 9571 "main.ml" 224 9528 9584
call(
  stack
)
type(
  string
)
"main.ml" 224 9528 9545 "main.ml" 224 9528 9585
call(
  stack
)
type(
  string
)
"main.ml" 225 9589 9600 "main.ml" 225 9589 9604
type(
  in_channel
)
ident(
  def chan "main.ml" 226 9673 9680 "main.ml" 228 9762 9774
)
"main.ml" 225 9589 9607 "main.ml" 225 9589 9631
type(
  Unix.file_descr -> in_channel
)
ident(
  ext_ref Unix.in_channel_of_descr
)
"main.ml" 225 9589 9633 "main.ml" 225 9589 9646
type(
  string -> Unix.open_flag list -> Unix.file_perm -> Unix.file_descr
)
ident(
  ext_ref Unix.openfile
)
"main.ml" 225 9589 9647 "main.ml" 225 9589 9650
type(
  string
)
ident(
  int_ref nom "main.ml" 224 9528 9539 "main.ml" 224 9528 9542
)
"main.ml" 225 9589 9652 "main.ml" 225 9589 9665
type(
  Unix.open_flag
)
"main.ml" 225 9589 9651 "main.ml" 225 9589 9666
type(
  Unix.open_flag list
)
"main.ml" 225 9589 9667 "main.ml" 225 9589 9668
type(
  Unix.file_perm
)
"main.ml" 225 9589 9632 "main.ml" 225 9589 9669
call(
  stack
)
type(
  Unix.file_descr
)
"main.ml" 225 9589 9607 "main.ml" 225 9589 9669
call(
  stack
)
type(
  in_channel
)
"main.ml" 226 9673 9680 "main.ml" 226 9673 9688
type(
  in_channel -> unit
)
ident(
  ext_ref Pervasives.close_in
)
"main.ml" 226 9673 9689 "main.ml" 226 9673 9693
type(
  in_channel
)
ident(
  int_ref chan "main.ml" 225 9589 9600 "main.ml" 225 9589 9604
)
"main.ml" 226 9673 9680 "main.ml" 226 9673 9693
call(
  stack
)
type(
  unit
)
"main.ml" 227 9695 9703 "main.ml" 227 9695 9709
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 227 9695 9710 "main.ml" 227 9695 9755
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 227 9695 9756 "main.ml" 227 9695 9760
type(
  string
)
ident(
  int_ref comp "main.ml" 214 9375 9391 "main.ml" 214 9375 9395
)
"main.ml" 227 9695 9703 "main.ml" 227 9695 9760
call(
  stack
)
type(
  unit
)
"main.ml" 228 9762 9769 "main.ml" 228 9762 9774
type(
  bool
)
"main.ml" 227 9695 9703 "main.ml" 228 9762 9774
type(
  bool
)
"main.ml" 226 9673 9680 "main.ml" 228 9762 9774
type(
  bool
)
"main.ml" 225 9589 9596 "main.ml" 228 9762 9774
type(
  bool
)
"main.ml" 222 9510 9518 "main.ml" 229 9807 9814
type(
  bool
)
"main.ml" 230 9815 9843 "main.ml" 230 9815 9854
type(
  Unix.error
)
"main.ml" 230 9815 9856 "main.ml" 230 9815 9857
type(
  string
)
"main.ml" 230 9815 9859 "main.ml" 230 9815 9860
type(
  string
)
"main.ml" 230 9815 9827 "main.ml" 230 9815 9861
type(
  exn
)
"main.ml" 233 9919 9924 "main.ml" 233 9919 9930
type(
  bool
)
"main.ml" 221 9500 9504 "main.ml" 234 9931 9938
type(
  bool
)
"main.ml" 235 9939 9949 "main.ml" 235 9939 9952
type(
  string ref list -> bool
)
ident(
  int_ref aux "main.ml" 216 9400 9409 "main.ml" 216 9400 9412
)
"main.ml" 235 9939 9953 "main.ml" 235 9939 9954
type(
  string ref list
)
ident(
  int_ref r "main.ml" 218 9440 9459 "main.ml" 218 9440 9460
)
"main.ml" 235 9939 9948 "main.ml" 235 9939 9955
call(
  tail
)
type(
  bool
)
"main.ml" 219 9464 9467 "main.ml" 235 9939 9955
type(
  bool
)
"main.ml" 216 9400 9415 "main.ml" 235 9939 9955
type(
  string ref list -> bool
)
"main.ml" 236 9956 9961 "main.ml" 236 9956 9964
type(
  string ref list -> bool
)
ident(
  int_ref aux "main.ml" 216 9400 9409 "main.ml" 216 9400 9412
)
"main.ml" 236 9956 9965 "main.ml" 236 9956 9966
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 236 9956 9966 "main.ml" 236 9956 9987
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 236 9956 9965 "main.ml" 236 9956 9987
type(
  string ref list
)
"main.ml" 236 9956 9961 "main.ml" 236 9956 9987
call(
  tail
)
type(
  bool
)
"main.ml" 216 9400 9401 "main.ml" 236 9956 9987
type(
  bool
)
"main.ml" 243 10194 10202 "main.ml" 243 10194 10210
type(
  ('a * Cextraireboucle.typeInfofonction) list -> unit
)
ident(
  def getComps "main.ml" 243 10194 10194 "main.ml" 1 0 -1
)
"main.ml" 244 10222 10225 "main.ml" 244 10222 10227
type(
  ('a * Cextraireboucle.typeInfofonction) list
)
"main.ml" 244 10222 10233 "main.ml" 244 10222 10235
type(
  unit
)
"main.ml" 245 10237 10241 "main.ml" 245 10237 10242
type(
  'a
)
"main.ml" 245 10237 10244 "main.ml" 245 10237 10246
type(
  Cextraireboucle.typeInfofonction
)
ident(
  def fn "main.ml" 246 10254 10260 "main.ml" 351 14735 14742
)
"main.ml" 245 10237 10240 "main.ml" 245 10237 10247
type(
  'a * Cextraireboucle.typeInfofonction
)
"main.ml" 245 10237 10249 "main.ml" 245 10237 10250
type(
  ('a * Cextraireboucle.typeInfofonction) list
)
ident(
  def r "main.ml" 246 10254 10260 "main.ml" 351 14735 14742
)
"main.ml" 245 10237 10240 "main.ml" 245 10237 10250
type(
  ('a * Cextraireboucle.typeInfofonction) list
)
"main.ml" 246 10254 10260 "main.ml" 246 10254 10268
type(
  ('a * Cextraireboucle.typeInfofonction) list -> unit
)
ident(
  int_ref getComps "main.ml" 243 10194 10202 "main.ml" 243 10194 10210
)
"main.ml" 246 10254 10269 "main.ml" 246 10254 10270
type(
  ('a * Cextraireboucle.typeInfofonction) list
)
ident(
  int_ref r "main.ml" 245 10237 10249 "main.ml" 245 10237 10250
)
"main.ml" 246 10254 10260 "main.ml" 246 10254 10270
call(
  stack
)
type(
  unit
)
"main.ml" 249 10343 10353 "main.ml" 249 10343 10364
type(
  string -> bool
)
ident(
  int_ref isComponent "main.ml" 214 9375 9379 "main.ml" 214 9375 9390
)
"main.ml" 249 10343 10365 "main.ml" 249 10343 10367
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 249 10343 10365 "main.ml" 249 10343 10371
type(
  string
)
"main.ml" 249 10343 10352 "main.ml" 249 10343 10372
call(
  stack
)
type(
  bool
)
"main.ml" 251 10391 10399 "main.ml" 251 10391 10405
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 251 10391 10406 "main.ml" 251 10391 10444
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 251 10391 10445 "main.ml" 251 10391 10447
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 251 10391 10445 "main.ml" 251 10391 10451
type(
  string
)
"main.ml" 251 10391 10399 "main.ml" 251 10391 10451
call(
  stack
)
type(
  unit
)
"main.ml" 255 10651 10656 "main.ml" 255 10651 10668
type(
  TO.documentEvalue ref
)
ident(
  ext_ref TO.docEvalue
)
"main.ml" 255 10651 10669 "main.ml" 255 10651 10671
type(
  TO.documentEvalue ref -> TO.documentEvalue -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 255 10651 10672 "main.ml" 255 10651 10693
type(
  TO.nidEval list -> TO.elementEval list -> TO.documentEvalue
)
ident(
  ext_ref TO.new_documentEvalue
)
"main.ml" 255 10651 10694 "main.ml" 255 10651 10696
type(
  TO.nidEval list
)
"main.ml" 255 10651 10697 "main.ml" 255 10651 10699
type(
  TO.elementEval list
)
"main.ml" 255 10651 10672 "main.ml" 255 10651 10699
call(
  stack
)
type(
  TO.documentEvalue
)
"main.ml" 255 10651 10656 "main.ml" 255 10651 10699
type(
  unit
)
"main.ml" 256 10703 10708 "main.ml" 256 10703 10718
type(
  Orange.typeCompEvalue list ref
)
ident(
  ext_ref Orange.compEvalue
)
"main.ml" 256 10703 10719 "main.ml" 256 10703 10721
type(
  Orange.typeCompEvalue list ref -> Orange.typeCompEvalue list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 256 10703 10722 "main.ml" 256 10703 10724
type(
  Orange.typeCompEvalue list
)
"main.ml" 256 10703 10708 "main.ml" 256 10703 10724
type(
  unit
)
"main.ml" 257 10726 10731 "main.ml" 257 10726 10742
type(
  (string * int * string list * string list) list ref
)
ident(
  ext_ref Orange.listeAppels
)
"main.ml" 257 10726 10743 "main.ml" 257 10726 10745
type(
  (string * int * string list * string list) list ref ->
  (string * int * string list * string list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 257 10726 10746 "main.ml" 257 10726 10748
type(
  (string * int * string list * string list) list
)
"main.ml" 257 10726 10731 "main.ml" 257 10726 10748
type(
  unit
)
"main.ml" 258 10750 10755 "main.ml" 258 10750 10775
type(
  string ref
)
ident(
  ext_ref TO.varDeBoucleBoucle
)
"main.ml" 258 10750 10776 "main.ml" 258 10750 10778
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 258 10750 10779 "main.ml" 258 10750 10781
type(
  string
)
"main.ml" 258 10750 10755 "main.ml" 258 10750 10781
type(
  unit
)
"main.ml" 259 10783 10788 "main.ml" 259 10783 10813
type(
  (int * TO.resMaxType) list ref
)
ident(
  ext_ref TO.listeDesMaxParIdBoucle
)
"main.ml" 259 10783 10814 "main.ml" 259 10783 10816
type(
  (int * TO.resMaxType) list ref -> (int * TO.resMaxType) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 259 10783 10817 "main.ml" 259 10783 10819
type(
  (int * TO.resMaxType) list
)
"main.ml" 259 10783 10788 "main.ml" 259 10783 10819
type(
  unit
)
"main.ml" 260 10821 10826 "main.ml" 260 10821 10841
type(
  TO.elementEval list ref
)
ident(
  ext_ref TO.corpsEvalTMP
)
"main.ml" 260 10821 10842 "main.ml" 260 10821 10844
type(
  TO.elementEval list ref -> TO.elementEval list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 260 10821 10845 "main.ml" 260 10821 10847
type(
  TO.elementEval list
)
"main.ml" 260 10821 10826 "main.ml" 260 10821 10847
type(
  unit
)
"main.ml" 261 10850 10855 "main.ml" 261 10850 10871
type(
  TO.nidEval list ref
)
ident(
  ext_ref TO.nouBoucleEval
)
"main.ml" 261 10850 10871 "main.ml" 261 10850 10873
type(
  TO.nidEval list ref -> TO.nidEval list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 261 10850 10874 "main.ml" 261 10850 10876
type(
  TO.nidEval list
)
"main.ml" 261 10850 10855 "main.ml" 261 10850 10876
type(
  unit
)
"main.ml" 262 10878 10883 "main.ml" 262 10878 10898
type(
  Util.inst list ref
)
ident(
  ext_ref TO.appelcourant
)
"main.ml" 262 10878 10899 "main.ml" 262 10878 10901
type(
  Util.inst list ref -> Util.inst list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 262 10878 10902 "main.ml" 262 10878 10904
type(
  Util.inst list
)
"main.ml" 262 10878 10883 "main.ml" 262 10878 10904
type(
  unit
)
"main.ml" 263 10907 10912 "main.ml" 263 10907 10928
type(
  (string * int * string list * string list) list ref
)
ident(
  ext_ref TO.listBeforeFct
)
"main.ml" 263 10907 10929 "main.ml" 263 10907 10931
type(
  (string * int * string list * string list) list ref ->
  (string * int * string list * string list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 263 10907 10932 "main.ml" 263 10907 10934
type(
  (string * int * string list * string list) list
)
"main.ml" 263 10907 10912 "main.ml" 263 10907 10934
type(
  unit
)
"main.ml" 264 10936 10941 "main.ml" 264 10936 10951
type(
  Util.abstractStore list ref
)
ident(
  ext_ref TO.listeVB
)
"main.ml" 264 10936 10952 "main.ml" 264 10936 10954
type(
  Util.abstractStore list ref -> Util.abstractStore list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 264 10936 10955 "main.ml" 264 10936 10957
type(
  Util.abstractStore list
)
"main.ml" 264 10936 10941 "main.ml" 264 10936 10957
type(
  unit
)
"main.ml" 265 10959 10964 "main.ml" 265 10959 10977
type(
  Util.abstractStore list ref
)
ident(
  ext_ref TO.listeVBDEP
)
"main.ml" 265 10959 10978 "main.ml" 265 10959 10980
type(
  Util.abstractStore list ref -> Util.abstractStore list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 265 10959 10981 "main.ml" 265 10959 10983
type(
  Util.abstractStore list
)
"main.ml" 265 10959 10964 "main.ml" 265 10959 10983
type(
  unit
)
"main.ml" 266 10985 10990 "main.ml" 266 10985 11012
type(
  (string * Util.abstractStore * Util.abstractStore) list ref
)
ident(
  ext_ref TO.curassocnamesetList
)
"main.ml" 266 10985 11013 "main.ml" 266 10985 11015
type(
  (string * Util.abstractStore * Util.abstractStore) list ref ->
  (string * Util.abstractStore * Util.abstractStore) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 266 10985 11016 "main.ml" 266 10985 11018
type(
  (string * Util.abstractStore * Util.abstractStore) list
)
"main.ml" 266 10985 10990 "main.ml" 266 10985 11018
type(
  unit
)
"main.ml" 267 11020 11025 "main.ml" 267 11020 11043
type(
  TO.evaluationType list ref
)
ident(
  ext_ref TO.listeInstNonexe
)
"main.ml" 267 11020 11044 "main.ml" 267 11020 11046
type(
  TO.evaluationType list ref -> TO.evaluationType list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 267 11020 11047 "main.ml" 267 11020 11049
type(
  TO.evaluationType list
)
"main.ml" 267 11020 11025 "main.ml" 267 11020 11049
type(
  unit
)
"main.ml" 268 11051 11056 "main.ml" 268 11051 11065
type(
  Util.abstractStore list ref
)
ident(
  ext_ref TO.aslAux
)
"main.ml" 268 11051 11066 "main.ml" 268 11051 11068
type(
  Util.abstractStore list ref -> Util.abstractStore list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 268 11051 11069 "main.ml" 268 11051 11071
type(
  Util.abstractStore list
)
"main.ml" 268 11051 11056 "main.ml" 268 11051 11071
type(
  unit
)
"main.ml" 269 11073 11078 "main.ml" 269 11073 11097
type(
  (string * (string list * string list) list) list ref
)
ident(
  ext_ref TO.listCaseFonction
)
"main.ml" 269 11073 11098 "main.ml" 269 11073 11100
type(
  (string * (string list * string list) list) list ref ->
  (string * (string list * string list) list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 269 11073 11101 "main.ml" 269 11073 11103
type(
  (string * (string list * string list) list) list
)
"main.ml" 269 11073 11078 "main.ml" 269 11073 11103
type(
  unit
)
"main.ml" 270 11105 11114 "main.ml" 270 11105 11138
type(
  (string * Util.newBaseType) list
)
ident(
  def initListAssosPtrNameType "main.ml" 271 11167 11172 "main.ml" 348 14578 14597
)
"main.ml" 270 11105 11141 "main.ml" 270 11105 11142
type(
  (string * Util.newBaseType) list ref -> (string * Util.newBaseType) list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 270 11105 11142 "main.ml" 270 11105 11163
type(
  (string * Util.newBaseType) list ref
)
ident(
  ext_ref Util.listeAssosPtrNameType
)
"main.ml" 270 11105 11141 "main.ml" 270 11105 11163
type(
  (string * Util.newBaseType) list
)
"main.ml" 271 11167 11176 "main.ml" 271 11167 11194
type(
  (string * Util.newBaseType) list
)
ident(
  def initistAssocIdType "main.ml" 272 11217 11222 "main.ml" 348 14578 14597
)
"main.ml" 271 11167 11197 "main.ml" 271 11167 11198
type(
  (string * Util.newBaseType) list ref -> (string * Util.newBaseType) list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 271 11167 11198 "main.ml" 271 11167 11213
type(
  (string * Util.newBaseType) list ref
)
ident(
  ext_ref Util.listAssocIdType
)
"main.ml" 271 11167 11197 "main.ml" 271 11167 11213
type(
  (string * Util.newBaseType) list
)
"main.ml" 272 11217 11226 "main.ml" 272 11217 11252
type(
  (string * Util.decType) list
)
ident(
  def initlistAssosIdTypeTypeDec "main.ml" 286 11669 11677 "main.ml" 348 14578 14597
)
"main.ml" 272 11217 11255 "main.ml" 272 11217 11256
type(
  (string * Util.decType) list ref -> (string * Util.decType) list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 272 11217 11256 "main.ml" 272 11217 11278
type(
  (string * Util.decType) list ref
)
ident(
  ext_ref Util.listAssosIdTypeTypeDec
)
"main.ml" 272 11217 11255 "main.ml" 272 11217 11278
type(
  (string * Util.decType) list
)
"main.ml" 286 11669 11677 "main.ml" 286 11669 11696
type(
  bool ref
)
ident(
  ext_ref TO.isPartialisation
)
"main.ml" 286 11669 11697 "main.ml" 286 11669 11699
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 286 11669 11700 "main.ml" 286 11669 11704
type(
  bool
)
"main.ml" 286 11669 11677 "main.ml" 286 11669 11704
type(
  unit
)
"main.ml" 287 11706 11714 "main.ml" 287 11706 11735
type(
  bool ref
)
ident(
  ext_ref TO.isPrint_Expression
)
"main.ml" 287 11706 11736 "main.ml" 287 11706 11738
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 287 11706 11739 "main.ml" 287 11706 11743
type(
  bool
)
"main.ml" 287 11706 11714 "main.ml" 287 11706 11743
type(
  unit
)
"main.ml" 288 11745 11750 "main.ml" 288 11745 11764
type(
  Util.abstractStore list ref
)
ident(
  ext_ref Cvarabs.listeASCourant
)
"main.ml" 288 11745 11765 "main.ml" 288 11745 11767
type(
  Util.abstractStore list ref -> Util.abstractStore list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 288 11745 11768 "main.ml" 288 11745 11770
type(
  Util.abstractStore list
)
"main.ml" 288 11745 11750 "main.ml" 288 11745 11770
type(
  unit
)
"main.ml" 289 11772 11777 "main.ml" 289 11772 11790
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 289 11772 11791 "main.ml" 289 11772 11825
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 289 11772 11827 "main.ml" 289 11772 11838
type(
  TO.elementEval list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 289 11772 11839 "main.ml" 289 11772 11840
type(
  TO.documentEvalue ref -> TO.documentEvalue
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 289 11772 11840 "main.ml" 289 11772 11852
type(
  TO.documentEvalue ref
)
ident(
  ext_ref TO.docEvalue
)
"main.ml" 289 11772 11839 "main.ml" 289 11772 11852
type(
  TO.documentEvalue
)
"main.ml" 289 11772 11839 "main.ml" 289 11772 11867
type(
  TO.elementEval list
)
"main.ml" 289 11772 11826 "main.ml" 289 11772 11868
call(
  stack
)
type(
  int
)
"main.ml" 289 11772 11777 "main.ml" 289 11772 11868
call(
  stack
)
type(
  unit
)
"main.ml" 292 11945 11954 "main.ml" 292 11945 11962
type(
  string list
)
ident(
  def globales "main.ml" 293 11993 12001 "main.ml" 348 14578 14597
)
"main.ml" 292 11945 11965 "main.ml" 292 11945 11966
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 292 11945 11966 "main.ml" 292 11945 11989
type(
  string list ref
)
ident(
  ext_ref Util.alreadyAffectedGlobales
)
"main.ml" 292 11945 11965 "main.ml" 292 11945 11989
type(
  string list
)
"main.ml" 293 11993 12001 "main.ml" 293 11993 12012
type(
  string list ref
)
ident(
  ext_ref Cvarabs.globalesVar
)
"main.ml" 293 11993 12013 "main.ml" 293 11993 12015
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 293 11993 12016 "main.ml" 293 11993 12017
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 293 11993 12017 "main.ml" 293 11993 12040
type(
  string list ref
)
ident(
  ext_ref Util.alreadyAffectedGlobales
)
"main.ml" 293 11993 12016 "main.ml" 293 11993 12040
type(
  string list
)
"main.ml" 293 11993 12001 "main.ml" 293 11993 12040
type(
  unit
)
"main.ml" 295 12045 12054 "main.ml" 295 12045 12059
type(
  TO.evaluationType
)
ident(
  def typeE "main.ml" 296 12172 12180 "main.ml" 348 14578 14597
)
"main.ml" 295 12045 12075 "main.ml" 295 12045 12077
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 295 12045 12075 "main.ml" 295 12045 12081
type(
  string
)
"main.ml" 295 12045 12083 "main.ml" 295 12045 12084
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 295 12045 12084 "main.ml" 295 12045 12095
type(
  int ref
)
ident(
  ext_ref TO.numAppel
)
"main.ml" 295 12045 12083 "main.ml" 295 12045 12095
type(
  int
)
"main.ml" 295 12045 12097 "main.ml" 295 12045 12099
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 295 12045 12097 "main.ml" 295 12045 12115
type(
  Cvarabs.listeDesInst
)
"main.ml" 295 12045 12117 "main.ml" 295 12045 12118
type(
  Cvarabs.listeDesInst ref -> Cvarabs.listeDesInst
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 295 12045 12118 "main.ml" 295 12045 12130
type(
  Cvarabs.listeDesInst ref
)
ident(
  ext_ref Cextraireboucle.listeDesEnum
)
"main.ml" 295 12045 12117 "main.ml" 295 12045 12130
type(
  Cvarabs.listeDesInst
)
"main.ml" 295 12045 12132 "main.ml" 295 12045 12134
type(
  Cvarabs.typeListeAS
)
"main.ml" 295 12045 12136 "main.ml" 295 12045 12138
type(
  Cvarabs.listeDesInst
)
"main.ml" 295 12045 12140 "main.ml" 295 12045 12142
type(
  string list
)
"main.ml" 295 12045 12145 "main.ml" 295 12045 12147
type(
  string list
)
"main.ml" 295 12045 12149 "main.ml" 295 12045 12153
type(
  bool
)
"main.ml" 295 12045 12155 "main.ml" 295 12045 12160
type(
  bool
)
"main.ml" 295 12045 12162 "main.ml" 295 12045 12164
type(
  string
)
"main.ml" 295 12045 12166 "main.ml" 295 12045 12167
type(
  int
)
"main.ml" 295 12045 12062 "main.ml" 295 12045 12168
type(
  TO.evaluationType
)
"main.ml" 296 12172 12180 "main.ml" 296 12172 12198
type(
  TO.evaluationType ref
)
ident(
  ext_ref TO.dernierAppelFct
)
"main.ml" 296 12172 12199 "main.ml" 296 12172 12201
type(
  TO.evaluationType ref -> TO.evaluationType -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 296 12172 12202 "main.ml" 296 12172 12207
type(
  TO.evaluationType
)
ident(
  int_ref typeE "main.ml" 295 12045 12054 "main.ml" 295 12045 12059
)
"main.ml" 296 12172 12180 "main.ml" 296 12172 12207
type(
  unit
)
"main.ml" 297 12209 12214 "main.ml" 297 12209 12236
type(
  TO.evaluationType ref
)
ident(
  ext_ref TO.predDernierAppelFct
)
"main.ml" 297 12209 12237 "main.ml" 297 12209 12239
type(
  TO.evaluationType ref -> TO.evaluationType -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 297 12209 12240 "main.ml" 297 12209 12245
type(
  TO.evaluationType
)
ident(
  int_ref typeE "main.ml" 295 12045 12054 "main.ml" 295 12045 12059
)
"main.ml" 297 12209 12214 "main.ml" 297 12209 12245
type(
  unit
)
"main.ml" 298 12247 12256 "main.ml" 298 12247 12262
type(
  Cvarabs.typeListeAS
)
ident(
  def aslist "main.ml" 299 12364 12490 "main.ml" 348 14578 14597
)
"main.ml" 298 12247 12265 "main.ml" 298 12247 12290
type(
  string ->
  Cextraireboucle.typeInfofonction ->
  Cvarabs.typeListeAS ->
  Util.expVA ->
  TO.evaluationType list ->
  TO.evaluationType ->
  bool ->
  Util.abstractStore list ->
  Cabs.expression ->
  Cabs.expression ->
  ExtractinfoPtr.LocalAPContext.t -> Util.inst list -> Cvarabs.typeListeAS
)
ident(
  ext_ref TO.completevaluerFonction
)
"main.ml" 298 12247 12292 "main.ml" 298 12247 12294
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 298 12247 12291 "main.ml" 298 12247 12299
type(
  string
)
"main.ml" 298 12247 12300 "main.ml" 298 12247 12302
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 298 12247 12303 "main.ml" 298 12247 12305
type(
  Cvarabs.typeListeAS
)
"main.ml" 298 12247 12311 "main.ml" 298 12247 12320
type(
  Cabs.expression
)
"main.ml" 298 12247 12307 "main.ml" 298 12247 12321
type(
  Util.expVA
)
"main.ml" 298 12247 12325 "main.ml" 298 12247 12330
type(
  TO.evaluationType
)
ident(
  int_ref typeE "main.ml" 295 12045 12054 "main.ml" 295 12045 12059
)
"main.ml" 298 12247 12324 "main.ml" 298 12247 12331
type(
  TO.evaluationType list
)
"main.ml" 298 12247 12333 "main.ml" 298 12247 12338
type(
  TO.evaluationType
)
ident(
  int_ref typeE "main.ml" 295 12045 12054 "main.ml" 295 12045 12059
)
"main.ml" 298 12247 12339 "main.ml" 298 12247 12343
type(
  bool
)
"main.ml" 299 12364 12371 "main.ml" 299 12364 12380
type(
  Util.inst ->
  Util.abstractStore list ->
  Util.abstractStore list ->
  ExtractinfoPtr.LocalAPContext.t -> Util.abstractStore list
)
ident(
  ext_ref Cvarabs.evalStore
)
"main.ml" 299 12364 12382 "main.ml" 299 12364 12395
type(
  Util.inst list -> Util.inst
)
ident(
  ext_ref Util.new_instBEGIN
)
"main.ml" 299 12364 12396 "main.ml" 299 12364 12397
type(
  Util.inst list ref -> Util.inst list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 299 12364 12397 "main.ml" 299 12364 12409
type(
  Util.inst list ref
)
ident(
  ext_ref Cextraireboucle.listeDesEnum
)
"main.ml" 299 12364 12396 "main.ml" 299 12364 12409
type(
  Util.inst list
)
"main.ml" 299 12364 12381 "main.ml" 299 12364 12410
call(
  stack
)
type(
  Util.inst
)
"main.ml" 299 12364 12411 "main.ml" 299 12364 12413
type(
  Util.abstractStore list
)
"main.ml" 299 12364 12414 "main.ml" 299 12364 12416
type(
  Util.abstractStore list
)
"main.ml" 299 12364 12417 "main.ml" 299 12364 12419
type(
  ExtractinfoPtr.LocalAPContext.t
)
"main.ml" 299 12364 12370 "main.ml" 299 12364 12420
call(
  stack
)
type(
  Util.abstractStore list
)
"main.ml" 299 12364 12442 "main.ml" 299 12364 12447
type(
  string
)
"main.ml" 299 12364 12432 "main.ml" 299 12364 12448
type(
  Cabs.constant
)
"main.ml" 299 12364 12421 "main.ml" 299 12364 12450
type(
  Cabs.expression
)
"main.ml" 299 12364 12472 "main.ml" 299 12364 12477
type(
  string
)
"main.ml" 299 12364 12462 "main.ml" 299 12364 12478
type(
  Cabs.constant
)
"main.ml" 299 12364 12451 "main.ml" 299 12364 12480
type(
  Cabs.expression
)
"main.ml" 299 12364 12481 "main.ml" 299 12364 12483
type(
  ExtractinfoPtr.LocalAPContext.t
)
"main.ml" 299 12364 12484 "main.ml" 299 12364 12486
type(
  Util.inst list
)
"main.ml" 298 12247 12265 "main.ml" 299 12364 12486
call(
  stack
)
type(
  Cvarabs.typeListeAS
)
"main.ml" 299 12364 12490 "main.ml" 299 12364 12492
type(
  unit
)
"main.ml" 301 12498 12507 "main.ml" 301 12498 12513
type(
  Util.abstractStore list
)
ident(
  def compAS "main.ml" 304 12710 12716 "main.ml" 348 14578 14597
)
"main.ml" 302 12536 12542 "main.ml" 302 12536 12563
type(
  Cvarabs.typeListeAS ->
  string list -> string list -> Util.abstractStore list
)
ident(
  ext_ref Cvarabs.filterwithoutInternal
)
"main.ml" 303 12657 12665 "main.ml" 303 12657 12671
type(
  Cvarabs.typeListeAS
)
ident(
  int_ref aslist "main.ml" 298 12247 12256 "main.ml" 298 12247 12262
)
"main.ml" 303 12657 12673 "main.ml" 303 12657 12685
type(
  Cextraireboucle.listeDesES -> string list
)
ident(
  int_ref listeOutputs "main.ml" 35 698 706 "main.ml" 35 698 718
)
"main.ml" 303 12657 12686 "main.ml" 303 12657 12688
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 303 12657 12686 "main.ml" 303 12657 12696
type(
  Cextraireboucle.listeDesES
)
"main.ml" 303 12657 12672 "main.ml" 303 12657 12697
call(
  stack
)
type(
  string list
)
"main.ml" 303 12657 12698 "main.ml" 303 12657 12706
type(
  string list
)
ident(
  int_ref globales "main.ml" 292 11945 11954 "main.ml" 292 11945 11962
)
"main.ml" 302 12536 12542 "main.ml" 303 12657 12706
call(
  stack
)
type(
  Util.abstractStore list
)
type(
  Util.abstractStore list
)
"main.ml" 304 12710 12716 "main.ml" 304 12710 12722
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 304 12710 12723 "main.ml" 304 12710 12774
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 304 12710 12775 "main.ml" 304 12710 12786
type(
  Util.abstractStore list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 304 12710 12786 "main.ml" 304 12710 12794
type(
  Util.abstractStore list
)
ident(
  int_ref compAS "main.ml" 301 12498 12507 "main.ml" 301 12498 12513
)
"main.ml" 304 12710 12774 "main.ml" 304 12710 12795
call(
  stack
)
type(
  int
)
"main.ml" 304 12710 12716 "main.ml" 304 12710 12795
call(
  stack
)
type(
  unit
)
"main.ml" 307 12833 12838 "main.ml" 307 12833 12844
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 307 12833 12845 "main.ml" 307 12833 12849
type(
  (unit, out_channel, unit) format
)
"main.ml" 307 12833 12838 "main.ml" 307 12833 12849
call(
  stack
)
type(
  unit
)
"main.ml" 309 12909 12918 "main.ml" 309 12909 12925
type(
  int
)
ident(
  def nb_loop "main.ml" 327 13367 13377 "main.ml" 348 14578 14597
)
"main.ml" 309 12909 12929 "main.ml" 309 12909 12943
type(
  (int -> Util.abstractStore -> int) -> int -> Util.abstractStore list -> int
)
ident(
  ext_ref List.fold_left
)
"main.ml" 310 12944 12955 "main.ml" 310 12944 12962
type(
  int
)
ident(
  def nb_loop "main.ml" 310 12944 12963 "main.ml" 323 13315 13337
)
"main.ml" 310 12944 12963 "main.ml" 310 12944 12971
type(
  Util.abstractStore
)
ident(
  def absstore "main.ml" 311 12975 12982 "main.ml" 323 13315 13337
)
"main.ml" 311 12975 12988 "main.ml" 311 12975 12996
type(
  Util.abstractStore
)
ident(
  int_ref absstore "main.ml" 310 12944 12963 "main.ml" 310 12944 12971
)
"main.ml" 312 13002 13027 "main.ml" 312 13002 13028
type(
  string
)
ident(
  def s "main.ml" 313 13036 13045 "main.ml" 322 13304 13314
)
"main.ml" 312 13002 13030 "main.ml" 312 13002 13031
type(
  Util.expVA
)
ident(
  def e "main.ml" 313 13036 13045 "main.ml" 322 13304 13314
)
"main.ml" 312 13002 13012 "main.ml" 312 13002 13032
type(
  Util.abstractStore
)
"main.ml" 313 13036 13052 "main.ml" 313 13036 13053
type(
  Util.expVA
)
ident(
  int_ref e "main.ml" 312 13002 13030 "main.ml" 312 13002 13031
)
"main.ml" 314 13059 13075 "main.ml" 314 13059 13077
ident(
  def ex "main.ml" 315 13082 13093 "main.ml" 320 13256 13280
)
"main.ml" 314 13059 13074 "main.ml" 314 13059 13078
type(
  Cabs.expression
)
"main.ml" 314 13059 13071 "main.ml" 314 13059 13078
type(
  Util.expVA
)
"main.ml" 315 13082 13097 "main.ml" 315 13082 13106
type(
  string
)
ident(
  def startname "main.ml" 318 13190 13204 "main.ml" 320 13256 13280
)
"main.ml" 316 13111 13128 "main.ml" 316 13111 13138
type(
  string -> int -> int -> string
)
ident(
  ext_ref String.sub
)
"main.ml" 316 13111 13139 "main.ml" 316 13111 13140
type(
  string
)
ident(
  int_ref s "main.ml" 312 13002 13027 "main.ml" 312 13002 13028
)
"main.ml" 316 13111 13141 "main.ml" 316 13111 13142
type(
  int
)
"main.ml" 316 13111 13143 "main.ml" 316 13111 13144
type(
  int
)
"main.ml" 316 13111 13127 "main.ml" 316 13111 13145
call(
  stack
)
type(
  string
)
"main.ml" 317 13146 13179 "main.ml" 317 13146 13182
type(
  string
)
"main.ml" 317 13146 13163 "main.ml" 317 13146 13182
type(
  exn
)
"main.ml" 317 13146 13186 "main.ml" 317 13146 13188
type(
  string
)
"main.ml" 315 13082 13109 "main.ml" 317 13146 13189
type(
  string
)
"main.ml" 318 13190 13208 "main.ml" 318 13190 13217
type(
  string
)
ident(
  int_ref startname "main.ml" 315 13082 13097 "main.ml" 315 13082 13106
)
"main.ml" 318 13190 13218 "main.ml" 318 13190 13219
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 318 13190 13220 "main.ml" 318 13190 13225
type(
  string
)
"main.ml" 318 13190 13207 "main.ml" 318 13190 13226
type(
  bool
)
"main.ml" 319 13227 13244 "main.ml" 319 13227 13251
type(
  int
)
ident(
  int_ref nb_loop "main.ml" 310 12944 12955 "main.ml" 310 12944 12962
)
"main.ml" 319 13227 13252 "main.ml" 319 13227 13253
type(
  int -> int -> int
)
ident(
  ext_ref Pervasives.( + )
)
"main.ml" 319 13227 13254 "main.ml" 319 13227 13255
type(
  int
)
"main.ml" 319 13227 13244 "main.ml" 319 13227 13255
type(
  int
)
"main.ml" 320 13256 13273 "main.ml" 320 13256 13280
type(
  int
)
ident(
  int_ref nb_loop "main.ml" 310 12944 12955 "main.ml" 310 12944 12962
)
"main.ml" 318 13190 13204 "main.ml" 320 13256 13280
type(
  int
)
"main.ml" 315 13082 13093 "main.ml" 320 13256 13280
type(
  int
)
"main.ml" 321 13281 13292 "main.ml" 321 13281 13293
type(
  Util.expVA
)
"main.ml" 321 13281 13296 "main.ml" 321 13281 13303
type(
  int
)
ident(
  int_ref nb_loop "main.ml" 310 12944 12955 "main.ml" 310 12944 12962
)
"main.ml" 313 13036 13045 "main.ml" 322 13304 13314
type(
  int
)
"main.ml" 323 13315 13325 "main.ml" 323 13315 13326
type(
  Util.abstractStore
)
"main.ml" 323 13315 13330 "main.ml" 323 13315 13337
type(
  int
)
ident(
  int_ref nb_loop "main.ml" 310 12944 12955 "main.ml" 310 12944 12962
)
"main.ml" 311 12975 12982 "main.ml" 323 13315 13337
type(
  int
)
"main.ml" 310 12944 12950 "main.ml" 324 13338 13345
type(
  int -> Util.abstractStore -> int
)
"main.ml" 325 13346 13352 "main.ml" 325 13346 13353
type(
  int
)
"main.ml" 326 13354 13360 "main.ml" 326 13354 13366
type(
  Util.abstractStore list
)
ident(
  int_ref compAS "main.ml" 301 12498 12507 "main.ml" 301 12498 12513
)
"main.ml" 309 12909 12928 "main.ml" 327 13367 13373
call(
  stack
)
type(
  int
)
"main.ml" 327 13367 13381 "main.ml" 327 13367 13389
type(
  bool
)
ident(
  def has_loop "main.ml" 328 13406 13414 "main.ml" 348 14578 14597
)
"main.ml" 327 13367 13393 "main.ml" 327 13367 13400
type(
  int
)
ident(
  int_ref nb_loop "main.ml" 309 12909 12918 "main.ml" 309 12909 12925
)
"main.ml" 327 13367 13401 "main.ml" 327 13367 13402
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"main.ml" 327 13367 13403 "main.ml" 327 13367 13404
type(
  int
)
"main.ml" 327 13367 13392 "main.ml" 327 13367 13405
type(
  bool
)
"main.ml" 328 13406 13414 "main.ml" 328 13406 13447
type(
  string -> int -> bool -> unit
)
ident(
  ext_ref Resumeforgraph.append_to_dot_size
)
"main.ml" 328 13406 13448 "main.ml" 328 13406 13450
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 328 13406 13448 "main.ml" 328 13406 13454
type(
  string
)
"main.ml" 328 13406 13456 "main.ml" 328 13406 13467
type(
  Util.abstractStore list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 328 13406 13467 "main.ml" 328 13406 13475
type(
  Util.abstractStore list
)
ident(
  int_ref compAS "main.ml" 301 12498 12507 "main.ml" 301 12498 12513
)
"main.ml" 328 13406 13455 "main.ml" 328 13406 13476
call(
  stack
)
type(
  int
)
"main.ml" 328 13406 13477 "main.ml" 328 13406 13485
type(
  bool
)
ident(
  int_ref has_loop "main.ml" 327 13367 13381 "main.ml" 327 13367 13389
)
"main.ml" 328 13406 13414 "main.ml" 328 13406 13485
call(
  stack
)
type(
  unit
)
"main.ml" 330 13544 13549 "main.ml" 330 13544 13555
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 330 13544 13556 "main.ml" 330 13544 13618
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 330 13544 13619 "main.ml" 330 13544 13621
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 330 13544 13619 "main.ml" 330 13544 13625
type(
  string
)
"main.ml" 330 13544 13549 "main.ml" 330 13544 13625
call(
  stack
)
type(
  unit
)
"main.ml" 331 13627 13632 "main.ml" 331 13627 13640
type(
  string ref ref
)
ident(
  ext_ref Cextraireboucle.mainFonc
)
"main.ml" 331 13627 13641 "main.ml" 331 13627 13643
type(
  string ref ref -> string ref -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 331 13627 13644 "main.ml" 331 13627 13647
type(
  string -> string ref
)
ident(
  ext_ref Pervasives.ref
)
"main.ml" 331 13627 13648 "main.ml" 331 13627 13650
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 331 13627 13648 "main.ml" 331 13627 13654
type(
  string
)
"main.ml" 331 13627 13644 "main.ml" 331 13627 13654
type(
  string ref
)
"main.ml" 331 13627 13632 "main.ml" 331 13627 13654
type(
  unit
)
"main.ml" 336 13773 13778 "main.ml" 336 13773 13791
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 336 13773 13792 "main.ml" 336 13773 13820
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 336 13773 13822 "main.ml" 336 13773 13833
type(
  TO.elementEval list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 336 13773 13834 "main.ml" 336 13773 13835
type(
  TO.documentEvalue ref -> TO.documentEvalue
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 336 13773 13835 "main.ml" 336 13773 13847
type(
  TO.documentEvalue ref
)
ident(
  ext_ref TO.docEvalue
)
"main.ml" 336 13773 13834 "main.ml" 336 13773 13847
type(
  TO.documentEvalue
)
"main.ml" 336 13773 13834 "main.ml" 336 13773 13862
type(
  TO.elementEval list
)
"main.ml" 336 13773 13821 "main.ml" 336 13773 13863
call(
  stack
)
type(
  int
)
"main.ml" 336 13773 13778 "main.ml" 336 13773 13863
call(
  stack
)
type(
  unit
)
"main.ml" 337 13865 13875 "main.ml" 337 13865 13881
type(
  Cextraireboucle.TreeList.tree
)
ident(
  def result "main.ml" 338 13953 13958 "main.ml" 348 14578 14597
)
"main.ml" 337 13865 13883 "main.ml" 337 13865 13884
type(
  Cextraireboucle.TreeList.tree list
)
"main.ml" 337 13865 13874 "main.ml" 337 13865 13885
type(
  Orange.PartialAdapter(Cextraireboucle.TreeList).t
)
"main.ml" 337 13865 13888 "main.ml" 337 13865 13919
type(
  TO.elementEval list -> Orange.PartialAdapter(Cextraireboucle.TreeList).t
)
ident(
  ext_ref TO.afficherInfoFonctionDuDocUML
)
"main.ml" 337 13865 13920 "main.ml" 337 13865 13921
type(
  TO.documentEvalue ref -> TO.documentEvalue
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 337 13865 13921 "main.ml" 337 13865 13933
type(
  TO.documentEvalue ref
)
ident(
  ext_ref TO.docEvalue
)
"main.ml" 337 13865 13920 "main.ml" 337 13865 13933
type(
  TO.documentEvalue
)
"main.ml" 337 13865 13920 "main.ml" 337 13865 13948
type(
  TO.elementEval list
)
"main.ml" 337 13865 13888 "main.ml" 337 13865 13948
call(
  stack
)
type(
  Orange.PartialAdapter(Cextraireboucle.TreeList).t
)
"main.ml" 338 13953 13958 "main.ml" 338 13953 13979
type(
  (string * Util.newBaseType) list ref
)
ident(
  ext_ref Util.listeAssosPtrNameType
)
"main.ml" 338 13953 13980 "main.ml" 338 13953 13982
type(
  (string * Util.newBaseType) list ref ->
  (string * Util.newBaseType) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 338 13953 13983 "main.ml" 338 13953 14007
type(
  (string * Util.newBaseType) list
)
ident(
  int_ref initListAssosPtrNameType "main.ml" 270 11105 11114 "main.ml" 270 11105 11138
)
"main.ml" 338 13953 13958 "main.ml" 338 13953 14007
type(
  unit
)
"main.ml" 339 14010 14015 "main.ml" 339 14010 14030
type(
  (string * Util.newBaseType) list ref
)
ident(
  ext_ref Util.listAssocIdType
)
"main.ml" 339 14010 14031 "main.ml" 339 14010 14033
type(
  (string * Util.newBaseType) list ref ->
  (string * Util.newBaseType) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 339 14010 14034 "main.ml" 339 14010 14052
type(
  (string * Util.newBaseType) list
)
ident(
  int_ref initistAssocIdType "main.ml" 271 11167 11176 "main.ml" 271 11167 11194
)
"main.ml" 339 14010 14015 "main.ml" 339 14010 14052
type(
  unit
)
"main.ml" 340 14054 14059 "main.ml" 340 14054 14081
type(
  (string * Util.decType) list ref
)
ident(
  ext_ref Util.listAssosIdTypeTypeDec
)
"main.ml" 340 14054 14081 "main.ml" 340 14054 14083
type(
  (string * Util.decType) list ref -> (string * Util.decType) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 340 14054 14084 "main.ml" 340 14054 14110
type(
  (string * Util.decType) list
)
ident(
  int_ref initlistAssosIdTypeTypeDec "main.ml" 272 11217 11226 "main.ml" 272 11217 11252
)
"main.ml" 340 14054 14059 "main.ml" 340 14054 14110
type(
  unit
)
"main.ml" 341 14112 14124 "main.ml" 341 14112 14129
type(
  string
)
ident(
  def fName "main.ml" 342 14180 14188 "main.ml" 348 14578 14597
)
"main.ml" 341 14112 14133 "main.ml" 341 14112 14148
type(
  string -> string -> string
)
ident(
  ext_ref Filename.concat
)
"main.ml" 341 14112 14149 "main.ml" 341 14112 14150
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 341 14112 14150 "main.ml" 341 14112 14157
type(
  string ref
)
ident(
  int_ref out_dir "main.ml" 112 4185 4189 "main.ml" 112 4185 4196
)
"main.ml" 341 14112 14149 "main.ml" 341 14112 14157
type(
  string
)
"main.ml" 341 14112 14160 "main.ml" 341 14112 14162
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 341 14112 14159 "main.ml" 341 14112 14167
type(
  string
)
"main.ml" 341 14112 14167 "main.ml" 341 14112 14168
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 341 14112 14168 "main.ml" 341 14112 14174
type(
  string
)
"main.ml" 341 14112 14158 "main.ml" 341 14112 14175
call(
  stack
)
type(
  string
)
"main.ml" 341 14112 14132 "main.ml" 341 14112 14176
call(
  stack
)
type(
  string
)
"main.ml" 342 14180 14188 "main.ml" 342 14180 14194
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 342 14180 14195 "main.ml" 342 14180 14215
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 342 14180 14216 "main.ml" 342 14180 14221
type(
  string
)
ident(
  int_ref fName "main.ml" 341 14112 14124 "main.ml" 341 14112 14129
)
"main.ml" 342 14180 14188 "main.ml" 342 14180 14221
call(
  stack
)
type(
  unit
)
"main.ml" 343 14223 14231 "main.ml" 343 14223 14244
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 343 14223 14245 "main.ml" 343 14223 14265
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 343 14223 14266 "main.ml" 343 14223 14271
type(
  string
)
ident(
  int_ref fName "main.ml" 341 14112 14124 "main.ml" 341 14112 14129
)
"main.ml" 343 14223 14231 "main.ml" 343 14223 14271
call(
  stack
)
type(
  unit
)
"main.ml" 345 14312 14321 "main.ml" 345 14312 14325
type(
  out_channel
)
ident(
  def chan "main.ml" 346 14427 14435 "main.ml" 348 14578 14597
)
"main.ml" 345 14312 14328 "main.ml" 345 14312 14353
type(
  Unix.file_descr -> out_channel
)
ident(
  ext_ref Unix.out_channel_of_descr
)
"main.ml" 345 14312 14355 "main.ml" 345 14312 14368
type(
  string -> Unix.open_flag list -> Unix.file_perm -> Unix.file_descr
)
ident(
  ext_ref Unix.openfile
)
"main.ml" 345 14312 14369 "main.ml" 345 14312 14374
type(
  string
)
ident(
  int_ref fName "main.ml" 341 14112 14124 "main.ml" 341 14112 14129
)
"main.ml" 345 14312 14376 "main.ml" 345 14312 14389
type(
  Unix.open_flag
)
"main.ml" 345 14312 14390 "main.ml" 345 14312 14402
type(
  Unix.open_flag
)
"main.ml" 345 14312 14403 "main.ml" 345 14312 14415
type(
  Unix.open_flag
)
"main.ml" 345 14312 14375 "main.ml" 345 14312 14416
type(
  Unix.open_flag list
)
"main.ml" 345 14312 14417 "main.ml" 345 14312 14422
type(
  Unix.file_perm
)
"main.ml" 345 14312 14354 "main.ml" 345 14312 14423
call(
  stack
)
type(
  Unix.file_descr
)
"main.ml" 345 14312 14328 "main.ml" 345 14312 14423
call(
  stack
)
type(
  out_channel
)
"main.ml" 346 14427 14439 "main.ml" 346 14427 14452
type(
  Cextraireboucle.compInfo
)
ident(
  def partialResult "main.ml" 347 14528 14536 "main.ml" 348 14578 14597
)
"main.ml" 346 14427 14461 "main.ml" 346 14427 14463
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 346 14427 14461 "main.ml" 346 14427 14467
type(
  string
)
"main.ml" 346 14427 14478 "main.ml" 346 14427 14484
type(
  Cvarabs.typeListeAS
)
ident(
  int_ref compAS "main.ml" 301 12498 12507 "main.ml" 301 12498 12513
)
"main.ml" 346 14427 14494 "main.ml" 346 14427 14496
type(
  Cextraireboucle.typeInfofonction
)
ident(
  int_ref fn "main.ml" 245 10237 10244 "main.ml" 245 10237 10246
)
"main.ml" 346 14427 14493 "main.ml" 346 14427 14505
type(
  Cextraireboucle.listeDesES
)
"main.ml" 346 14427 14517 "main.ml" 346 14427 14523
type(
  Cextraireboucle.TreeList.tree
)
ident(
  int_ref result "main.ml" 337 13865 13875 "main.ml" 337 13865 13881
)
"main.ml" 346 14427 14455 "main.ml" 346 14427 14524
type(
  Cextraireboucle.compInfo
)
"main.ml" 347 14528 14536 "main.ml" 347 14528 14554
type(
  out_channel ->
  Cextraireboucle.compInfo -> Marshal.extern_flags list -> unit
)
ident(
  ext_ref Marshal.to_channel
)
"main.ml" 347 14528 14555 "main.ml" 347 14528 14559
type(
  out_channel
)
ident(
  int_ref chan "main.ml" 345 14312 14321 "main.ml" 345 14312 14325
)
"main.ml" 347 14528 14560 "main.ml" 347 14528 14573
type(
  Cextraireboucle.compInfo
)
ident(
  int_ref partialResult "main.ml" 346 14427 14439 "main.ml" 346 14427 14452
)
"main.ml" 347 14528 14574 "main.ml" 347 14528 14576
type(
  Marshal.extern_flags list
)
"main.ml" 347 14528 14536 "main.ml" 347 14528 14576
call(
  stack
)
type(
  unit
)
"main.ml" 348 14578 14583 "main.ml" 348 14578 14592
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 348 14578 14593 "main.ml" 348 14578 14597
type(
  out_channel
)
ident(
  int_ref chan "main.ml" 345 14312 14321 "main.ml" 345 14312 14325
)
"main.ml" 348 14578 14583 "main.ml" 348 14578 14597
call(
  tail
)
type(
  unit
)
"main.ml" 347 14528 14536 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 346 14427 14435 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 345 14312 14317 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 343 14223 14231 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 342 14180 14188 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 341 14112 14120 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 340 14054 14059 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 339 14010 14015 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 338 13953 13958 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 337 13865 13870 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 336 13773 13778 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 331 13627 13632 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 330 13544 13549 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 328 13406 13414 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 327 13367 13377 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 309 12909 12914 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 307 12833 12838 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 304 12710 12716 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 301 12498 12503 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 299 12364 12490 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 298 12247 12252 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 297 12209 12214 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 296 12172 12180 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 295 12045 12050 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 293 11993 12001 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 292 11945 11950 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 289 11772 11777 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 288 11745 11750 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 287 11706 11714 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 286 11669 11677 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 272 11217 11222 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 271 11167 11172 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 270 11105 11110 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 269 11073 11078 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 268 11051 11056 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 267 11020 11025 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 266 10985 10990 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 265 10959 10964 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 264 10936 10941 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 263 10907 10912 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 262 10878 10883 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 261 10850 10855 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 260 10821 10826 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 259 10783 10788 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 258 10750 10755 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 257 10726 10731 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 256 10703 10708 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 255 10651 10656 "main.ml" 348 14578 14597
type(
  unit
)
"main.ml" 249 10343 10378 "main.ml" 351 14735 14742
type(
  unit
)
"main.ml" 249 10343 10349 "main.ml" 351 14735 14742
type(
  unit
)
"main.ml" 246 10254 10260 "main.ml" 351 14735 14742
type(
  unit
)
"main.ml" 243 10194 10213 "main.ml" 351 14735 14742
type(
  ('a * Cextraireboucle.typeInfofonction) list -> unit
)
"main.ml" 356 14834 14838 "main.ml" 356 14834 14854
type(
  Cabs.definition list -> unit
)
ident(
  def analysePartielle "main.ml" 442 16960 16960 "main.ml" 1 0 -1
)
"main.ml" 356 14834 14855 "main.ml" 356 14834 14859
type(
  Cabs.definition list
)
ident(
  def file "main.ml" 359 14866 14867 "main.ml" 385 15528 15556
)
"main.ml" 359 14866 14867 "main.ml" 359 14866 14881
type(
  ExtractinfoPtr.LocalAPContext.t ref
)
ident(
  ext_ref TO.ptrInterval
)
"main.ml" 359 14866 14882 "main.ml" 359 14866 14884
type(
  ExtractinfoPtr.LocalAPContext.t ref ->
  ExtractinfoPtr.LocalAPContext.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 359 14866 14887 "main.ml" 359 14866 14889
type(
  ExtractinfoPtr.LocalAPContext.t
)
"main.ml" 359 14866 14867 "main.ml" 359 14866 14889
type(
  unit
)
"main.ml" 360 14891 14893 "main.ml" 360 14891 14911
type(
  string list ref
)
ident(
  ext_ref TO.integerInterval
)
"main.ml" 360 14891 14912 "main.ml" 360 14891 14914
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 360 14891 14918 "main.ml" 360 14891 14921
type(
  string
)
"main.ml" 360 14891 14917 "main.ml" 360 14891 14922
type(
  string list
)
"main.ml" 360 14891 14893 "main.ml" 360 14891 14922
type(
  unit
)
"main.ml" 364 14927 14928 "main.ml" 364 14927 14934
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 364 14927 14935 "main.ml" 364 14927 14961
type(
  (unit, out_channel, unit) format
)
"main.ml" 364 14927 14928 "main.ml" 364 14927 14961
call(
  stack
)
type(
  unit
)
"main.ml" 365 14963 14964 "main.ml" 365 14963 14975
type(
  int ref
)
ident(
  ext_ref TO.numAppel
)
"main.ml" 365 14963 14976 "main.ml" 365 14963 14978
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 365 14963 14979 "main.ml" 365 14963 14980
type(
  int
)
"main.ml" 365 14963 14964 "main.ml" 365 14963 14980
type(
  unit
)
"main.ml" 366 14982 14983 "main.ml" 366 14982 14991
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idBoucle
)
"main.ml" 366 14982 14992 "main.ml" 366 14982 14994
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 366 14982 14995 "main.ml" 366 14982 14996
type(
  int
)
"main.ml" 366 14982 14983 "main.ml" 366 14982 14996
type(
  unit
)
"main.ml" 366 14982 14998 "main.ml" 366 14982 15002
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idIf
)
"main.ml" 366 14982 15003 "main.ml" 366 14982 15005
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 366 14982 15006 "main.ml" 366 14982 15007
type(
  int
)
"main.ml" 366 14982 14998 "main.ml" 366 14982 15007
type(
  unit
)
"main.ml" 367 15009 15010 "main.ml" 367 15009 15017
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idAppel
)
"main.ml" 367 15009 15017 "main.ml" 367 15009 15019
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 367 15009 15019 "main.ml" 367 15009 15020
type(
  int
)
"main.ml" 367 15009 15010 "main.ml" 367 15009 15020
type(
  unit
)
"main.ml" 368 15022 15023 "main.ml" 368 15022 15037
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.nbImbrications
)
"main.ml" 368 15022 15038 "main.ml" 368 15022 15040
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 368 15022 15041 "main.ml" 368 15022 15042
type(
  int
)
"main.ml" 368 15022 15023 "main.ml" 368 15022 15042
type(
  unit
)
"main.ml" 369 15044 15045 "main.ml" 369 15044 15054
type(
  bool ref
)
ident(
  ext_ref TO.enTETE
)
"main.ml" 369 15044 15055 "main.ml" 369 15044 15057
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 369 15044 15059 "main.ml" 369 15044 15064
type(
  bool
)
"main.ml" 369 15044 15045 "main.ml" 369 15044 15064
type(
  unit
)
"main.ml" 370 15066 15067 "main.ml" 370 15066 15079
type(
  bool ref
)
ident(
  ext_ref TO.estNulEng
)
"main.ml" 370 15066 15080 "main.ml" 370 15066 15082
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 370 15066 15084 "main.ml" 370 15066 15089
type(
  bool
)
"main.ml" 370 15066 15067 "main.ml" 370 15066 15089
type(
  unit
)
"main.ml" 370 15066 15092 "main.ml" 370 15066 15111
type(
  bool ref
)
ident(
  ext_ref TO.isPartialisation
)
"main.ml" 370 15066 15112 "main.ml" 370 15066 15114
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 370 15066 15115 "main.ml" 370 15066 15119
type(
  bool
)
"main.ml" 370 15066 15092 "main.ml" 370 15066 15119
type(
  unit
)
"main.ml" 370 15066 15121 "main.ml" 370 15066 15142
type(
  bool ref
)
ident(
  ext_ref TO.isPrint_Expression
)
"main.ml" 370 15066 15143 "main.ml" 370 15066 15145
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 370 15066 15146 "main.ml" 370 15066 15150
type(
  bool
)
"main.ml" 370 15066 15121 "main.ml" 370 15066 15150
type(
  unit
)
"main.ml" 371 15153 15154 "main.ml" 371 15153 15170
type(
  bool ref
)
ident(
  ext_ref TO.estDansBoucle
)
"main.ml" 371 15153 15171 "main.ml" 371 15153 15173
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 371 15153 15175 "main.ml" 371 15153 15180
type(
  bool
)
"main.ml" 371 15153 15154 "main.ml" 371 15153 15180
type(
  unit
)
"main.ml" 371 15153 15181 "main.ml" 371 15153 15202
type(
  bool ref
)
ident(
  ext_ref Cvarabs.getOnlyBoolAssignment
)
"main.ml" 371 15153 15203 "main.ml" 371 15153 15205
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 371 15153 15206 "main.ml" 371 15153 15210
type(
  bool
)
"main.ml" 371 15153 15181 "main.ml" 371 15153 15210
type(
  unit
)
"main.ml" 374 15220 15221 "main.ml" 374 15220 15233
type(
  Cabs.definition list -> unit
)
ident(
  ext_ref Cextraireboucle.analyse_defs
)
"main.ml" 374 15220 15234 "main.ml" 374 15220 15238
type(
  Cabs.definition list
)
ident(
  int_ref file "main.ml" 356 14834 14855 "main.ml" 356 14834 14859
)
"main.ml" 374 15220 15221 "main.ml" 374 15220 15238
call(
  stack
)
type(
  unit
)
"main.ml" 374 15220 15239 "main.ml" 374 15220 15260
type(
  bool ref
)
ident(
  ext_ref Cvarabs.getOnlyBoolAssignment
)
"main.ml" 374 15220 15261 "main.ml" 374 15220 15263
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 374 15220 15264 "main.ml" 374 15220 15269
type(
  bool
)
"main.ml" 374 15220 15239 "main.ml" 374 15220 15269
type(
  unit
)
"main.ml" 374 15220 15271 "main.ml" 374 15220 15280
type(
  bool ref
)
ident(
  ext_ref ExtractinfoPtr.phaseinit
)
"main.ml" 374 15220 15281 "main.ml" 374 15220 15283
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 374 15220 15284 "main.ml" 374 15220 15289
type(
  bool
)
"main.ml" 374 15220 15271 "main.ml" 374 15220 15289
type(
  unit
)
"main.ml" 377 15297 15298 "main.ml" 377 15297 15304
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 377 15297 15305 "main.ml" 377 15297 15369
type(
  (unit, out_channel, unit) format
)
"main.ml" 377 15297 15298 "main.ml" 377 15297 15369
call(
  stack
)
type(
  unit
)
"main.ml" 378 15371 15372 "main.ml" 378 15371 15400
type(
  string -> unit
)
ident(
  ext_ref Resumeforgraph.endForPartial
)
"main.ml" 378 15371 15401 "main.ml" 378 15371 15465
type(
  string
)
"main.ml" 378 15371 15372 "main.ml" 378 15371 15465
call(
  stack
)
type(
  unit
)
"main.ml" 383 15490 15491 "main.ml" 383 15490 15499
type(
  Cextraireboucle.listeDesFonctions -> unit
)
ident(
  int_ref getComps "main.ml" 243 10194 10202 "main.ml" 243 10194 10210
)
"main.ml" 383 15490 15500 "main.ml" 383 15490 15501
type(
  Cextraireboucle.document ref -> Cextraireboucle.document
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 383 15490 15501 "main.ml" 383 15490 15504
type(
  Cextraireboucle.document ref
)
ident(
  ext_ref Cextraireboucle.doc
)
"main.ml" 383 15490 15500 "main.ml" 383 15490 15504
type(
  Cextraireboucle.document
)
"main.ml" 383 15490 15500 "main.ml" 383 15490 15524
type(
  Cextraireboucle.listeDesFonctions
)
"main.ml" 383 15490 15491 "main.ml" 383 15490 15524
call(
  stack
)
type(
  unit
)
"main.ml" 385 15528 15530 "main.ml" 385 15528 15542
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 385 15528 15543 "main.ml" 385 15528 15556
type(
  string
)
"main.ml" 385 15528 15530 "main.ml" 385 15528 15556
call(
  tail
)
type(
  unit
)
"main.ml" 383 15490 15491 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 378 15371 15372 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 377 15297 15298 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 374 15220 15271 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 374 15220 15239 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 374 15220 15221 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 371 15153 15181 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 371 15153 15154 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 370 15066 15121 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 370 15066 15092 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 370 15066 15067 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 369 15044 15045 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 368 15022 15023 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 367 15009 15010 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 366 14982 14998 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 366 14982 14983 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 365 14963 14964 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 364 14927 14928 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 360 14891 14893 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 359 14866 14867 "main.ml" 385 15528 15556
type(
  unit
)
"main.ml" 442 16960 16964 "main.ml" 442 16960 16980
type(
  Cabs.definition list -> unit
)
ident(
  def getSortRecStatus "main.ml" 466 17682 17682 "main.ml" 1 0 -1
)
"main.ml" 442 16960 16981 "main.ml" 442 16960 16983
type(
  Cabs.definition list
)
ident(
  def fp "main.ml" 443 16986 16989 "main.ml" 461 17643 17649
)
"main.ml" 443 16986 16993 "main.ml" 443 16986 16996
type(
  out_channel
)
ident(
  def out "main.ml" 444 17025 17028 "main.ml" 461 17643 17649
)
"main.ml" 443 16986 16999 "main.ml" 443 16986 17007
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 443 16986 17008 "main.ml" 443 16986 17021
type(
  string
)
"main.ml" 443 16986 16999 "main.ml" 443 16986 17021
call(
  stack
)
type(
  out_channel
)
"main.ml" 444 17025 17028 "main.ml" 444 17025 17040
type(
  out_channel -> Cabs.definition list -> Cabs.definition list -> unit
)
ident(
  ext_ref Sortrec.test
)
"main.ml" 444 17025 17041 "main.ml" 444 17025 17044
type(
  out_channel
)
ident(
  int_ref out "main.ml" 443 16986 16993 "main.ml" 443 16986 16996
)
"main.ml" 444 17025 17045 "main.ml" 444 17025 17047
type(
  Cabs.definition list
)
ident(
  int_ref fp "main.ml" 442 16960 16981 "main.ml" 442 16960 16983
)
"main.ml" 444 17025 17048 "main.ml" 444 17025 17050
type(
  Cabs.definition list
)
ident(
  int_ref fp "main.ml" 442 16960 16981 "main.ml" 442 16960 16983
)
"main.ml" 444 17025 17028 "main.ml" 444 17025 17050
call(
  stack
)
type(
  unit
)
"main.ml" 445 17052 17059 "main.ml" 445 17052 17071
type(
  int
)
ident(
  def outputstatut "main.ml" 447 17122 17125 "main.ml" 461 17643 17649
)
"main.ml" 445 17052 17075 "main.ml" 445 17052 17110
type(
  Cabs.definition list -> Cabs.definition list -> int
)
ident(
  ext_ref Sortrec.applicationRecursivityClass
)
"main.ml" 445 17052 17111 "main.ml" 445 17052 17113
type(
  Cabs.definition list
)
ident(
  int_ref fp "main.ml" 442 16960 16981 "main.ml" 442 16960 16983
)
"main.ml" 445 17052 17114 "main.ml" 445 17052 17116
type(
  Cabs.definition list
)
ident(
  int_ref fp "main.ml" 442 16960 16981 "main.ml" 442 16960 16983
)
"main.ml" 445 17052 17074 "main.ml" 445 17052 17117
call(
  stack
)
type(
  int
)
"main.ml" 447 17122 17129 "main.ml" 447 17122 17135
type(
  string
)
ident(
  def strToP "main.ml" 454 17433 17439 "main.ml" 461 17643 17649
)
"main.ml" 448 17138 17145 "main.ml" 448 17138 17157
type(
  int
)
ident(
  int_ref outputstatut "main.ml" 445 17052 17059 "main.ml" 445 17052 17071
)
"main.ml" 448 17138 17158 "main.ml" 448 17138 17159
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 448 17138 17160 "main.ml" 448 17138 17161
type(
  int
)
"main.ml" 448 17138 17145 "main.ml" 448 17138 17161
type(
  bool
)
"main.ml" 449 17168 17181 "main.ml" 449 17168 17195
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 449 17168 17196 "main.ml" 449 17168 17230
type(
  (string, unit, string) format
)
"main.ml" 449 17168 17181 "main.ml" 449 17168 17230
call(
  stack
)
type(
  string
)
"main.ml" 450 17231 17243 "main.ml" 450 17231 17255
type(
  int
)
ident(
  int_ref outputstatut "main.ml" 445 17052 17059 "main.ml" 445 17052 17071
)
"main.ml" 450 17231 17256 "main.ml" 450 17231 17257
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 450 17231 17258 "main.ml" 450 17231 17259
type(
  int
)
"main.ml" 450 17231 17243 "main.ml" 450 17231 17259
type(
  bool
)
"main.ml" 451 17266 17279 "main.ml" 451 17266 17293
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 451 17266 17294 "main.ml" 451 17266 17343
type(
  (string, unit, string) format
)
"main.ml" 451 17266 17279 "main.ml" 451 17266 17343
call(
  stack
)
type(
  string
)
"main.ml" 453 17358 17369 "main.ml" 453 17358 17383
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 453 17358 17384 "main.ml" 453 17358 17429
type(
  (string, unit, string) format
)
"main.ml" 453 17358 17369 "main.ml" 453 17358 17429
call(
  stack
)
type(
  string
)
"main.ml" 450 17231 17240 "main.ml" 453 17358 17429
type(
  string
)
"main.ml" 448 17138 17142 "main.ml" 453 17358 17429
type(
  string
)
"main.ml" 454 17433 17439 "main.ml" 454 17433 17452
type(
  out_channel -> string -> unit
)
ident(
  ext_ref Pervasives.output_string
)
"main.ml" 454 17433 17454 "main.ml" 454 17433 17457
type(
  out_channel
)
ident(
  int_ref out "main.ml" 443 16986 16993 "main.ml" 443 16986 16996
)
"main.ml" 454 17433 17458 "main.ml" 454 17433 17464
type(
  string
)
ident(
  int_ref strToP "main.ml" 447 17122 17129 "main.ml" 447 17122 17135
)
"main.ml" 454 17433 17439 "main.ml" 454 17433 17464
call(
  stack
)
type(
  unit
)
"main.ml" 455 17466 17471 "main.ml" 455 17466 17480
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 455 17466 17481 "main.ml" 455 17466 17484
type(
  out_channel
)
ident(
  int_ref out "main.ml" 443 16986 16993 "main.ml" 443 16986 16996
)
"main.ml" 455 17466 17471 "main.ml" 455 17466 17484
call(
  stack
)
type(
  unit
)
"main.ml" 457 17487 17493 "main.ml" 457 17487 17505
type(
  int
)
ident(
  int_ref outputstatut "main.ml" 445 17052 17059 "main.ml" 445 17052 17071
)
"main.ml" 457 17487 17506 "main.ml" 457 17487 17507
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 457 17487 17508 "main.ml" 457 17487 17509
type(
  int
)
"main.ml" 457 17487 17493 "main.ml" 457 17487 17509
type(
  bool
)
"main.ml" 459 17525 17529 "main.ml" 459 17525 17543
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.eprintf
)
"main.ml" 459 17525 17544 "main.ml" 459 17525 17616
type(
  (unit, out_channel, unit) format
)
"main.ml" 459 17525 17529 "main.ml" 459 17525 17616
call(
  stack
)
type(
  unit
)
"main.ml" 460 17619 17635 "main.ml" 460 17619 17639
type(
  int -> unit
)
ident(
  ext_ref Pervasives.exit
)
"main.ml" 460 17619 17640 "main.ml" 460 17619 17641
type(
  int
)
"main.ml" 460 17619 17635 "main.ml" 460 17619 17642
call(
  tail
)
type(
  unit
)
"main.ml" 458 17516 17519 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 457 17487 17490 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 455 17466 17471 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 454 17433 17439 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 447 17122 17125 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 445 17052 17055 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 444 17025 17028 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 443 16986 16989 "main.ml" 461 17643 17649
type(
  unit
)
"main.ml" 468 17725 17731 "main.ml" 468 17725 17737
type(
  out_channel
)
ident(
  def output "main.ml" 473 17830 17831 "main.ml" 799 29320 29352
)
"main.ml" 468 17725 17739 "main.ml" 468 17725 17744
type(
  bool
)
ident(
  def close "main.ml" 473 17830 17831 "main.ml" 799 29320 29352
)
"main.ml" 468 17725 17730 "main.ml" 468 17725 17745
type(
  out_channel * bool
)
"main.ml" 469 17748 17753 "main.ml" 469 17748 17754
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 469 17748 17754 "main.ml" 469 17748 17762
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 469 17748 17753 "main.ml" 469 17748 17762
type(
  string
)
"main.ml" 469 17748 17763 "main.ml" 469 17748 17764
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 469 17748 17765 "main.ml" 469 17748 17767
type(
  string
)
"main.ml" 469 17748 17753 "main.ml" 469 17748 17767
type(
  bool
)
"main.ml" 469 17748 17774 "main.ml" 469 17748 17780
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 469 17748 17781 "main.ml" 469 17748 17786
type(
  bool
)
"main.ml" 469 17748 17773 "main.ml" 469 17748 17787
type(
  out_channel * bool
)
"main.ml" 470 17788 17797 "main.ml" 470 17788 17805
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 470 17788 17806 "main.ml" 470 17788 17807
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 470 17788 17807 "main.ml" 470 17788 17815
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 470 17788 17806 "main.ml" 470 17788 17815
type(
  string
)
"main.ml" 470 17788 17796 "main.ml" 470 17788 17816
call(
  stack
)
type(
  out_channel
)
"main.ml" 470 17788 17818 "main.ml" 470 17788 17822
type(
  bool
)
"main.ml" 470 17788 17795 "main.ml" 470 17788 17823
type(
  out_channel * bool
)
"main.ml" 469 17748 17750 "main.ml" 470 17788 17823
type(
  out_channel * bool
)
"main.ml" 473 17830 17831 "main.ml" 473 17830 17858
type(
  string -> unit
)
ident(
  ext_ref Cextraireboucle.set_out_dir
)
"main.ml" 473 17830 17860 "main.ml" 473 17830 17861
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 473 17830 17861 "main.ml" 473 17830 17868
type(
  string ref
)
ident(
  int_ref out_dir "main.ml" 112 4185 4189 "main.ml" 112 4185 4196
)
"main.ml" 473 17830 17859 "main.ml" 473 17830 17869
type(
  string
)
"main.ml" 473 17830 17831 "main.ml" 473 17830 17869
call(
  stack
)
type(
  unit
)
"main.ml" 477 17916 17918 "main.ml" 477 17916 17922
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 477 17916 17923 "main.ml" 477 17916 17925
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 477 17916 17946 "main.ml" 477 17916 17950
type(
  bool
)
"main.ml" 477 17916 17926 "main.ml" 477 17916 17951
type(
  Frontc.parsing_arg
)
"main.ml" 477 17916 17953 "main.ml" 477 17916 17954
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 477 17916 17954 "main.ml" 477 17916 17958
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 477 17916 17953 "main.ml" 477 17916 17958
type(
  Frontc.parsing_arg list
)
"main.ml" 477 17916 17926 "main.ml" 477 17916 17958
type(
  Frontc.parsing_arg list
)
"main.ml" 477 17916 17918 "main.ml" 477 17916 17958
type(
  unit
)
"main.ml" 478 17960 17962 "main.ml" 478 17960 17974
type(
  bool ref
)
ident(
  int_ref calipso_rrec "main.ml" 101 3893 3897 "main.ml" 101 3893 3909
)
"main.ml" 478 17960 17975 "main.ml" 478 17960 17977
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 478 17960 17978 "main.ml" 478 17960 17982
type(
  bool
)
"main.ml" 478 17960 17962 "main.ml" 478 17960 17982
type(
  unit
)
"main.ml" 479 17984 17986 "main.ml" 479 17984 17997
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 479 17984 17998 "main.ml" 479 17984 18000
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 479 17984 18001 "main.ml" 479 17984 18005
type(
  bool
)
"main.ml" 479 17984 17986 "main.ml" 479 17984 18005
type(
  unit
)
"main.ml" 480 18007 18009 "main.ml" 480 18007 18013
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 480 18007 18014 "main.ml" 480 18007 18016
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 480 18007 18017 "main.ml" 480 18007 18024
type(
  Frontc.parsing_arg
)
"main.ml" 480 18007 18028 "main.ml" 480 18007 18029
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 480 18007 18029 "main.ml" 480 18007 18033
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 480 18007 18028 "main.ml" 480 18007 18033
type(
  Frontc.parsing_arg list
)
"main.ml" 480 18007 18017 "main.ml" 480 18007 18033
type(
  Frontc.parsing_arg list
)
"main.ml" 480 18007 18009 "main.ml" 480 18007 18033
type(
  unit
)
"main.ml" 481 18036 18037 "main.ml" 481 18036 18044
type(
  string ref
)
ident(
  int_ref out_dir "main.ml" 112 4185 4189 "main.ml" 112 4185 4196
)
"main.ml" 481 18036 18045 "main.ml" 481 18036 18047
type(
  string ref -> string -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 481 18036 18048 "main.ml" 481 18036 18054
type(
  string
)
"main.ml" 481 18036 18037 "main.ml" 481 18036 18054
type(
  unit
)
"main.ml" 481 18036 18056 "main.ml" 481 18036 18083
type(
  string -> unit
)
ident(
  ext_ref Cextraireboucle.set_out_dir
)
"main.ml" 481 18036 18084 "main.ml" 481 18036 18090
type(
  string
)
"main.ml" 481 18036 18056 "main.ml" 481 18036 18090
call(
  stack
)
type(
  unit
)
"main.ml" 482 18092 18093 "main.ml" 482 18092 18102
type(
  (Arg.key * Arg.spec * Arg.doc) list ->
  Arg.anon_fun -> Arg.usage_msg -> unit
)
ident(
  ext_ref Arg.parse
)
"main.ml" 482 18092 18103 "main.ml" 482 18092 18107
type(
  (Arg.key * Arg.spec * Arg.doc) list
)
ident(
  int_ref opts "main.ml" 132 4606 4610 "main.ml" 132 4606 4614
)
"main.ml" 482 18092 18108 "main.ml" 482 18092 18125
type(
  Arg.anon_fun
)
ident(
  int_ref add_file_and_name "main.ml" 80 3304 3308 "main.ml" 80 3304 3325
)
"main.ml" 482 18092 18126 "main.ml" 482 18092 18132
type(
  Arg.usage_msg
)
ident(
  int_ref banner "main.ml" 48 980 984 "main.ml" 48 980 990
)
"main.ml" 482 18092 18093 "main.ml" 482 18092 18132
call(
  stack
)
type(
  unit
)
"main.ml" 484 18181 18182 "main.ml" 484 18181 18200
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 484 18181 18201 "main.ml" 484 18181 18203
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 484 18181 18204 "main.ml" 484 18181 18205
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 484 18181 18205 "main.ml" 484 18181 18223
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 484 18181 18204 "main.ml" 484 18181 18223
type(
  string list
)
"main.ml" 484 18181 18224 "main.ml" 484 18181 18225
type(
  string list -> string list -> string list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 484 18181 18227 "main.ml" 484 18181 18239
type(
  string -> string list
)
ident(
  int_ref get_fun_list "main.ml" 85 3509 3513 "main.ml" 85 3509 3525
)
"main.ml" 484 18181 18240 "main.ml" 484 18181 18241
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 484 18181 18241 "main.ml" 484 18181 18254
type(
  string ref
)
ident(
  int_ref fun_list_file "main.ml" 83 3430 3434 "main.ml" 83 3430 3447
)
"main.ml" 484 18181 18240 "main.ml" 484 18181 18254
type(
  string
)
"main.ml" 484 18181 18226 "main.ml" 484 18181 18255
call(
  stack
)
type(
  string list
)
"main.ml" 484 18181 18204 "main.ml" 484 18181 18255
call(
  stack
)
type(
  string list
)
"main.ml" 484 18181 18182 "main.ml" 484 18181 18255
type(
  unit
)
"main.ml" 485 18257 18258 "main.ml" 485 18257 18297
type(
  string list -> unit
)
ident(
  ext_ref Cextraireboucle.sort_list_file_and_name
)
"main.ml" 485 18257 18298 "main.ml" 485 18257 18299
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 485 18257 18299 "main.ml" 485 18257 18317
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 485 18257 18298 "main.ml" 485 18257 18317
type(
  string list
)
"main.ml" 485 18257 18258 "main.ml" 485 18257 18317
call(
  stack
)
type(
  unit
)
"main.ml" 489 18416 18423 "main.ml" 489 18416 18424
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 489 18416 18424 "main.ml" 489 18416 18435
type(
  string ref
)
ident(
  ext_ref Util.in_ffx_file
)
"main.ml" 489 18416 18422 "main.ml" 489 18416 18436
type(
  string
)
"main.ml" 489 18416 18437 "main.ml" 489 18416 18439
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"main.ml" 489 18416 18440 "main.ml" 489 18416 18442
type(
  string
)
"main.ml" 489 18416 18421 "main.ml" 489 18416 18443
type(
  bool
)
"main.ml" 490 18455 18463 "main.ml" 490 18455 18476
type(
  Xml.xml
)
ident(
  def ffx_flowfacts "main.ml" 491 18510 18514 "main.ml" 514 19948 19962
)
"main.ml" 490 18455 18479 "main.ml" 490 18455 18493
type(
  string -> Xml.xml
)
ident(
  ext_ref Xml.parse_file
)
"main.ml" 490 18455 18494 "main.ml" 490 18455 18495
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 490 18455 18495 "main.ml" 490 18455 18506
type(
  string ref
)
ident(
  ext_ref Util.in_ffx_file
)
"main.ml" 490 18455 18494 "main.ml" 490 18455 18506
type(
  string
)
"main.ml" 490 18455 18479 "main.ml" 490 18455 18506
call(
  stack
)
type(
  Xml.xml
)
"main.ml" 491 18510 18514 "main.ml" 491 18510 18527
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_endline
)
"main.ml" 491 18510 18529 "main.ml" 491 18510 18536
type(
  Xml.xml -> string
)
ident(
  ext_ref Xml.tag
)
"main.ml" 491 18510 18537 "main.ml" 491 18510 18550
type(
  Xml.xml
)
ident(
  int_ref ffx_flowfacts "main.ml" 490 18455 18463 "main.ml" 490 18455 18476
)
"main.ml" 491 18510 18528 "main.ml" 491 18510 18551
call(
  stack
)
type(
  string
)
"main.ml" 491 18510 18514 "main.ml" 491 18510 18551
call(
  stack
)
type(
  unit
)
"main.ml" 492 18553 18557 "main.ml" 492 18553 18573
type(
  Xml.xml -> unit
)
ident(
  ext_ref Util.parseFFXScenario
)
"main.ml" 492 18553 18574 "main.ml" 492 18553 18587
type(
  Xml.xml
)
ident(
  int_ref ffx_flowfacts "main.ml" 490 18455 18463 "main.ml" 490 18455 18476
)
"main.ml" 492 18553 18557 "main.ml" 492 18553 18587
call(
  stack
)
type(
  unit
)
"main.ml" 493 18590 18596 "main.ml" 493 18590 18605
type(
  (string * string * string -> unit) ->
  (string * string * string) list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 494 18608 18620 "main.ml" 494 18608 18621
type(
  string * string * string
)
ident(
  def x "main.ml" 495 18625 18635 "main.ml" 511 19685 19700
)
"main.ml" 495 18625 18640 "main.ml" 495 18625 18644
type(
  string
)
ident(
  def xvar "main.ml" 496 18702 18714 "main.ml" 511 19685 19700
)
"main.ml" 495 18625 18646 "main.ml" 495 18625 18651
type(
  string
)
ident(
  def xlval "main.ml" 496 18702 18714 "main.ml" 511 19685 19700
)
"main.ml" 495 18625 18653 "main.ml" 495 18625 18658
type(
  string
)
ident(
  def xuval "main.ml" 496 18702 18714 "main.ml" 511 19685 19700
)
"main.ml" 495 18625 18639 "main.ml" 495 18625 18659
type(
  string * string * string
)
"main.ml" 495 18625 18662 "main.ml" 495 18625 18663
type(
  string * string * string
)
ident(
  int_ref x "main.ml" 494 18608 18620 "main.ml" 494 18608 18621
)
"main.ml" 496 18702 18718 "main.ml" 496 18702 18723
type(
  string
)
ident(
  int_ref xlval "main.ml" 495 18625 18646 "main.ml" 495 18625 18651
)
"main.ml" 496 18702 18724 "main.ml" 496 18702 18725
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 496 18702 18726 "main.ml" 496 18702 18731
type(
  string
)
ident(
  int_ref xuval "main.ml" 495 18625 18653 "main.ml" 495 18625 18658
)
"main.ml" 496 18702 18717 "main.ml" 496 18702 18732
type(
  bool
)
"main.ml" 498 18854 18872 "main.ml" 498 18854 18873
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 498 18854 18873 "main.ml" 498 18854 18878
type(
  bool ref
)
ident(
  ext_ref Util.ghost
)
"main.ml" 498 18854 18871 "main.ml" 498 18854 18879
type(
  bool
)
"main.ml" 499 18891 18907 "main.ml" 499 18891 18925
type(
  Cabs.expression list ref
)
ident(
  ext_ref Util.scenarioAsDocInsts
)
"main.ml" 499 18891 18926 "main.ml" 499 18891 18928
type(
  Cabs.expression list ref -> Cabs.expression list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 500 18930 18956 "main.ml" 500 18930 18962
type(
  Cabs.binary_operator
)
"main.ml" 500 18930 18972 "main.ml" 500 18930 18978
type(
  string
)
ident(
  int_ref xvar "main.ml" 495 18625 18640 "main.ml" 495 18625 18644
)
"main.ml" 500 18930 18964 "main.ml" 500 18930 18978
type(
  Cabs.expression
)
"main.ml" 500 18930 18998 "main.ml" 500 18930 19005
type(
  string
)
ident(
  int_ref xlval "main.ml" 495 18625 18646 "main.ml" 495 18625 18651
)
"main.ml" 500 18930 18988 "main.ml" 500 18930 19006
type(
  Cabs.constant
)
"main.ml" 500 18930 18980 "main.ml" 500 18930 19006
type(
  Cabs.expression
)
"main.ml" 500 18930 18949 "main.ml" 500 18930 19007
type(
  Cabs.expression
)
"main.ml" 500 18930 18948 "main.ml" 500 18930 19008
type(
  Cabs.expression list
)
"main.ml" 500 18930 19009 "main.ml" 500 18930 19010
type(
  Cabs.expression list -> Cabs.expression list -> Cabs.expression list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 500 18930 19011 "main.ml" 500 18930 19012
type(
  Cabs.expression list ref -> Cabs.expression list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 500 18930 19012 "main.ml" 500 18930 19030
type(
  Cabs.expression list ref
)
ident(
  ext_ref Util.scenarioAsDocInsts
)
"main.ml" 500 18930 19011 "main.ml" 500 18930 19030
type(
  Cabs.expression list
)
"main.ml" 500 18930 18948 "main.ml" 500 18930 19030
call(
  stack
)
type(
  Cabs.expression list
)
"main.ml" 498 18854 18885 "main.ml" 501 19032 19049
type(
  unit
)
"main.ml" 502 19061 19077 "main.ml" 502 19061 19094
type(
  Util.abstractStore list ref
)
ident(
  ext_ref Util.scenarioAsGlobals
)
"main.ml" 502 19061 19095 "main.ml" 502 19061 19097
type(
  Util.abstractStore list ref -> Util.abstractStore list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 503 19098 19131 "main.ml" 503 19098 19135
type(
  string
)
ident(
  int_ref xvar "main.ml" 495 18625 18640 "main.ml" 495 18625 18644
)
"main.ml" 503 19098 19161 "main.ml" 503 19098 19168
type(
  string
)
ident(
  int_ref xlval "main.ml" 495 18625 18646 "main.ml" 495 18625 18651
)
"main.ml" 503 19098 19151 "main.ml" 503 19098 19169
type(
  Cabs.constant
)
"main.ml" 503 19098 19141 "main.ml" 503 19098 19170
type(
  Cabs.expression
)
"main.ml" 503 19098 19137 "main.ml" 503 19098 19170
type(
  Util.expVA
)
"main.ml" 503 19098 19117 "main.ml" 503 19098 19171
type(
  Util.abstractStore
)
"main.ml" 503 19098 19116 "main.ml" 503 19098 19172
type(
  Util.abstractStore list
)
"main.ml" 503 19098 19173 "main.ml" 503 19098 19174
type(
  Util.abstractStore list ->
  Util.abstractStore list -> Util.abstractStore list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 503 19098 19175 "main.ml" 503 19098 19176
type(
  Util.abstractStore list ref -> Util.abstractStore list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 503 19098 19176 "main.ml" 503 19098 19193
type(
  Util.abstractStore list ref
)
ident(
  ext_ref Util.scenarioAsGlobals
)
"main.ml" 503 19098 19175 "main.ml" 503 19098 19193
type(
  Util.abstractStore list
)
"main.ml" 503 19098 19116 "main.ml" 503 19098 19193
call(
  stack
)
type(
  Util.abstractStore list
)
"main.ml" 502 19061 19077 "main.ml" 503 19098 19193
type(
  unit
)
"main.ml" 508 19527 19543 "main.ml" 508 19527 19564
type(
  Util.inst list ref
)
ident(
  ext_ref Util.scenarioAsGlobalInsts
)
"main.ml" 508 19527 19565 "main.ml" 508 19527 19567
type(
  Util.inst list ref -> Util.inst list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 509 19568 19591 "main.ml" 509 19568 19595
type(
  string
)
ident(
  int_ref xvar "main.ml" 495 18625 18640 "main.ml" 495 18625 18644
)
"main.ml" 509 19568 19621 "main.ml" 509 19568 19628
type(
  string
)
ident(
  int_ref xlval "main.ml" 495 18625 18646 "main.ml" 495 18625 18651
)
"main.ml" 509 19568 19611 "main.ml" 509 19568 19629
type(
  Cabs.constant
)
"main.ml" 509 19568 19601 "main.ml" 509 19568 19630
type(
  Cabs.expression
)
"main.ml" 509 19568 19597 "main.ml" 509 19568 19630
type(
  Util.expVA
)
"main.ml" 509 19568 19632 "main.ml" 509 19568 19634
type(
  string list
)
"main.ml" 509 19568 19636 "main.ml" 509 19568 19638
type(
  string list
)
"main.ml" 509 19568 19587 "main.ml" 509 19568 19639
type(
  Util.inst
)
"main.ml" 509 19568 19586 "main.ml" 509 19568 19640
type(
  Util.inst list
)
"main.ml" 509 19568 19641 "main.ml" 509 19568 19642
type(
  Util.inst list -> Util.inst list -> Util.inst list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 509 19568 19643 "main.ml" 509 19568 19644
type(
  Util.inst list ref -> Util.inst list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 509 19568 19644 "main.ml" 509 19568 19665
type(
  Util.inst list ref
)
ident(
  ext_ref Util.scenarioAsGlobalInsts
)
"main.ml" 509 19568 19643 "main.ml" 509 19568 19665
type(
  Util.inst list
)
"main.ml" 509 19568 19586 "main.ml" 509 19568 19665
call(
  stack
)
type(
  Util.inst list
)
"main.ml" 508 19527 19543 "main.ml" 509 19568 19665
type(
  unit
)
"main.ml" 501 19032 19055 "main.ml" 510 19667 19684
type(
  unit
)
"main.ml" 497 18775 18787 "main.ml" 511 19685 19700
type(
  unit
)
"main.ml" 496 18702 18714 "main.ml" 511 19685 19700
type(
  unit
)
"main.ml" 495 18625 18635 "main.ml" 511 19685 19700
type(
  unit
)
"main.ml" 493 18590 18606 "main.ml" 514 19948 19955
type(
  string * string * string -> unit
)
"main.ml" 514 19948 19956 "main.ml" 514 19948 19957
type(
  (string * string * string) list ref -> (string * string * string) list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 514 19948 19957 "main.ml" 514 19948 19962
type(
  (string * string * string) list ref
)
ident(
  ext_ref Util.rscAS
)
"main.ml" 514 19948 19956 "main.ml" 514 19948 19962
type(
  (string * string * string) list
)
"main.ml" 493 18590 18596 "main.ml" 514 19948 19962
call(
  stack
)
type(
  unit
)
"main.ml" 492 18553 18557 "main.ml" 514 19948 19962
type(
  unit
)
"main.ml" 491 18510 18514 "main.ml" 514 19948 19962
type(
  unit
)
"main.ml" 489 18416 18449 "main.ml" 515 19963 19968
type(
  unit
)
"main.ml" 489 18416 18418 "main.ml" 515 19963 19968
type(
  unit
)
"main.ml" 518 20019 20023 "main.ml" 518 20019 20024
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 518 20019 20024 "main.ml" 518 20019 20044
type(
  bool ref
)
ident(
  ext_ref Util.hasCondListFile_name
)
"main.ml" 518 20019 20023 "main.ml" 518 20019 20044
type(
  bool
)
"main.ml" 519 20056 20058 "main.ml" 519 20056 20071
type(
  Cvarabs.typeListeAS ref
)
ident(
  ext_ref Util.condAnnotated
)
"main.ml" 519 20056 20072 "main.ml" 519 20056 20074
type(
  Cvarabs.typeListeAS ref -> Cvarabs.typeListeAS -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 519 20056 20075 "main.ml" 519 20056 20094
type(
  string -> Cvarabs.typeListeAS
)
ident(
  ext_ref Cextraireboucle.getAbsStoreFromComp
)
"main.ml" 519 20056 20095 "main.ml" 519 20056 20096
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 519 20056 20096 "main.ml" 519 20056 20113
type(
  string ref
)
ident(
  ext_ref Util.condListFile_name
)
"main.ml" 519 20056 20095 "main.ml" 519 20056 20113
type(
  string
)
"main.ml" 519 20056 20075 "main.ml" 519 20056 20113
call(
  stack
)
type(
  Cvarabs.typeListeAS
)
"main.ml" 518 20019 20050 "main.ml" 521 20157 20161
type(
  unit
)
"main.ml" 518 20019 20020 "main.ml" 521 20157 20161
type(
  unit
)
"main.ml" 522 20163 20169 "main.ml" 522 20163 20172
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"main.ml" 522 20163 20173 "main.ml" 522 20163 20174
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 522 20163 20174 "main.ml" 522 20163 20181
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 522 20163 20173 "main.ml" 522 20163 20181
type(
  bool
)
"main.ml" 522 20163 20168 "main.ml" 522 20163 20182
type(
  bool
)
"main.ml" 522 20163 20183 "main.ml" 522 20163 20185
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"main.ml" 522 20163 20187 "main.ml" 522 20163 20190
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"main.ml" 522 20163 20191 "main.ml" 522 20163 20192
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 522 20163 20192 "main.ml" 522 20163 20202
type(
  bool ref
)
ident(
  int_ref onlyGraphe "main.ml" 123 4368 4372 "main.ml" 123 4368 4382
)
"main.ml" 522 20163 20191 "main.ml" 522 20163 20202
type(
  bool
)
"main.ml" 522 20163 20186 "main.ml" 522 20163 20203
type(
  bool
)
"main.ml" 522 20163 20167 "main.ml" 522 20163 20204
type(
  bool
)
"main.ml" 524 20241 20247 "main.ml" 524 20241 20258
type(
  string ref list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 524 20241 20259 "main.ml" 524 20241 20260
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 524 20241 20260 "main.ml" 524 20241 20281
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 524 20241 20259 "main.ml" 524 20241 20281
type(
  string ref list
)
"main.ml" 524 20241 20247 "main.ml" 524 20241 20281
call(
  stack
)
type(
  int
)
"main.ml" 524 20241 20282 "main.ml" 524 20241 20283
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"main.ml" 524 20241 20284 "main.ml" 524 20241 20285
type(
  int
)
"main.ml" 524 20241 20246 "main.ml" 524 20241 20286
type(
  bool
)
"main.ml" 525 20298 20304 "main.ml" 525 20298 20313
type(
  (Arg.key * Arg.spec * Arg.doc) list -> Arg.usage_msg -> unit
)
ident(
  ext_ref Arg.usage
)
"main.ml" 525 20298 20314 "main.ml" 525 20298 20318
type(
  (Arg.key * Arg.spec * Arg.doc) list
)
ident(
  int_ref opts "main.ml" 132 4606 4610 "main.ml" 132 4606 4614
)
"main.ml" 525 20298 20319 "main.ml" 525 20298 20325
type(
  Arg.usage_msg
)
ident(
  int_ref banner "main.ml" 48 980 984 "main.ml" 48 980 990
)
"main.ml" 525 20298 20304 "main.ml" 525 20298 20325
call(
  stack
)
type(
  unit
)
"main.ml" 526 20327 20333 "main.ml" 526 20327 20345
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"main.ml" 526 20327 20346 "main.ml" 526 20327 20395
type(
  string
)
"main.ml" 526 20327 20333 "main.ml" 526 20327 20395
call(
  stack
)
type(
  unit
)
"main.ml" 527 20397 20403 "main.ml" 527 20397 20407
type(
  int -> unit
)
ident(
  ext_ref Pervasives.exit
)
"main.ml" 527 20397 20408 "main.ml" 527 20397 20409
type(
  int
)
"main.ml" 527 20397 20403 "main.ml" 527 20397 20409
call(
  stack
)
type(
  unit
)
"main.ml" 526 20327 20333 "main.ml" 527 20397 20409
type(
  unit
)
"main.ml" 524 20241 20292 "main.ml" 528 20410 20417
type(
  unit
)
"main.ml" 522 20163 20210 "main.ml" 528 20410 20418
type(
  unit
)
"main.ml" 529 20419 20429 "main.ml" 529 20419 20430
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 529 20419 20430 "main.ml" 529 20419 20437
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 529 20419 20428 "main.ml" 529 20419 20438
type(
  bool
)
"main.ml" 530 20474 20480 "main.ml" 530 20474 20491
type(
  string ref list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 530 20474 20492 "main.ml" 530 20474 20493
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 530 20474 20493 "main.ml" 530 20474 20514
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 530 20474 20492 "main.ml" 530 20474 20514
type(
  string ref list
)
"main.ml" 530 20474 20480 "main.ml" 530 20474 20514
call(
  stack
)
type(
  int
)
"main.ml" 530 20474 20515 "main.ml" 530 20474 20516
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"main.ml" 530 20474 20517 "main.ml" 530 20474 20518
type(
  int
)
"main.ml" 530 20474 20479 "main.ml" 530 20474 20519
type(
  bool
)
"main.ml" 531 20531 20535 "main.ml" 531 20531 20544
type(
  (Arg.key * Arg.spec * Arg.doc) list -> Arg.usage_msg -> unit
)
ident(
  ext_ref Arg.usage
)
"main.ml" 531 20531 20545 "main.ml" 531 20531 20549
type(
  (Arg.key * Arg.spec * Arg.doc) list
)
ident(
  int_ref opts "main.ml" 132 4606 4610 "main.ml" 132 4606 4614
)
"main.ml" 531 20531 20550 "main.ml" 531 20531 20556
type(
  Arg.usage_msg
)
ident(
  int_ref banner "main.ml" 48 980 984 "main.ml" 48 980 990
)
"main.ml" 531 20531 20535 "main.ml" 531 20531 20556
call(
  stack
)
type(
  unit
)
"main.ml" 532 20558 20562 "main.ml" 532 20558 20574
type(
  string -> unit
)
ident(
  ext_ref Pervasives.prerr_string
)
"main.ml" 532 20558 20575 "main.ml" 532 20558 20627
type(
  string
)
"main.ml" 532 20558 20562 "main.ml" 532 20558 20627
call(
  stack
)
type(
  unit
)
"main.ml" 533 20629 20633 "main.ml" 533 20629 20637
type(
  int -> unit
)
ident(
  ext_ref Pervasives.exit
)
"main.ml" 533 20629 20638 "main.ml" 533 20629 20639
type(
  int
)
"main.ml" 533 20629 20633 "main.ml" 533 20629 20639
call(
  stack
)
type(
  unit
)
"main.ml" 532 20558 20562 "main.ml" 533 20629 20639
type(
  unit
)
"main.ml" 530 20474 20525 "main.ml" 534 20640 20646
type(
  unit
)
"main.ml" 529 20419 20444 "main.ml" 534 20640 20647
type(
  unit
)
"main.ml" 535 20648 20659 "main.ml" 535 20648 20660
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 535 20648 20660 "main.ml" 535 20648 20670
type(
  bool ref
)
ident(
  int_ref onlyGraphe "main.ml" 123 4368 4372 "main.ml" 123 4368 4382
)
"main.ml" 535 20648 20658 "main.ml" 535 20648 20671
type(
  bool
)
"main.ml" 536 20700 20706 "main.ml" 536 20700 20717
type(
  string ref list -> int
)
ident(
  ext_ref List.length
)
"main.ml" 536 20700 20718 "main.ml" 536 20700 20719
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 536 20700 20719 "main.ml" 536 20700 20740
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 536 20700 20718 "main.ml" 536 20700 20740
type(
  string ref list
)
"main.ml" 536 20700 20706 "main.ml" 536 20700 20740
call(
  stack
)
type(
  int
)
"main.ml" 536 20700 20741 "main.ml" 536 20700 20742
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"main.ml" 536 20700 20743 "main.ml" 536 20700 20744
type(
  int
)
"main.ml" 536 20700 20705 "main.ml" 536 20700 20745
type(
  bool
)
"main.ml" 537 20757 20761 "main.ml" 537 20757 20779
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 537 20757 20780 "main.ml" 537 20757 20782
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 537 20757 20783 "main.ml" 537 20757 20789
type(
  string
)
"main.ml" 537 20757 20794 "main.ml" 537 20757 20795
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 537 20757 20795 "main.ml" 537 20757 20813
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 537 20757 20793 "main.ml" 537 20757 20814
type(
  string list
)
"main.ml" 537 20757 20783 "main.ml" 537 20757 20814
type(
  string list
)
"main.ml" 537 20757 20761 "main.ml" 537 20757 20814
type(
  unit
)
"main.ml" 538 20816 20820 "main.ml" 538 20816 20841
type(
  string list ref
)
ident(
  ext_ref Cextraireboucle.files
)
"main.ml" 538 20816 20842 "main.ml" 538 20816 20844
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 538 20816 20845 "main.ml" 538 20816 20847
type(
  string list
)
"main.ml" 538 20816 20820 "main.ml" 538 20816 20847
type(
  unit
)
"main.ml" 539 20849 20853 "main.ml" 539 20849 20892
type(
  string list -> unit
)
ident(
  ext_ref Cextraireboucle.sort_list_file_and_name
)
"main.ml" 539 20849 20893 "main.ml" 539 20849 20894
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 539 20849 20894 "main.ml" 539 20849 20912
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 539 20849 20893 "main.ml" 539 20849 20912
type(
  string list
)
"main.ml" 539 20849 20853 "main.ml" 539 20849 20913
call(
  stack
)
type(
  unit
)
"main.ml" 538 20816 20820 "main.ml" 539 20849 20913
type(
  unit
)
"main.ml" 536 20700 20751 "main.ml" 541 20945 20950
type(
  unit
)
"main.ml" 535 20648 20677 "main.ml" 541 20945 20951
type(
  unit
)
"main.ml" 535 20648 20655 "main.ml" 541 20945 20951
type(
  unit
)
"main.ml" 529 20419 20425 "main.ml" 541 20945 20951
type(
  unit
)
"main.ml" 522 20163 20164 "main.ml" 541 20945 20951
type(
  unit
)
"main.ml" 551 21294 21300 "main.ml" 551 21294 21303
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"main.ml" 551 21294 21304 "main.ml" 551 21294 21305
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 551 21294 21305 "main.ml" 551 21294 21312
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 551 21294 21304 "main.ml" 551 21294 21312
type(
  bool
)
"main.ml" 551 21294 21299 "main.ml" 551 21294 21313
type(
  bool
)
"main.ml" 551 21294 21314 "main.ml" 551 21294 21316
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"main.ml" 551 21294 21318 "main.ml" 551 21294 21321
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"main.ml" 551 21294 21322 "main.ml" 551 21294 21323
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 551 21294 21323 "main.ml" 551 21294 21333
type(
  bool ref
)
ident(
  int_ref onlyGraphe "main.ml" 123 4368 4372 "main.ml" 123 4368 4382
)
"main.ml" 551 21294 21322 "main.ml" 551 21294 21333
type(
  bool
)
"main.ml" 551 21294 21317 "main.ml" 551 21294 21334
type(
  bool
)
"main.ml" 551 21294 21298 "main.ml" 551 21294 21335
type(
  bool
)
"main.ml" 553 21345 21352 "main.ml" 553 21345 21354
type(
  string
)
ident(
  def hd "main.ml" 555 21442 21448 "main.ml" 555 21442 21473
)
"main.ml" 553 21345 21358 "main.ml" 553 21345 21359
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 553 21345 21360 "main.ml" 553 21345 21367
type(
  string ref list -> string ref
)
ident(
  ext_ref List.hd
)
"main.ml" 553 21345 21369 "main.ml" 553 21345 21370
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 553 21345 21370 "main.ml" 553 21345 21391
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 553 21345 21368 "main.ml" 553 21345 21392
type(
  string ref list
)
"main.ml" 553 21345 21359 "main.ml" 553 21345 21393
call(
  stack
)
type(
  string ref
)
"main.ml" 553 21345 21357 "main.ml" 553 21345 21394
type(
  string
)
"main.ml" 554 21395 21402 "main.ml" 554 21395 21404
type(
  string ref list
)
ident(
  def tl "main.ml" 555 21442 21448 "main.ml" 555 21442 21473
)
"main.ml" 554 21395 21408 "main.ml" 554 21395 21415
type(
  string ref list -> string ref list
)
ident(
  ext_ref List.tl
)
"main.ml" 554 21395 21417 "main.ml" 554 21395 21418
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 554 21395 21418 "main.ml" 554 21395 21439
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 554 21395 21416 "main.ml" 554 21395 21440
type(
  string ref list
)
"main.ml" 554 21395 21407 "main.ml" 554 21395 21441
call(
  stack
)
type(
  string ref list
)
"main.ml" 555 21442 21448 "main.ml" 555 21442 21467
type(
  string -> string ref list -> unit
)
ident(
  ext_ref Cextraireboucle.maj
)
"main.ml" 555 21442 21468 "main.ml" 555 21442 21470
type(
  string
)
ident(
  int_ref hd "main.ml" 553 21345 21352 "main.ml" 553 21345 21354
)
"main.ml" 555 21442 21471 "main.ml" 555 21442 21473
type(
  string ref list
)
ident(
  int_ref tl "main.ml" 554 21395 21402 "main.ml" 554 21395 21404
)
"main.ml" 555 21442 21448 "main.ml" 555 21442 21473
call(
  stack
)
type(
  unit
)
"main.ml" 552 21336 21343 "main.ml" 556 21474 21477
type(
  unit
)
"main.ml" 551 21294 21295 "main.ml" 556 21474 21477
type(
  unit
)
"main.ml" 559 21514 21519 "main.ml" 559 21514 21521
type(
  Frontc.parsing_arg list
)
ident(
  def a1 "main.ml" 560 21533 21534 "main.ml" 799 29320 29352
)
"main.ml" 559 21514 21524 "main.ml" 559 21514 21525
type(
  Frontc.parsing_arg list ref -> Frontc.parsing_arg list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 559 21514 21525 "main.ml" 559 21514 21529
type(
  Frontc.parsing_arg list ref
)
ident(
  int_ref args "main.ml" 77 3207 3211 "main.ml" 77 3207 3215
)
"main.ml" 559 21514 21524 "main.ml" 559 21514 21529
type(
  Frontc.parsing_arg list
)
"main.ml" 560 21533 21538 "main.ml" 560 21533 21540
type(
  Frontc.parsing_arg list
)
ident(
  def a2 "main.ml" 567 21649 21649 "main.ml" 799 29320 29352
)
"main.ml" 560 21533 21544 "main.ml" 560 21533 21555
type(
  (Frontc.parsing_arg -> bool) ->
  Frontc.parsing_arg list -> Frontc.parsing_arg list
)
ident(
  ext_ref List.filter
)
"main.ml" 561 21556 21563 "main.ml" 561 21556 21564
type(
  Frontc.parsing_arg
)
ident(
  def e "main.ml" 562 21568 21574 "main.ml" 564 21619 21636
)
"main.ml" 562 21568 21580 "main.ml" 562 21568 21581
type(
  Frontc.parsing_arg
)
ident(
  int_ref e "main.ml" 561 21556 21563 "main.ml" 561 21556 21564
)
"main.ml" 563 21588 21608 "main.ml" 563 21588 21609
type(
  bool
)
"main.ml" 563 21588 21596 "main.ml" 563 21588 21609
type(
  Frontc.parsing_arg
)
"main.ml" 563 21588 21612 "main.ml" 563 21588 21617
type(
  bool
)
"main.ml" 564 21619 21627 "main.ml" 564 21619 21628
type(
  Frontc.parsing_arg
)
"main.ml" 564 21619 21632 "main.ml" 564 21619 21636
type(
  bool
)
"main.ml" 562 21568 21574 "main.ml" 564 21619 21636
type(
  bool
)
"main.ml" 561 21556 21558 "main.ml" 564 21619 21637
type(
  Frontc.parsing_arg -> bool
)
"main.ml" 565 21638 21640 "main.ml" 565 21638 21642
type(
  Frontc.parsing_arg list
)
ident(
  int_ref a1 "main.ml" 559 21514 21519 "main.ml" 559 21514 21521
)
"main.ml" 560 21533 21543 "main.ml" 566 21643 21645
call(
  stack
)
type(
  Frontc.parsing_arg list
)
"main.ml" 567 21649 21653 "main.ml" 567 21649 21654
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 567 21649 21654 "main.ml" 567 21649 21660
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 567 21649 21652 "main.ml" 567 21649 21662
type(
  bool
)
"main.ml" 567 21649 21668 "main.ml" 567 21649 21681
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 567 21649 21682 "main.ml" 567 21649 21697
type(
  (unit, out_channel, unit) format
)
"main.ml" 567 21649 21668 "main.ml" 567 21649 21697
call(
  stack
)
type(
  unit
)
"main.ml" 567 21649 21649 "main.ml" 567 21649 21697
type(
  unit
)
"main.ml" 569 21746 21751 "main.ml" 569 21746 21764
type(
  Frontc.parsing_arg list -> Cabs.definition list
)
ident(
  def getMergedFile "main.ml" 609 22988 22988 "main.ml" 799 29320 29352
)
"main.ml" 569 21746 21765 "main.ml" 569 21746 21769
type(
  Frontc.parsing_arg list
)
ident(
  def args "main.ml" 570 21772 21774 "main.ml" 607 22961 22981
)
"main.ml" 570 21772 21778 "main.ml" 570 21772 21784
type(
  Cabs.definition list list
)
ident(
  def cfiles "main.ml" 577 22016 22016 "main.ml" 607 22961 22981
)
"main.ml" 570 21772 21788 "main.ml" 570 21772 21796
type(
  (string -> Cabs.definition list) ->
  string list -> Cabs.definition list list
)
ident(
  ext_ref List.map
)
"main.ml" 571 21797 21805 "main.ml" 571 21797 21813
type(
  string
)
ident(
  def filename "main.ml" 572 21817 21821 "main.ml" 574 21949 21980
)
"main.ml" 572 21817 21828 "main.ml" 572 21817 21840
type(
  Frontc.parsing_arg list -> Frontc.parsing_result
)
ident(
  ext_ref Frontc.parse
)
"main.ml" 572 21817 21851 "main.ml" 572 21817 21861
type(
  string
)
ident(
  int_ref filename "main.ml" 571 21797 21805 "main.ml" 571 21797 21813
)
"main.ml" 572 21817 21842 "main.ml" 572 21817 21861
type(
  Frontc.parsing_arg
)
"main.ml" 572 21817 21865 "main.ml" 572 21817 21869
type(
  Frontc.parsing_arg list
)
ident(
  int_ref args "main.ml" 569 21746 21765 "main.ml" 569 21746 21769
)
"main.ml" 572 21817 21841 "main.ml" 572 21817 21870
type(
  Frontc.parsing_arg list
)
"main.ml" 572 21817 21827 "main.ml" 572 21817 21871
call(
  stack
)
type(
  Frontc.parsing_result
)
"main.ml" 573 21877 21884 "main.ml" 573 21877 21897
type(
  Frontc.parsing_result
)
"main.ml" 573 21877 21901 "main.ml" 573 21877 21909
type(
  string -> Cabs.definition list
)
ident(
  ext_ref Pervasives.failwith
)
"main.ml" 573 21877 21911 "main.ml" 573 21877 21935
type(
  string
)
"main.ml" 573 21877 21936 "main.ml" 573 21877 21937
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 573 21877 21938 "main.ml" 573 21877 21946
type(
  string
)
ident(
  int_ref filename "main.ml" 571 21797 21805 "main.ml" 571 21797 21813
)
"main.ml" 573 21877 21910 "main.ml" 573 21877 21947
call(
  stack
)
type(
  string
)
"main.ml" 573 21877 21901 "main.ml" 573 21877 21948
call(
  tail
)
type(
  Cabs.definition list
)
"main.ml" 574 21949 21967 "main.ml" 574 21949 21971
ident(
  def defs "main.ml" 574 21949 21976 "main.ml" 574 21949 21980
)
"main.ml" 574 21949 21966 "main.ml" 574 21949 21972
type(
  Cabs.definition list
)
"main.ml" 574 21949 21956 "main.ml" 574 21949 21972
type(
  Frontc.parsing_result
)
"main.ml" 574 21949 21976 "main.ml" 574 21949 21980
type(
  Cabs.definition list
)
ident(
  int_ref defs "main.ml" 574 21949 21966 "main.ml" 574 21949 21972
)
"main.ml" 572 21817 21821 "main.ml" 574 21949 21980
type(
  Cabs.definition list
)
"main.ml" 571 21797 21800 "main.ml" 575 21981 21985
type(
  string -> Cabs.definition list
)
"main.ml" 575 21981 21986 "main.ml" 575 21981 21987
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 575 21981 21987 "main.ml" 575 21981 22008
type(
  string list ref
)
ident(
  ext_ref Cextraireboucle.files
)
"main.ml" 575 21981 21986 "main.ml" 575 21981 22008
type(
  string list
)
"main.ml" 570 21772 21787 "main.ml" 576 22009 22012
call(
  stack
)
type(
  Cabs.definition list list
)
"main.ml" 577 22016 22020 "main.ml" 577 22016 22021
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 577 22016 22021 "main.ml" 577 22016 22027
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 577 22016 22019 "main.ml" 577 22016 22029
type(
  bool
)
"main.ml" 577 22016 22035 "main.ml" 577 22016 22048
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 577 22016 22049 "main.ml" 577 22016 22073
type(
  (unit, out_channel, unit) format
)
"main.ml" 577 22016 22035 "main.ml" 577 22016 22073
call(
  stack
)
type(
  unit
)
"main.ml" 577 22016 22016 "main.ml" 577 22016 22073
type(
  unit
)
"main.ml" 579 22103 22109 "main.ml" 579 22103 22115
type(
  Cabs.definition list list
)
ident(
  def cfiles "main.ml" 602 22624 22630 "main.ml" 607 22961 22981
)
"main.ml" 579 22103 22122 "main.ml" 579 22103 22123
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 579 22103 22123 "main.ml" 579 22103 22134
type(
  bool ref
)
ident(
  int_ref run_calipso "main.ml" 100 3865 3869 "main.ml" 100 3865 3880
)
"main.ml" 579 22103 22121 "main.ml" 579 22103 22135
type(
  bool
)
"main.ml" 580 22142 22152 "main.ml" 580 22142 22164
type(
  Calipso.option list
)
ident(
  def calipso_opts "main.ml" 595 22468 22477 "main.ml" 598 22585 22590
)
"main.ml" 582 22173 22178 "main.ml" 582 22173 22196
type(
  Calipso.option
)
"main.ml" 583 22198 22203 "main.ml" 583 22198 22222
type(
  Calipso.option
)
"main.ml" 584 22224 22229 "main.ml" 584 22224 22251
type(
  Calipso.option
)
"main.ml" 585 22253 22258 "main.ml" 585 22253 22278
type(
  Calipso.option
)
"main.ml" 586 22280 22305 "main.ml" 586 22280 22317
type(
  Reduce.switch_action
)
"main.ml" 586 22280 22285 "main.ml" 586 22280 22317
type(
  Calipso.option
)
"main.ml" 581 22167 22171 "main.ml" 587 22319 22324
type(
  Calipso.option list
)
"main.ml" 587 22319 22325 "main.ml" 587 22319 22326
type(
  Calipso.option list -> Calipso.option list -> Calipso.option list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 587 22319 22332 "main.ml" 587 22319 22333
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 587 22319 22333 "main.ml" 587 22319 22345
type(
  bool ref
)
ident(
  int_ref calipso_rrec "main.ml" 101 3893 3897 "main.ml" 101 3893 3909
)
"main.ml" 587 22319 22332 "main.ml" 587 22319 22345
type(
  bool
)
"main.ml" 587 22319 22346 "main.ml" 587 22319 22348
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"main.ml" 587 22319 22349 "main.ml" 587 22319 22350
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 587 22319 22350 "main.ml" 587 22319 22361
type(
  bool ref
)
ident(
  int_ref frontc_frec "main.ml" 102 3922 3926 "main.ml" 102 3922 3937
)
"main.ml" 587 22319 22349 "main.ml" 587 22319 22361
type(
  bool
)
"main.ml" 587 22319 22362 "main.ml" 587 22319 22363
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 587 22319 22364 "main.ml" 587 22319 22369
type(
  bool
)
"main.ml" 587 22319 22349 "main.ml" 587 22319 22369
type(
  bool
)
"main.ml" 587 22319 22331 "main.ml" 587 22319 22370
type(
  bool
)
"main.ml" 591 22402 22411 "main.ml" 591 22402 22434
type(
  Calipso.option
)
"main.ml" 589 22381 22387 "main.ml" 593 22445 22454
type(
  Calipso.option list
)
"main.ml" 594 22455 22465 "main.ml" 594 22455 22467
type(
  Calipso.option list
)
"main.ml" 587 22319 22327 "main.ml" 595 22468 22473
type(
  Calipso.option list
)
"main.ml" 581 22167 22171 "main.ml" 595 22468 22473
call(
  stack
)
type(
  Calipso.option list
)
"main.ml" 595 22468 22478 "main.ml" 595 22468 22486
type(
  (Cabs.definition list -> Cabs.definition list) ->
  Cabs.definition list list -> Cabs.definition list list
)
ident(
  ext_ref List.map
)
"main.ml" 596 22487 22497 "main.ml" 596 22487 22501
type(
  Cabs.definition list
)
ident(
  def defs "main.ml" 596 22487 22506 "main.ml" 596 22487 22571
)
"main.ml" 596 22487 22506 "main.ml" 596 22487 22522
type(
  Cabs.definition list -> unit
)
ident(
  int_ref getSortRecStatus "main.ml" 442 16960 16964 "main.ml" 442 16960 16980
)
"main.ml" 596 22487 22523 "main.ml" 596 22487 22527
type(
  Cabs.definition list
)
ident(
  int_ref defs "main.ml" 596 22487 22497 "main.ml" 596 22487 22501
)
"main.ml" 596 22487 22506 "main.ml" 596 22487 22527
call(
  stack
)
type(
  unit
)
"main.ml" 596 22487 22530 "main.ml" 596 22487 22552
type(
  Cabs.definition list -> Calipso.option list -> Cabs.definition list
)
ident(
  ext_ref Calipso.process_remove
)
"main.ml" 596 22487 22553 "main.ml" 596 22487 22557
type(
  Cabs.definition list
)
ident(
  int_ref defs "main.ml" 596 22487 22497 "main.ml" 596 22487 22501
)
"main.ml" 596 22487 22558 "main.ml" 596 22487 22570
type(
  Calipso.option list
)
ident(
  int_ref calipso_opts "main.ml" 580 22142 22152 "main.ml" 580 22142 22164
)
"main.ml" 596 22487 22529 "main.ml" 596 22487 22571
call(
  tail
)
type(
  Cabs.definition list
)
"main.ml" 596 22487 22506 "main.ml" 596 22487 22571
type(
  Cabs.definition list
)
"main.ml" 596 22487 22492 "main.ml" 596 22487 22572
type(
  Cabs.definition list -> Cabs.definition list
)
"main.ml" 597 22573 22578 "main.ml" 597 22573 22584
type(
  Cabs.definition list list
)
ident(
  int_ref cfiles "main.ml" 570 21772 21778 "main.ml" 570 21772 21784
)
"main.ml" 595 22468 22477 "main.ml" 598 22585 22590
call(
  stack
)
type(
  Cabs.definition list list
)
"main.ml" 580 22142 22148 "main.ml" 598 22585 22590
type(
  Cabs.definition list list
)
"main.ml" 600 22599 22607 "main.ml" 600 22599 22613
type(
  Cabs.definition list list
)
ident(
  int_ref cfiles "main.ml" 570 21772 21778 "main.ml" 570 21772 21784
)
"main.ml" 579 22103 22118 "main.ml" 600 22599 22613
type(
  Cabs.definition list list
)
"main.ml" 602 22624 22634 "main.ml" 602 22624 22647
type(
  Cabs.definition list list
)
ident(
  def removedextern "main.ml" 603 22692 22698 "main.ml" 607 22961 22981
)
"main.ml" 602 22624 22651 "main.ml" 602 22624 22680
type(
  Cabs.definition list list -> Cabs.definition list list
)
ident(
  ext_ref Mergec.removeDuplicatedExtern
)
"main.ml" 602 22624 22681 "main.ml" 602 22624 22687
type(
  Cabs.definition list list
)
ident(
  int_ref cfiles "main.ml" 579 22103 22109 "main.ml" 579 22103 22115
)
"main.ml" 602 22624 22650 "main.ml" 602 22624 22688
call(
  stack
)
type(
  Cabs.definition list list
)
"main.ml" 603 22692 22702 "main.ml" 603 22692 22712
type(
  Cabs.definition list list
)
ident(
  def chk_cfiles "main.ml" 604 22765 22771 "main.ml" 607 22961 22981
)
"main.ml" 603 22692 22716 "main.ml" 603 22692 22728
type(
  string -> Cabs.definition list list -> Cabs.definition list list
)
ident(
  ext_ref Mergec.check
)
"main.ml" 603 22692 22729 "main.ml" 603 22692 22746
type(
  string
)
"main.ml" 603 22692 22747 "main.ml" 603 22692 22760
type(
  Cabs.definition list list
)
ident(
  int_ref removedextern "main.ml" 602 22624 22634 "main.ml" 602 22624 22647
)
"main.ml" 603 22692 22715 "main.ml" 603 22692 22761
call(
  stack
)
type(
  Cabs.definition list list
)
"main.ml" 604 22765 22775 "main.ml" 604 22765 22785
type(
  Cabs.definition list
)
ident(
  def merge_file "main.ml" 605 22815 22823 "main.ml" 607 22961 22981
)
"main.ml" 604 22765 22788 "main.ml" 604 22765 22800
type(
  Cabs.definition list list -> Cabs.definition list
)
ident(
  ext_ref Mergec.merge
)
"main.ml" 604 22765 22801 "main.ml" 604 22765 22811
type(
  Cabs.definition list list
)
ident(
  int_ref chk_cfiles "main.ml" 603 22692 22702 "main.ml" 603 22692 22712
)
"main.ml" 604 22765 22788 "main.ml" 604 22765 22811
call(
  stack
)
type(
  Cabs.definition list
)
"main.ml" 605 22815 22826 "main.ml" 605 22815 22848
type(
  Cabs.definition list -> Cabs.definition list -> bool
)
ident(
  ext_ref Sortrec.hasRecursivity
)
"main.ml" 605 22815 22849 "main.ml" 605 22815 22859
type(
  Cabs.definition list
)
ident(
  int_ref merge_file "main.ml" 604 22765 22775 "main.ml" 604 22765 22785
)
"main.ml" 605 22815 22860 "main.ml" 605 22815 22870
type(
  Cabs.definition list
)
ident(
  int_ref merge_file "main.ml" 604 22765 22775 "main.ml" 604 22765 22785
)
"main.ml" 605 22815 22826 "main.ml" 605 22815 22870
call(
  stack
)
type(
  bool
)
"main.ml" 606 22877 22887 "main.ml" 606 22877 22895
type(
  string -> unit
)
ident(
  ext_ref Pervasives.failwith
)
"main.ml" 606 22877 22896 "main.ml" 606 22877 22959
type(
  string
)
"main.ml" 606 22877 22887 "main.ml" 606 22877 22959
call(
  stack
)
type(
  unit
)
"main.ml" 605 22815 22823 "main.ml" 606 22877 22959
type(
  unit
)
"main.ml" 607 22961 22971 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
ident(
  int_ref merge_file "main.ml" 604 22765 22775 "main.ml" 604 22765 22785
)
"main.ml" 605 22815 22823 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 604 22765 22771 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 603 22692 22698 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 602 22624 22630 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 579 22103 22105 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 577 22016 22016 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 570 21772 21774 "main.ml" 607 22961 22981
type(
  Cabs.definition list
)
"main.ml" 609 22988 22992 "main.ml" 609 22988 22993
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 609 22988 22993 "main.ml" 609 22988 22999
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 609 22988 22991 "main.ml" 609 22988 23001
type(
  bool
)
"main.ml" 609 22988 23007 "main.ml" 609 22988 23020
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 609 22988 23021 "main.ml" 609 22988 23036
type(
  (unit, out_channel, unit) format
)
"main.ml" 609 22988 23007 "main.ml" 609 22988 23036
call(
  stack
)
type(
  unit
)
"main.ml" 609 22988 22988 "main.ml" 609 22988 23036
type(
  unit
)
"main.ml" 611 23058 23063 "main.ml" 611 23058 23073
type(
  Cabs.definition list
)
ident(
  def firstParse "main.ml" 614 23171 23171 "main.ml" 799 29320 29352
)
"main.ml" 612 23076 23082 "main.ml" 612 23076 23092
type(
  Cabs.definition list
)
ident(
  def merge_file "main.ml" 613 23117 23119 "main.ml" 613 23117 23167
)
"main.ml" 612 23076 23096 "main.ml" 612 23076 23109
type(
  Frontc.parsing_arg list -> Cabs.definition list
)
ident(
  int_ref getMergedFile "main.ml" 569 21746 21751 "main.ml" 569 21746 21764
)
"main.ml" 612 23076 23110 "main.ml" 612 23076 23112
type(
  Frontc.parsing_arg list
)
ident(
  int_ref a1 "main.ml" 559 21514 21519 "main.ml" 559 21514 21521
)
"main.ml" 612 23076 23095 "main.ml" 612 23076 23113
call(
  stack
)
type(
  Cabs.definition list
)
"main.ml" 613 23117 23119 "main.ml" 613 23117 23128
type(
  Cabs.file -> Cabs.definition list
)
ident(
  ext_ref Rename.go
)
"main.ml" 613 23117 23130 "main.ml" 613 23117 23155
type(
  Cabs.definition list -> Cabs.file
)
ident(
  ext_ref Frontc.trans_old_fun_defs
)
"main.ml" 613 23117 23156 "main.ml" 613 23117 23166
type(
  Cabs.definition list
)
ident(
  int_ref merge_file "main.ml" 612 23076 23082 "main.ml" 612 23076 23092
)
"main.ml" 613 23117 23129 "main.ml" 613 23117 23167
call(
  stack
)
type(
  Cabs.file
)
"main.ml" 613 23117 23119 "main.ml" 613 23117 23167
call(
  stack
)
type(
  Cabs.definition list
)
"main.ml" 612 23076 23078 "main.ml" 613 23117 23167
type(
  Cabs.definition list
)
"main.ml" 614 23171 23175 "main.ml" 614 23171 23176
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 614 23171 23176 "main.ml" 614 23171 23182
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 614 23171 23174 "main.ml" 614 23171 23184
type(
  bool
)
"main.ml" 614 23171 23190 "main.ml" 614 23171 23203
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 614 23171 23204 "main.ml" 614 23171 23236
type(
  (unit, out_channel, unit) format
)
"main.ml" 614 23171 23190 "main.ml" 614 23171 23236
call(
  stack
)
type(
  unit
)
"main.ml" 614 23171 23171 "main.ml" 614 23171 23236
type(
  unit
)
"main.ml" 619 23351 23355 "main.ml" 619 23351 23356
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 619 23351 23356 "main.ml" 619 23351 23362
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 619 23351 23354 "main.ml" 619 23351 23364
type(
  bool
)
"main.ml" 619 23351 23370 "main.ml" 619 23351 23383
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 619 23351 23384 "main.ml" 619 23351 23395
type(
  (unit, out_channel, unit) format
)
"main.ml" 619 23351 23370 "main.ml" 619 23351 23395
call(
  stack
)
type(
  unit
)
"main.ml" 619 23351 23351 "main.ml" 619 23351 23395
type(
  unit
)
"main.ml" 621 23421 23427 "main.ml" 621 23421 23428
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 621 23421 23428 "main.ml" 621 23421 23439
type(
  bool ref
)
ident(
  int_ref frontc_frec "main.ml" 102 3922 3926 "main.ml" 102 3922 3937
)
"main.ml" 621 23421 23426 "main.ml" 621 23421 23440
type(
  bool
)
"main.ml" 622 23452 23459 "main.ml" 622 23452 23462
type(
  out_channel
)
ident(
  def out "main.ml" 623 23491 23494 "main.ml" 634 23954 23971
)
"main.ml" 622 23452 23465 "main.ml" 622 23452 23473
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 622 23452 23474 "main.ml" 622 23452 23487
type(
  string
)
"main.ml" 622 23452 23465 "main.ml" 622 23452 23487
call(
  stack
)
type(
  out_channel
)
"main.ml" 623 23491 23494 "main.ml" 623 23491 23506
type(
  out_channel -> Cabs.definition list -> Cabs.definition list -> unit
)
ident(
  ext_ref Sortrec.test
)
"main.ml" 623 23491 23507 "main.ml" 623 23491 23510
type(
  out_channel
)
ident(
  int_ref out "main.ml" 622 23452 23459 "main.ml" 622 23452 23462
)
"main.ml" 623 23491 23511 "main.ml" 623 23491 23521
type(
  Cabs.definition list
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 623 23491 23522 "main.ml" 623 23491 23532
type(
  Cabs.definition list
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 623 23491 23494 "main.ml" 623 23491 23532
call(
  stack
)
type(
  unit
)
"main.ml" 624 23534 23541 "main.ml" 624 23534 23553
type(
  int
)
ident(
  def outputstatut "main.ml" 626 23620 23623 "main.ml" 634 23954 23971
)
"main.ml" 624 23534 23557 "main.ml" 624 23534 23592
type(
  Cabs.definition list -> Cabs.definition list -> int
)
ident(
  ext_ref Sortrec.applicationRecursivityClass
)
"main.ml" 624 23534 23593 "main.ml" 624 23534 23603
type(
  Cabs.definition list
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 624 23534 23604 "main.ml" 624 23534 23614
type(
  Cabs.definition list
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 624 23534 23556 "main.ml" 624 23534 23615
call(
  stack
)
type(
  int
)
"main.ml" 626 23620 23627 "main.ml" 626 23620 23633
type(
  string
)
ident(
  def strToP "main.ml" 633 23924 23927 "main.ml" 634 23954 23971
)
"main.ml" 627 23636 23643 "main.ml" 627 23636 23655
type(
  int
)
ident(
  int_ref outputstatut "main.ml" 624 23534 23541 "main.ml" 624 23534 23553
)
"main.ml" 627 23636 23656 "main.ml" 627 23636 23657
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 627 23636 23658 "main.ml" 627 23636 23659
type(
  int
)
"main.ml" 627 23636 23643 "main.ml" 627 23636 23659
type(
  bool
)
"main.ml" 628 23666 23676 "main.ml" 628 23666 23690
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 628 23666 23691 "main.ml" 628 23666 23725
type(
  (string, unit, string) format
)
"main.ml" 628 23666 23676 "main.ml" 628 23666 23725
call(
  stack
)
type(
  string
)
"main.ml" 629 23726 23738 "main.ml" 629 23726 23750
type(
  int
)
ident(
  int_ref outputstatut "main.ml" 624 23534 23541 "main.ml" 624 23534 23553
)
"main.ml" 629 23726 23751 "main.ml" 629 23726 23752
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 629 23726 23753 "main.ml" 629 23726 23754
type(
  int
)
"main.ml" 629 23726 23738 "main.ml" 629 23726 23754
type(
  bool
)
"main.ml" 630 23761 23771 "main.ml" 630 23761 23785
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 630 23761 23786 "main.ml" 630 23761 23835
type(
  (string, unit, string) format
)
"main.ml" 630 23761 23771 "main.ml" 630 23761 23835
call(
  stack
)
type(
  string
)
"main.ml" 632 23850 23860 "main.ml" 632 23850 23874
type(
  (string, unit, string) format -> string
)
ident(
  ext_ref Printf.sprintf
)
"main.ml" 632 23850 23875 "main.ml" 632 23850 23920
type(
  (string, unit, string) format
)
"main.ml" 632 23850 23860 "main.ml" 632 23850 23920
call(
  stack
)
type(
  string
)
"main.ml" 629 23726 23735 "main.ml" 632 23850 23920
type(
  string
)
"main.ml" 627 23636 23640 "main.ml" 632 23850 23920
type(
  string
)
"main.ml" 633 23924 23927 "main.ml" 633 23924 23940
type(
  out_channel -> string -> unit
)
ident(
  ext_ref Pervasives.output_string
)
"main.ml" 633 23924 23942 "main.ml" 633 23924 23945
type(
  out_channel
)
ident(
  int_ref out "main.ml" 622 23452 23459 "main.ml" 622 23452 23462
)
"main.ml" 633 23924 23946 "main.ml" 633 23924 23952
type(
  string
)
ident(
  int_ref strToP "main.ml" 626 23620 23627 "main.ml" 626 23620 23633
)
"main.ml" 633 23924 23927 "main.ml" 633 23924 23952
call(
  stack
)
type(
  unit
)
"main.ml" 634 23954 23957 "main.ml" 634 23954 23966
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 634 23954 23967 "main.ml" 634 23954 23970
type(
  out_channel
)
ident(
  int_ref out "main.ml" 622 23452 23459 "main.ml" 622 23452 23462
)
"main.ml" 634 23954 23957 "main.ml" 634 23954 23971
call(
  stack
)
type(
  unit
)
"main.ml" 633 23924 23927 "main.ml" 634 23954 23971
type(
  unit
)
"main.ml" 626 23620 23623 "main.ml" 634 23954 23971
type(
  unit
)
"main.ml" 624 23534 23537 "main.ml" 634 23954 23971
type(
  unit
)
"main.ml" 623 23491 23494 "main.ml" 634 23954 23971
type(
  unit
)
"main.ml" 621 23421 23446 "main.ml" 635 23972 23977
type(
  unit
)
"main.ml" 637 23997 24002 "main.ml" 637 23997 24003
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 637 23997 24003 "main.ml" 637 23997 24009
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 637 23997 24001 "main.ml" 637 23997 24011
type(
  bool
)
"main.ml" 637 23997 24017 "main.ml" 637 23997 24030
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 637 23997 24031 "main.ml" 637 23997 24042
type(
  (unit, out_channel, unit) format
)
"main.ml" 637 23997 24017 "main.ml" 637 23997 24042
call(
  stack
)
type(
  unit
)
"main.ml" 637 23997 23998 "main.ml" 637 23997 24042
type(
  unit
)
"main.ml" 638 24047 24052 "main.ml" 638 24047 24053
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 638 24047 24053 "main.ml" 638 24047 24059
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 638 24047 24051 "main.ml" 638 24047 24061
type(
  bool
)
"main.ml" 638 24047 24068 "main.ml" 638 24047 24081
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 638 24047 24082 "main.ml" 638 24047 24116
type(
  (unit, out_channel, unit) format
)
"main.ml" 638 24047 24068 "main.ml" 638 24047 24116
call(
  stack
)
type(
  unit
)
"main.ml" 638 24047 24048 "main.ml" 638 24047 24116
type(
  unit
)
"main.ml" 639 24119 24130 "main.ml" 639 24119 24131
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 639 24119 24131 "main.ml" 639 24119 24138
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 639 24119 24129 "main.ml" 639 24119 24139
type(
  bool
)
"main.ml" 639 24119 24140 "main.ml" 639 24119 24142
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"main.ml" 639 24119 24144 "main.ml" 639 24119 24145
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 639 24119 24145 "main.ml" 639 24119 24149
type(
  bool ref
)
ident(
  int_ref auto "main.ml" 116 4251 4255 "main.ml" 116 4251 4259
)
"main.ml" 639 24119 24143 "main.ml" 639 24119 24150
type(
  bool
)
"main.ml" 639 24119 24128 "main.ml" 639 24119 24151
type(
  bool
)
"main.ml" 640 24157 24166 "main.ml" 640 24157 24176
type(
  out_channel -> Cabs.file -> unit
)
ident(
  ext_ref TO.initref
)
"main.ml" 640 24157 24177 "main.ml" 640 24157 24183
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 640 24157 24184 "main.ml" 640 24157 24194
type(
  Cabs.file
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 640 24157 24166 "main.ml" 640 24157 24194
call(
  stack
)
type(
  unit
)
"main.ml" 642 24207 24216 "main.ml" 642 24207 24226
type(
  out_channel -> Cabs.file -> unit
)
ident(
  ext_ref XO.initref
)
"main.ml" 642 24207 24227 "main.ml" 642 24207 24233
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 642 24207 24234 "main.ml" 642 24207 24244
type(
  Cabs.file
)
ident(
  int_ref firstParse "main.ml" 611 23058 23063 "main.ml" 611 23058 23073
)
"main.ml" 642 24207 24216 "main.ml" 642 24207 24244
call(
  stack
)
type(
  unit
)
"main.ml" 639 24119 24125 "main.ml" 642 24207 24244
type(
  unit
)
"main.ml" 645 24267 24272 "main.ml" 645 24267 24283
type(
  Cabs.definition list
)
ident(
  def secondParse "main.ml" 648 24383 24383 "main.ml" 796 29270 29277
)
"main.ml" 646 24286 24292 "main.ml" 646 24286 24302
type(
  Cabs.definition list
)
ident(
  def merge_file "main.ml" 647 24327 24331 "main.ml" 647 24327 24379
)
"main.ml" 646 24286 24306 "main.ml" 646 24286 24319
type(
  Frontc.parsing_arg list -> Cabs.definition list
)
ident(
  int_ref getMergedFile "main.ml" 569 21746 21751 "main.ml" 569 21746 21764
)
"main.ml" 646 24286 24320 "main.ml" 646 24286 24322
type(
  Frontc.parsing_arg list
)
ident(
  int_ref a2 "main.ml" 560 21533 21538 "main.ml" 560 21533 21540
)
"main.ml" 646 24286 24305 "main.ml" 646 24286 24323
call(
  stack
)
type(
  Cabs.definition list
)
"main.ml" 647 24327 24331 "main.ml" 647 24327 24340
type(
  Cabs.file -> Cabs.definition list
)
ident(
  ext_ref Rename.go
)
"main.ml" 647 24327 24342 "main.ml" 647 24327 24367
type(
  Cabs.definition list -> Cabs.file
)
ident(
  ext_ref Frontc.trans_old_fun_defs
)
"main.ml" 647 24327 24368 "main.ml" 647 24327 24378
type(
  Cabs.definition list
)
ident(
  int_ref merge_file "main.ml" 646 24286 24292 "main.ml" 646 24286 24302
)
"main.ml" 647 24327 24341 "main.ml" 647 24327 24379
call(
  stack
)
type(
  Cabs.file
)
"main.ml" 647 24327 24331 "main.ml" 647 24327 24379
call(
  stack
)
type(
  Cabs.definition list
)
"main.ml" 646 24286 24288 "main.ml" 647 24327 24379
type(
  Cabs.definition list
)
"main.ml" 648 24383 24387 "main.ml" 648 24383 24388
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 648 24383 24388 "main.ml" 648 24383 24394
type(
  bool ref
)
ident(
  ext_ref Util.vDEBUG
)
"main.ml" 648 24383 24386 "main.ml" 648 24383 24396
type(
  bool
)
"main.ml" 648 24383 24402 "main.ml" 648 24383 24415
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 648 24383 24416 "main.ml" 648 24383 24439
type(
  (unit, out_channel, unit) format
)
"main.ml" 648 24383 24402 "main.ml" 648 24383 24439
call(
  stack
)
type(
  unit
)
"main.ml" 648 24383 24383 "main.ml" 648 24383 24439
type(
  unit
)
"main.ml" 651 24445 24449 "main.ml" 651 24445 24450
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 651 24445 24450 "main.ml" 651 24445 24460
type(
  bool ref
)
ident(
  int_ref onlyGraphe "main.ml" 123 4368 4372 "main.ml" 123 4368 4382
)
"main.ml" 651 24445 24449 "main.ml" 651 24445 24460
type(
  bool
)
"main.ml" 652 24488 24494 "main.ml" 652 24488 24495
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 652 24488 24495 "main.ml" 652 24488 24509
type(
  bool ref
)
ident(
  int_ref completeGraphe "main.ml" 124 4395 4399 "main.ml" 124 4395 4413
)
"main.ml" 652 24488 24493 "main.ml" 652 24488 24510
type(
  bool
)
"main.ml" 653 24517 24520 "main.ml" 653 24517 24541
type(
  Cabs.definition list -> bool -> unit
)
ident(
  ext_ref Resumeforgraph.resume
)
"main.ml" 653 24517 24542 "main.ml" 653 24517 24553
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 653 24517 24554 "main.ml" 653 24517 24558
type(
  bool
)
"main.ml" 653 24517 24520 "main.ml" 653 24517 24558
call(
  stack
)
type(
  unit
)
"main.ml" 655 24567 24569 "main.ml" 655 24567 24590
type(
  Cabs.definition list -> bool -> unit
)
ident(
  ext_ref Resumeforgraph.resume
)
"main.ml" 655 24567 24591 "main.ml" 655 24567 24602
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 655 24567 24603 "main.ml" 655 24567 24608
type(
  bool
)
"main.ml" 655 24567 24569 "main.ml" 655 24567 24608
call(
  stack
)
type(
  unit
)
"main.ml" 652 24488 24490 "main.ml" 655 24567 24608
type(
  unit
)
"main.ml" 661 24658 24665 "main.ml" 661 24658 24666
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 661 24658 24666 "main.ml" 661 24658 24670
type(
  bool ref
)
ident(
  int_ref auto "main.ml" 116 4251 4255 "main.ml" 116 4251 4259
)
"main.ml" 661 24658 24664 "main.ml" 661 24658 24671
type(
  bool
)
"main.ml" 663 24756 24769 "main.ml" 663 24756 24778
type(
  (int * (string * 'a) list) list -> unit
)
ident(
  def auto_part "main.ml" 661 24658 24707 "main.ml" 764 28060 28067
)
"main.ml" 663 24756 24779 "main.ml" 663 24756 24787
type(
  (int * (string * 'a) list) list
)
ident(
  def strategy "main.ml" 664 24790 24796 "main.ml" 708 26108 26151
)
"main.ml" 664 24790 24802 "main.ml" 664 24790 24810
type(
  (int * (string * 'a) list) list
)
ident(
  int_ref strategy "main.ml" 663 24756 24779 "main.ml" 663 24756 24787
)
"main.ml" 665 24816 24826 "main.ml" 665 24816 24831
type(
  int
)
ident(
  def level "main.ml" 666 24840 24845 "main.ml" 669 24975 24983
)
"main.ml" 665 24816 24833 "main.ml" 665 24816 24834
type(
  (string * 'a) list
)
"main.ml" 665 24816 24825 "main.ml" 665 24816 24835
type(
  int * (string * 'a) list
)
"main.ml" 665 24816 24824 "main.ml" 665 24816 24836
type(
  (int * (string * 'a) list) list
)
"main.ml" 668 24906 24913 "main.ml" 668 24906 24919
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 668 24906 24920 "main.ml" 668 24906 24967
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 668 24906 24968 "main.ml" 668 24906 24973
type(
  int
)
ident(
  int_ref level "main.ml" 665 24816 24826 "main.ml" 665 24816 24831
)
"main.ml" 666 24840 24845 "main.ml" 669 24975 24983
call(
  tail
)
type(
  unit
)
"main.ml" 670 24984 24993 "main.ml" 670 24984 24998
type(
  int
)
ident(
  def level "main.ml" 671 25012 25017 "main.ml" 674 25103 25111
)
"main.ml" 670 24984 25000 "main.ml" 670 24984 25002
type(
  (string * 'a) list
)
"main.ml" 670 24984 24992 "main.ml" 670 24984 25003
type(
  int * (string * 'a) list
)
"main.ml" 670 24984 25007 "main.ml" 670 24984 25008
type(
  (int * (string * 'a) list) list
)
ident(
  def t "main.ml" 671 25012 25017 "main.ml" 674 25103 25111
)
"main.ml" 670 24984 24992 "main.ml" 670 24984 25008
type(
  (int * (string * 'a) list) list
)
"main.ml" 672 25023 25030 "main.ml" 672 25023 25036
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 672 25023 25037 "main.ml" 672 25023 25075
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 672 25023 25076 "main.ml" 672 25023 25081
type(
  int
)
ident(
  int_ref level "main.ml" 670 24984 24993 "main.ml" 670 24984 24998
)
"main.ml" 672 25023 25030 "main.ml" 672 25023 25081
call(
  stack
)
type(
  unit
)
"main.ml" 673 25083 25090 "main.ml" 673 25083 25099
type(
  (int * (string * 'a) list) list -> unit
)
ident(
  int_ref auto_part "main.ml" 663 24756 24769 "main.ml" 663 24756 24778
)
"main.ml" 673 25083 25100 "main.ml" 673 25083 25101
type(
  (int * (string * 'a) list) list
)
ident(
  int_ref t "main.ml" 670 24984 25007 "main.ml" 670 24984 25008
)
"main.ml" 673 25083 25090 "main.ml" 673 25083 25102
call(
  tail
)
type(
  unit
)
"main.ml" 671 25012 25017 "main.ml" 674 25103 25111
type(
  unit
)
"main.ml" 675 25112 25121 "main.ml" 675 25112 25126
type(
  int
)
ident(
  def level "main.ml" 676 25146 25151 "main.ml" 706 26085 26093
)
"main.ml" 675 25112 25128 "main.ml" 675 25112 25136
type(
  (string * 'a) list
)
ident(
  def fun_list "main.ml" 676 25146 25151 "main.ml" 706 26085 26093
)
"main.ml" 675 25112 25120 "main.ml" 675 25112 25137
type(
  int * (string * 'a) list
)
"main.ml" 675 25112 25141 "main.ml" 675 25112 25142
type(
  (int * (string * 'a) list) list
)
ident(
  def t "main.ml" 676 25146 25151 "main.ml" 706 26085 26093
)
"main.ml" 675 25112 25120 "main.ml" 675 25112 25142
type(
  (int * (string * 'a) list) list
)
"main.ml" 676 25146 25155 "main.ml" 676 25146 25160
type(
  string list
)
ident(
  def names "main.ml" 677 25207 25212 "main.ml" 706 26085 26093
)
"main.ml" 676 25146 25164 "main.ml" 676 25146 25172
type(
  (string * 'a -> string) -> (string * 'a) list -> string list
)
ident(
  ext_ref List.map
)
"main.ml" 676 25146 25179 "main.ml" 676 25146 25180
type(
  string
)
ident(
  def n "main.ml" 676 25146 25191 "main.ml" 676 25146 25192
)
"main.ml" 676 25146 25182 "main.ml" 676 25146 25186
type(
  'a
)
ident(
  def size "main.ml" 676 25146 25191 "main.ml" 676 25146 25192
)
"main.ml" 676 25146 25178 "main.ml" 676 25146 25187
type(
  string * 'a
)
"main.ml" 676 25146 25191 "main.ml" 676 25146 25192
type(
  string
)
ident(
  int_ref n "main.ml" 676 25146 25179 "main.ml" 676 25146 25180
)
"main.ml" 676 25146 25173 "main.ml" 676 25146 25193
type(
  string * 'a -> string
)
"main.ml" 676 25146 25194 "main.ml" 676 25146 25202
type(
  (string * 'a) list
)
ident(
  int_ref fun_list "main.ml" 675 25112 25128 "main.ml" 675 25112 25136
)
"main.ml" 676 25146 25163 "main.ml" 676 25146 25203
call(
  stack
)
type(
  string list
)
"main.ml" 678 25218 25225 "main.ml" 678 25218 25231
type(
  (int -> unit, out_channel, unit) format -> int -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 678 25218 25232 "main.ml" 678 25218 25258
type(
  (int -> unit, out_channel, unit) format
)
"main.ml" 678 25218 25259 "main.ml" 678 25218 25264
type(
  int
)
ident(
  int_ref level "main.ml" 675 25112 25121 "main.ml" 675 25112 25126
)
"main.ml" 678 25218 25225 "main.ml" 678 25218 25264
call(
  stack
)
type(
  unit
)
"main.ml" 679 25266 25273 "main.ml" 679 25266 25279
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 679 25266 25280 "main.ml" 679 25266 25288
type(
  (string -> unit, out_channel, unit) format
)
"main.ml" 679 25266 25290 "main.ml" 679 25266 25304
type(
  (string -> string -> string) -> string -> string list -> string
)
ident(
  ext_ref List.fold_left
)
"main.ml" 679 25266 25310 "main.ml" 679 25266 25311
type(
  string
)
ident(
  def p "main.ml" 679 25266 25312 "main.ml" 679 25266 25328
)
"main.ml" 679 25266 25312 "main.ml" 679 25266 25313
type(
  string
)
ident(
  def n "main.ml" 679 25266 25317 "main.ml" 679 25266 25328
)
"main.ml" 679 25266 25317 "main.ml" 679 25266 25318
type(
  string
)
ident(
  int_ref p "main.ml" 679 25266 25310 "main.ml" 679 25266 25311
)
"main.ml" 679 25266 25319 "main.ml" 679 25266 25320
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 679 25266 25321 "main.ml" 679 25266 25324
type(
  string
)
"main.ml" 679 25266 25325 "main.ml" 679 25266 25326
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 679 25266 25327 "main.ml" 679 25266 25328
type(
  string
)
ident(
  int_ref n "main.ml" 679 25266 25312 "main.ml" 679 25266 25313
)
"main.ml" 679 25266 25321 "main.ml" 679 25266 25328
call(
  stack
)
type(
  string
)
"main.ml" 679 25266 25317 "main.ml" 679 25266 25328
call(
  tail
)
type(
  string
)
"main.ml" 679 25266 25305 "main.ml" 679 25266 25329
type(
  string -> string -> string
)
"main.ml" 679 25266 25330 "main.ml" 679 25266 25332
type(
  string
)
"main.ml" 679 25266 25333 "main.ml" 679 25266 25338
type(
  string list
)
ident(
  int_ref names "main.ml" 676 25146 25155 "main.ml" 676 25146 25160
)
"main.ml" 679 25266 25289 "main.ml" 679 25266 25339
call(
  stack
)
type(
  string
)
"main.ml" 679 25266 25273 "main.ml" 679 25266 25339
call(
  stack
)
type(
  unit
)
"main.ml" 680 25341 25348 "main.ml" 680 25341 25369
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 680 25341 25370 "main.ml" 680 25341 25372
type(
  string ref list ref -> string ref list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 680 25341 25373 "main.ml" 680 25341 25375
type(
  string ref list
)
"main.ml" 680 25341 25348 "main.ml" 680 25341 25375
type(
  unit
)
"main.ml" 681 25377 25384 "main.ml" 681 25377 25393
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 681 25377 25399 "main.ml" 681 25377 25400
type(
  string
)
ident(
  def n "main.ml" 683 25437 25443 "main.ml" 683 25437 25487
)
"main.ml" 683 25437 25443 "main.ml" 683 25437 25482
type(
  string list -> unit
)
ident(
  ext_ref Cextraireboucle.sort_list_file_and_name
)
"main.ml" 683 25437 25484 "main.ml" 683 25437 25485
type(
  string
)
ident(
  int_ref n "main.ml" 681 25377 25399 "main.ml" 681 25377 25400
)
"main.ml" 683 25437 25483 "main.ml" 683 25437 25486
type(
  string list
)
"main.ml" 683 25437 25443 "main.ml" 683 25437 25487
call(
  tail
)
type(
  unit
)
"main.ml" 681 25377 25394 "main.ml" 684 25488 25496
type(
  string -> unit
)
"main.ml" 684 25488 25497 "main.ml" 684 25488 25502
type(
  string list
)
ident(
  int_ref names "main.ml" 676 25146 25155 "main.ml" 676 25146 25160
)
"main.ml" 681 25377 25384 "main.ml" 684 25488 25502
call(
  stack
)
type(
  unit
)
"main.ml" 685 25504 25511 "main.ml" 685 25504 25522
type(
  int ref
)
ident(
  ext_ref TO.numAppel
)
"main.ml" 685 25504 25523 "main.ml" 685 25504 25525
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 685 25504 25526 "main.ml" 685 25504 25527
type(
  int
)
"main.ml" 685 25504 25511 "main.ml" 685 25504 25527
type(
  unit
)
"main.ml" 686 25529 25537 "main.ml" 686 25529 25545
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idBoucle
)
"main.ml" 686 25529 25546 "main.ml" 686 25529 25548
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 686 25529 25549 "main.ml" 686 25529 25550
type(
  int
)
"main.ml" 686 25529 25537 "main.ml" 686 25529 25550
type(
  unit
)
"main.ml" 687 25552 25559 "main.ml" 687 25552 25563
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idIf
)
"main.ml" 687 25552 25564 "main.ml" 687 25552 25566
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 687 25552 25567 "main.ml" 687 25552 25568
type(
  int
)
"main.ml" 687 25552 25559 "main.ml" 687 25552 25568
type(
  unit
)
"main.ml" 688 25570 25578 "main.ml" 688 25570 25585
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.idAppel
)
"main.ml" 688 25570 25585 "main.ml" 688 25570 25587
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 688 25570 25588 "main.ml" 688 25570 25589
type(
  int
)
"main.ml" 688 25570 25578 "main.ml" 688 25570 25589
type(
  unit
)
"main.ml" 689 25591 25598 "main.ml" 689 25591 25612
type(
  int ref
)
ident(
  ext_ref Cextraireboucle.nbImbrications
)
"main.ml" 689 25591 25613 "main.ml" 689 25591 25615
type(
  int ref -> int -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 689 25591 25616 "main.ml" 689 25591 25617
type(
  int
)
"main.ml" 689 25591 25598 "main.ml" 689 25591 25617
type(
  unit
)
"main.ml" 690 25619 25627 "main.ml" 690 25619 25636
type(
  bool ref
)
ident(
  ext_ref TO.enTETE
)
"main.ml" 690 25619 25637 "main.ml" 690 25619 25639
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 690 25619 25640 "main.ml" 690 25619 25645
type(
  bool
)
"main.ml" 690 25619 25627 "main.ml" 690 25619 25645
type(
  unit
)
"main.ml" 691 25647 25655 "main.ml" 691 25647 25667
type(
  bool ref
)
ident(
  ext_ref TO.estNulEng
)
"main.ml" 691 25647 25668 "main.ml" 691 25647 25670
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 691 25647 25671 "main.ml" 691 25647 25676
type(
  bool
)
"main.ml" 691 25647 25655 "main.ml" 691 25647 25676
type(
  unit
)
"main.ml" 692 25678 25686 "main.ml" 692 25678 25702
type(
  bool ref
)
ident(
  ext_ref TO.estDansBoucle
)
"main.ml" 692 25678 25703 "main.ml" 692 25678 25705
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 692 25678 25706 "main.ml" 692 25678 25711
type(
  bool
)
"main.ml" 692 25678 25686 "main.ml" 692 25678 25711
type(
  unit
)
"main.ml" 697 25765 25773 "main.ml" 697 25765 25781
type(
  Cextraireboucle.listeDesFonctions -> unit
)
ident(
  int_ref getComps "main.ml" 243 10194 10202 "main.ml" 243 10194 10210
)
"main.ml" 697 25765 25782 "main.ml" 697 25765 25783
type(
  Cextraireboucle.document ref -> Cextraireboucle.document
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 697 25765 25783 "main.ml" 697 25765 25786
type(
  Cextraireboucle.document ref
)
ident(
  ext_ref Cextraireboucle.doc
)
"main.ml" 697 25765 25782 "main.ml" 697 25765 25786
type(
  Cextraireboucle.document
)
"main.ml" 697 25765 25782 "main.ml" 697 25765 25806
type(
  Cextraireboucle.listeDesFonctions
)
"main.ml" 697 25765 25773 "main.ml" 697 25765 25806
call(
  stack
)
type(
  unit
)
"main.ml" 699 25860 25867 "main.ml" 699 25860 25876
type(
  (string -> unit) -> string list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 699 25860 25882 "main.ml" 699 25860 25883
type(
  string
)
ident(
  def n "main.ml" 699 25860 25887 "main.ml" 699 25860 25920
)
"main.ml" 699 25860 25887 "main.ml" 699 25860 25918
type(
  string -> unit
)
ident(
  ext_ref Cextraireboucle.add_use_partial
)
"main.ml" 699 25860 25919 "main.ml" 699 25860 25920
type(
  string
)
ident(
  int_ref n "main.ml" 699 25860 25882 "main.ml" 699 25860 25883
)
"main.ml" 699 25860 25887 "main.ml" 699 25860 25920
call(
  tail
)
type(
  unit
)
"main.ml" 699 25860 25877 "main.ml" 699 25860 25921
type(
  string -> unit
)
"main.ml" 699 25860 25922 "main.ml" 699 25860 25927
type(
  string list
)
ident(
  int_ref names "main.ml" 676 25146 25155 "main.ml" 676 25146 25160
)
"main.ml" 699 25860 25867 "main.ml" 699 25860 25927
call(
  stack
)
type(
  unit
)
"main.ml" 700 25929 25936 "main.ml" 700 25929 25957
type(
  (string * Cvarabs.typeListeAS) list ref
)
ident(
  ext_ref Util.alreadyEvalFunctionAS
)
"main.ml" 700 25929 25958 "main.ml" 700 25929 25960
type(
  (string * Cvarabs.typeListeAS) list ref ->
  (string * Cvarabs.typeListeAS) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 701 25961 25967 "main.ml" 701 25961 25975
type(
  (string -> string * Cvarabs.typeListeAS) ->
  string list -> (string * Cvarabs.typeListeAS) list
)
ident(
  ext_ref List.map
)
"main.ml" 702 25978 25990 "main.ml" 702 25978 25991
type(
  string
)
ident(
  def n "main.ml" 702 25978 25995 "main.ml" 702 25978 26037
)
"main.ml" 702 25978 25996 "main.ml" 702 25978 25997
type(
  string
)
ident(
  int_ref n "main.ml" 702 25978 25990 "main.ml" 702 25978 25991
)
"main.ml" 702 25978 25999 "main.ml" 702 25978 26034
type(
  string -> Cvarabs.typeListeAS
)
ident(
  ext_ref Cextraireboucle.getAbsStoreFromComp
)
"main.ml" 702 25978 26035 "main.ml" 702 25978 26036
type(
  string
)
ident(
  int_ref n "main.ml" 702 25978 25990 "main.ml" 702 25978 25991
)
"main.ml" 702 25978 25999 "main.ml" 702 25978 26036
call(
  stack
)
type(
  Cvarabs.typeListeAS
)
"main.ml" 702 25978 25995 "main.ml" 702 25978 26037
type(
  string * Cvarabs.typeListeAS
)
"main.ml" 701 25961 25976 "main.ml" 703 26038 26045
type(
  string -> string * Cvarabs.typeListeAS
)
"main.ml" 703 26038 26046 "main.ml" 703 26038 26047
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 703 26038 26047 "main.ml" 703 26038 26058
type(
  string list ref
)
ident(
  ext_ref Cextraireboucle.use_partial
)
"main.ml" 703 26038 26046 "main.ml" 703 26038 26058
type(
  string list
)
"main.ml" 701 25961 25967 "main.ml" 703 26038 26058
call(
  stack
)
type(
  (string * Cvarabs.typeListeAS) list
)
"main.ml" 700 25929 25936 "main.ml" 703 26038 26058
type(
  unit
)
"main.ml" 705 26065 26072 "main.ml" 705 26065 26081
type(
  (int * (string * 'a) list) list -> unit
)
ident(
  int_ref auto_part "main.ml" 663 24756 24769 "main.ml" 663 24756 24778
)
"main.ml" 705 26065 26082 "main.ml" 705 26065 26083
type(
  (int * (string * 'a) list) list
)
ident(
  int_ref t "main.ml" 675 25112 25141 "main.ml" 675 25112 25142
)
"main.ml" 705 26065 26072 "main.ml" 705 26065 26084
call(
  tail
)
type(
  unit
)
"main.ml" 700 25929 25936 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 699 25860 25867 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 697 25765 25773 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 692 25678 25686 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 691 25647 25655 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 690 25619 25627 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 689 25591 25598 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 688 25570 25578 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 687 25552 25559 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 686 25529 25537 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 685 25504 25511 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 681 25377 25384 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 680 25341 25348 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 679 25266 25273 "main.ml" 705 26065 26084
type(
  unit
)
"main.ml" 677 25207 25212 "main.ml" 706 26085 26093
type(
  unit
)
"main.ml" 676 25146 25151 "main.ml" 706 26085 26093
type(
  unit
)
"main.ml" 707 26094 26102 "main.ml" 707 26094 26104
type(
  (int * (string * 'a) list) list
)
"main.ml" 708 26108 26113 "main.ml" 708 26108 26119
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 708 26108 26120 "main.ml" 708 26108 26147
type(
  (unit, out_channel, unit) format
)
"main.ml" 708 26108 26113 "main.ml" 708 26108 26147
call(
  stack
)
type(
  unit
)
"main.ml" 708 26108 26149 "main.ml" 708 26108 26151
type(
  unit
)
"main.ml" 708 26108 26113 "main.ml" 708 26108 26151
type(
  unit
)
"main.ml" 664 24790 24796 "main.ml" 708 26108 26151
type(
  unit
)
"main.ml" 712 26189 26197 "main.ml" 712 26189 26198
type(
  unit
)
"main.ml" 712 26189 26201 "main.ml" 712 26189 26222
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 712 26189 26223 "main.ml" 712 26189 26225
type(
  string ref list ref -> string ref list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 712 26189 26226 "main.ml" 712 26189 26228
type(
  string ref list
)
"main.ml" 712 26189 26201 "main.ml" 712 26189 26228
type(
  unit
)
"main.ml" 713 26232 26240 "main.ml" 713 26232 26241
type(
  unit
)
"main.ml" 713 26232 26244 "main.ml" 713 26232 26283
type(
  string list -> unit
)
ident(
  ext_ref Cextraireboucle.sort_list_file_and_name
)
"main.ml" 713 26232 26285 "main.ml" 713 26232 26286
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 713 26232 26287 "main.ml" 713 26232 26288
type(
  string ref ref -> string ref
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 713 26232 26288 "main.ml" 713 26232 26312
type(
  string ref ref
)
ident(
  ext_ref Cextraireboucle.mainFonc
)
"main.ml" 713 26232 26286 "main.ml" 713 26232 26313
type(
  string ref
)
"main.ml" 713 26232 26285 "main.ml" 713 26232 26313
type(
  string
)
"main.ml" 713 26232 26284 "main.ml" 713 26232 26314
type(
  string list
)
"main.ml" 713 26232 26244 "main.ml" 713 26232 26314
call(
  stack
)
type(
  unit
)
"main.ml" 714 26318 26326 "main.ml" 714 26318 26334
type(
  (int * (Tod.node_id * int) list) list
)
ident(
  def strategy "main.ml" 726 26732 26736 "main.ml" 763 28053 28059
)
"main.ml" 715 26338 26342 "main.ml" 715 26338 26349
type(
  (int * (Tod.node_id * int) list) list list ->
  (int * (Tod.node_id * int) list) list
)
ident(
  ext_ref List.hd
)
"main.ml" 716 26352 26361 "main.ml" 716 26352 26362
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 716 26352 26362 "main.ml" 716 26352 26377
type(
  bool ref
)
ident(
  int_ref allow_pessimism "main.ml" 117 4272 4276 "main.ml" 117 4272 4291
)
"main.ml" 716 26352 26361 "main.ml" 716 26352 26377
type(
  bool
)
"main.ml" 717 26383 26389 "main.ml" 717 26383 26424
type(
  Cabs.definition list -> (int * (Tod.node_id * int) list) list list
)
ident(
  ext_ref Resumeforgraph.get_all_big_strategy
)
"main.ml" 717 26383 26425 "main.ml" 717 26383 26436
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 717 26383 26388 "main.ml" 717 26383 26437
call(
  stack
)
type(
  (int * (Tod.node_id * int) list) list list
)
"main.ml" 719 26449 26455 "main.ml" 719 26449 26505
type(
  Cabs.definition list -> (int * (Tod.node_id * int) list) list list
)
ident(
  ext_ref Resumeforgraph.get_only_without_pessimism_strategy
)
"main.ml" 719 26449 26506 "main.ml" 719 26449 26517
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 719 26449 26454 "main.ml" 719 26449 26518
call(
  stack
)
type(
  (int * (Tod.node_id * int) list) list list
)
"main.ml" 715 26338 26350 "main.ml" 720 26519 26524
type(
  (int * (Tod.node_id * int) list) list list
)
"main.ml" 715 26338 26342 "main.ml" 720 26519 26524
call(
  stack
)
type(
  (int * (Tod.node_id * int) list) list
)
"main.ml" 726 26732 26736 "main.ml" 726 26732 26745
type(
  (int * (Tod.node_id * int) list) list -> unit
)
ident(
  int_ref auto_part "main.ml" 663 24756 24769 "main.ml" 663 24756 24778
)
"main.ml" 726 26732 26746 "main.ml" 726 26732 26754
type(
  (int * (Tod.node_id * int) list) list
)
ident(
  int_ref strategy "main.ml" 714 26318 26326 "main.ml" 714 26318 26334
)
"main.ml" 726 26732 26736 "main.ml" 726 26732 26754
call(
  stack
)
type(
  unit
)
"main.ml" 729 26822 26826 "main.ml" 729 26822 26832
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 729 26822 26833 "main.ml" 729 26822 26863
type(
  (unit, out_channel, unit) format
)
"main.ml" 729 26822 26826 "main.ml" 729 26822 26863
call(
  stack
)
type(
  unit
)
"main.ml" 730 26865 26869 "main.ml" 730 26865 26890
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 730 26865 26891 "main.ml" 730 26865 26893
type(
  string ref list ref -> string ref list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 730 26865 26894 "main.ml" 730 26865 26896
type(
  string ref list
)
"main.ml" 730 26865 26869 "main.ml" 730 26865 26896
type(
  unit
)
"main.ml" 731 26898 26902 "main.ml" 731 26898 26920
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 731 26898 26921 "main.ml" 731 26898 26923
type(
  string list ref -> string list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 731 26898 26924 "main.ml" 731 26898 26925
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 731 26898 26925 "main.ml" 731 26898 26943
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 731 26898 26924 "main.ml" 731 26898 26943
type(
  string list
)
"main.ml" 731 26898 26944 "main.ml" 731 26898 26945
type(
  string list -> string list -> string list
)
ident(
  ext_ref Pervasives.( @ )
)
"main.ml" 731 26898 26947 "main.ml" 731 26898 26959
type(
  string -> string list
)
ident(
  int_ref get_fun_list "main.ml" 85 3509 3513 "main.ml" 85 3509 3525
)
"main.ml" 731 26898 26960 "main.ml" 731 26898 26961
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 731 26898 26961 "main.ml" 731 26898 26974
type(
  string ref
)
ident(
  int_ref fun_list_file "main.ml" 83 3430 3434 "main.ml" 83 3430 3447
)
"main.ml" 731 26898 26960 "main.ml" 731 26898 26974
type(
  string
)
"main.ml" 731 26898 26946 "main.ml" 731 26898 26975
call(
  stack
)
type(
  string list
)
"main.ml" 731 26898 26924 "main.ml" 731 26898 26975
call(
  stack
)
type(
  string list
)
"main.ml" 731 26898 26902 "main.ml" 731 26898 26975
type(
  unit
)
"main.ml" 732 26977 26981 "main.ml" 732 26977 27020
type(
  string list -> unit
)
ident(
  ext_ref Cextraireboucle.sort_list_file_and_name
)
"main.ml" 732 26977 27021 "main.ml" 732 26977 27022
type(
  string list ref -> string list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 732 26977 27022 "main.ml" 732 26977 27040
type(
  string list ref
)
ident(
  int_ref list_file_and_name "main.ml" 79 3255 3259 "main.ml" 79 3255 3277
)
"main.ml" 732 26977 27021 "main.ml" 732 26977 27040
type(
  string list
)
"main.ml" 732 26977 26981 "main.ml" 732 26977 27040
call(
  stack
)
type(
  unit
)
"main.ml" 733 27042 27050 "main.ml" 733 27042 27052
type(
  string
)
ident(
  def hd "main.ml" 735 27141 27148 "main.ml" 763 28053 28059
)
"main.ml" 733 27042 27056 "main.ml" 733 27042 27057
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 733 27042 27058 "main.ml" 733 27042 27065
type(
  string ref list -> string ref
)
ident(
  ext_ref List.hd
)
"main.ml" 733 27042 27067 "main.ml" 733 27042 27068
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 733 27042 27068 "main.ml" 733 27042 27089
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 733 27042 27066 "main.ml" 733 27042 27090
type(
  string ref list
)
"main.ml" 733 27042 27057 "main.ml" 733 27042 27091
call(
  stack
)
type(
  string ref
)
"main.ml" 733 27042 27055 "main.ml" 733 27042 27092
type(
  string
)
"main.ml" 734 27093 27101 "main.ml" 734 27093 27103
type(
  string ref list
)
ident(
  def tl "main.ml" 735 27141 27148 "main.ml" 763 28053 28059
)
"main.ml" 734 27093 27107 "main.ml" 734 27093 27114
type(
  string ref list -> string ref list
)
ident(
  ext_ref List.tl
)
"main.ml" 734 27093 27116 "main.ml" 734 27093 27117
type(
  string ref list ref -> string ref list
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 734 27093 27117 "main.ml" 734 27093 27138
type(
  string ref list ref
)
ident(
  ext_ref Cextraireboucle.names
)
"main.ml" 734 27093 27115 "main.ml" 734 27093 27139
type(
  string ref list
)
"main.ml" 734 27093 27106 "main.ml" 734 27093 27140
call(
  stack
)
type(
  string ref list
)
"main.ml" 735 27141 27148 "main.ml" 735 27141 27167
type(
  string -> string ref list -> unit
)
ident(
  ext_ref Cextraireboucle.maj
)
"main.ml" 735 27141 27168 "main.ml" 735 27141 27170
type(
  string
)
ident(
  int_ref hd "main.ml" 733 27042 27050 "main.ml" 733 27042 27052
)
"main.ml" 735 27141 27171 "main.ml" 735 27141 27173
type(
  string ref list
)
ident(
  int_ref tl "main.ml" 734 27093 27101 "main.ml" 734 27093 27103
)
"main.ml" 735 27141 27148 "main.ml" 735 27141 27173
call(
  stack
)
type(
  unit
)
"main.ml" 737 27214 27221 "main.ml" 737 27214 27222
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 737 27214 27222 "main.ml" 737 27214 27231
type(
  bool ref
)
ident(
  int_ref print_exp "main.ml" 113 4207 4211 "main.ml" 113 4207 4220
)
"main.ml" 737 27214 27221 "main.ml" 737 27214 27231
type(
  bool
)
"main.ml" 738 27237 27242 "main.ml" 738 27237 27263
type(
  bool ref
)
ident(
  ext_ref XO.isPrint_Expression
)
"main.ml" 738 27237 27264 "main.ml" 738 27237 27266
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 738 27237 27267 "main.ml" 738 27237 27271
type(
  bool
)
"main.ml" 738 27237 27242 "main.ml" 738 27237 27271
type(
  unit
)
"main.ml" 740 27281 27286 "main.ml" 740 27281 27307
type(
  bool ref
)
ident(
  ext_ref XO.isPrint_Expression
)
"main.ml" 740 27281 27308 "main.ml" 740 27281 27310
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 740 27281 27311 "main.ml" 740 27281 27316
type(
  bool
)
"main.ml" 740 27281 27286 "main.ml" 740 27281 27316
type(
  unit
)
"main.ml" 737 27214 27218 "main.ml" 740 27281 27316
type(
  unit
)
"main.ml" 742 27323 27336 "main.ml" 742 27323 27337
type(
  Cextraireboucle.document ref -> Cextraireboucle.document
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 742 27323 27337 "main.ml" 742 27323 27340
type(
  Cextraireboucle.document ref
)
ident(
  ext_ref Cextraireboucle.doc
)
"main.ml" 742 27323 27336 "main.ml" 742 27323 27340
type(
  Cextraireboucle.document
)
"main.ml" 742 27323 27336 "main.ml" 742 27323 27360
type(
  Cextraireboucle.listeDesFonctions
)
"main.ml" 742 27323 27361 "main.ml" 742 27323 27362
type(
  Cextraireboucle.listeDesFonctions ->
  Cextraireboucle.listeDesFonctions -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 742 27323 27363 "main.ml" 742 27323 27365
type(
  Cextraireboucle.listeDesFonctions
)
"main.ml" 742 27323 27335 "main.ml" 742 27323 27366
type(
  bool
)
"main.ml" 743 27373 27378 "main.ml" 743 27373 27391
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 743 27373 27392 "main.ml" 743 27373 27422
type(
  (unit, out_channel, unit) format
)
"main.ml" 743 27373 27378 "main.ml" 743 27373 27422
call(
  stack
)
type(
  unit
)
"main.ml" 744 27423 27433 "main.ml" 744 27423 27446
type(
  (unit, out_channel, unit) format -> unit
)
ident(
  ext_ref Printf.printf
)
"main.ml" 744 27423 27447 "main.ml" 744 27423 27481
type(
  (unit, out_channel, unit) format
)
"main.ml" 744 27423 27433 "main.ml" 744 27423 27481
call(
  stack
)
type(
  unit
)
"main.ml" 742 27323 27332 "main.ml" 744 27423 27481
type(
  unit
)
"main.ml" 747 27493 27497 "main.ml" 747 27493 27526
type(
  bool ref
)
ident(
  ext_ref XO.notwithGlobalAndStaticInit
)
"main.ml" 747 27493 27527 "main.ml" 747 27493 27529
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 747 27493 27530 "main.ml" 747 27493 27531
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 747 27493 27531 "main.ml" 747 27493 27557
type(
  bool ref
)
ident(
  int_ref withoutGlobalAndStaticInit "main.ml" 126 4460 4464 "main.ml" 126 4460 4490
)
"main.ml" 747 27493 27530 "main.ml" 747 27493 27557
type(
  bool
)
"main.ml" 747 27493 27497 "main.ml" 747 27493 27557
type(
  unit
)
"main.ml" 749 27564 27568 "main.ml" 749 27564 27580
type(
  XO.documentEvalue ref
)
ident(
  ext_ref XO.docEvalue
)
"main.ml" 749 27564 27581 "main.ml" 749 27564 27583
type(
  XO.documentEvalue ref -> XO.documentEvalue -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 749 27564 27585 "main.ml" 749 27564 27606
type(
  XO.nidEval list -> XO.elementEval list -> XO.documentEvalue
)
ident(
  ext_ref XO.new_documentEvalue
)
"main.ml" 749 27564 27607 "main.ml" 749 27564 27609
type(
  XO.nidEval list
)
"main.ml" 749 27564 27610 "main.ml" 749 27564 27612
type(
  XO.elementEval list
)
"main.ml" 749 27564 27585 "main.ml" 749 27564 27612
call(
  stack
)
type(
  XO.documentEvalue
)
"main.ml" 749 27564 27568 "main.ml" 749 27564 27612
type(
  unit
)
"main.ml" 751 27622 27627 "main.ml" 751 27622 27637
type(
  Orange.typeCompEvalue list ref
)
ident(
  ext_ref Orange.compEvalue
)
"main.ml" 751 27622 27638 "main.ml" 751 27622 27640
type(
  Orange.typeCompEvalue list ref -> Orange.typeCompEvalue list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 751 27622 27641 "main.ml" 751 27622 27643
type(
  Orange.typeCompEvalue list
)
"main.ml" 751 27622 27627 "main.ml" 751 27622 27643
type(
  unit
)
"main.ml" 752 27645 27649 "main.ml" 752 27645 27660
type(
  (string * int * string list * string list) list ref
)
ident(
  ext_ref Orange.listeAppels
)
"main.ml" 752 27645 27661 "main.ml" 752 27645 27663
type(
  (string * int * string list * string list) list ref ->
  (string * int * string list * string list) list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 752 27645 27665 "main.ml" 752 27645 27667
type(
  (string * int * string list * string list) list
)
"main.ml" 752 27645 27649 "main.ml" 752 27645 27667
type(
  unit
)
"main.ml" 755 27679 27688 "main.ml" 755 27679 27694
type(
  string
)
ident(
  def myMode "main.ml" 756 27776 27781 "main.ml" 763 28053 28059
)
"main.ml" 755 27679 27700 "main.ml" 755 27679 27701
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 755 27679 27701 "main.ml" 755 27679 27707
type(
  bool ref
)
ident(
  int_ref resume "main.ml" 128 4529 4533 "main.ml" 128 4529 4539
)
"main.ml" 755 27679 27700 "main.ml" 755 27679 27707
type(
  bool
)
"main.ml" 755 27679 27713 "main.ml" 755 27679 27721
type(
  string
)
"main.ml" 755 27679 27730 "main.ml" 755 27679 27731
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 755 27679 27731 "main.ml" 755 27679 27740
type(
  bool ref
)
ident(
  int_ref multiTree "main.ml" 127 4503 4507 "main.ml" 127 4503 4516
)
"main.ml" 755 27679 27730 "main.ml" 755 27679 27740
type(
  bool
)
"main.ml" 755 27679 27746 "main.ml" 755 27679 27757
type(
  string
)
"main.ml" 755 27679 27763 "main.ml" 755 27679 27772
type(
  string
)
"main.ml" 755 27679 27727 "main.ml" 755 27679 27772
type(
  string
)
"main.ml" 755 27679 27697 "main.ml" 755 27679 27772
type(
  string
)
"main.ml" 756 27776 27785 "main.ml" 756 27776 27791
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  def result "main.ml" 757 27842 27846 "main.ml" 763 28053 28059
)
"main.ml" 756 27776 27794 "main.ml" 756 27776 27806
type(
  out_channel ->
  Cabs.file -> bool -> string -> Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  ext_ref XO.printFile
)
"main.ml" 756 27776 27807 "main.ml" 756 27776 27813
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 756 27776 27814 "main.ml" 756 27776 27825
type(
  Cabs.file
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 756 27776 27826 "main.ml" 756 27776 27831
type(
  bool
)
"main.ml" 756 27776 27832 "main.ml" 756 27776 27838
type(
  string
)
ident(
  int_ref myMode "main.ml" 755 27679 27688 "main.ml" 755 27679 27694
)
"main.ml" 756 27776 27794 "main.ml" 756 27776 27838
call(
  stack
)
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
"main.ml" 757 27842 27850 "main.ml" 757 27842 27851
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 757 27842 27851 "main.ml" 757 27842 27859
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 757 27842 27850 "main.ml" 757 27842 27859
type(
  string
)
"main.ml" 757 27842 27860 "main.ml" 757 27842 27861
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 757 27842 27862 "main.ml" 757 27842 27864
type(
  string
)
"main.ml" 757 27842 27850 "main.ml" 757 27842 27864
type(
  bool
)
"main.ml" 758 27871 27875 "main.ml" 758 27871 27884
type(
  (Orange.PartialAdapter(Orange.MonList).t -> unit) ->
  Orange.PartialAdapter(Orange.MonList).t list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 758 27871 27890 "main.ml" 758 27871 27891
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  def s "main.ml" 758 27871 27894 "main.ml" 758 27871 27916
)
"main.ml" 758 27871 27894 "main.ml" 758 27871 27906
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 758 27871 27908 "main.ml" 758 27871 27909
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  int_ref s "main.ml" 758 27871 27890 "main.ml" 758 27871 27891
)
"main.ml" 758 27871 27910 "main.ml" 758 27871 27911
type(
  Orange.PartialAdapter(Orange.MonList).t -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 758 27871 27911 "main.ml" 758 27871 27915
type(
  string
)
"main.ml" 758 27871 27907 "main.ml" 758 27871 27916
call(
  stack
)
type(
  string
)
"main.ml" 758 27871 27894 "main.ml" 758 27871 27916
call(
  tail
)
type(
  unit
)
"main.ml" 758 27871 27885 "main.ml" 758 27871 27918
type(
  Orange.PartialAdapter(Orange.MonList).t -> unit
)
"main.ml" 758 27871 27919 "main.ml" 758 27871 27925
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  int_ref result "main.ml" 756 27776 27785 "main.ml" 756 27776 27791
)
"main.ml" 758 27871 27875 "main.ml" 758 27871 27925
call(
  stack
)
type(
  unit
)
"main.ml" 760 27935 27944 "main.ml" 760 27935 27947
type(
  out_channel
)
ident(
  def out "main.ml" 761 27972 27977 "main.ml" 762 28033 28052
)
"main.ml" 760 27935 27950 "main.ml" 760 27935 27958
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 760 27935 27959 "main.ml" 760 27935 27960
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 760 27935 27960 "main.ml" 760 27935 27968
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 760 27935 27959 "main.ml" 760 27935 27968
type(
  string
)
"main.ml" 760 27935 27950 "main.ml" 760 27935 27968
call(
  stack
)
type(
  out_channel
)
"main.ml" 761 27972 27977 "main.ml" 761 27972 27986
type(
  (Orange.PartialAdapter(Orange.MonList).t -> unit) ->
  Orange.PartialAdapter(Orange.MonList).t list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 761 27972 27992 "main.ml" 761 27972 27993
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  def s "main.ml" 761 27972 27996 "main.ml" 761 27972 28023
)
"main.ml" 761 27972 27996 "main.ml" 761 27972 28009
type(
  out_channel -> string -> unit
)
ident(
  ext_ref Pervasives.output_string
)
"main.ml" 761 27972 28010 "main.ml" 761 27972 28013
type(
  out_channel
)
ident(
  int_ref out "main.ml" 760 27935 27944 "main.ml" 760 27935 27947
)
"main.ml" 761 27972 28015 "main.ml" 761 27972 28016
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  int_ref s "main.ml" 761 27972 27992 "main.ml" 761 27972 27993
)
"main.ml" 761 27972 28017 "main.ml" 761 27972 28018
type(
  Orange.PartialAdapter(Orange.MonList).t -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 761 27972 28018 "main.ml" 761 27972 28022
type(
  string
)
"main.ml" 761 27972 28014 "main.ml" 761 27972 28023
call(
  stack
)
type(
  string
)
"main.ml" 761 27972 27996 "main.ml" 761 27972 28023
call(
  tail
)
type(
  unit
)
"main.ml" 761 27972 27987 "main.ml" 761 27972 28024
type(
  Orange.PartialAdapter(Orange.MonList).t -> unit
)
"main.ml" 761 27972 28025 "main.ml" 761 27972 28031
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  int_ref result "main.ml" 756 27776 27785 "main.ml" 756 27776 27791
)
"main.ml" 761 27972 27977 "main.ml" 761 27972 28031
call(
  stack
)
type(
  unit
)
"main.ml" 762 28033 28038 "main.ml" 762 28033 28047
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 762 28033 28048 "main.ml" 762 28033 28051
type(
  out_channel
)
ident(
  int_ref out "main.ml" 760 27935 27944 "main.ml" 760 27935 27947
)
"main.ml" 762 28033 28038 "main.ml" 762 28033 28052
call(
  stack
)
type(
  unit
)
"main.ml" 761 27972 27977 "main.ml" 762 28033 28052
type(
  unit
)
"main.ml" 760 27935 27940 "main.ml" 762 28033 28052
type(
  unit
)
"main.ml" 757 27842 27846 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 756 27776 27781 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 755 27679 27684 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 752 27645 27649 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 751 27622 27627 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 749 27564 27568 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 747 27493 27497 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 742 27323 27332 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 737 27214 27218 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 735 27141 27148 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 733 27042 27046 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 732 26977 26981 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 731 26898 26902 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 730 26865 26869 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 729 26822 26826 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 726 26732 26736 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 714 26318 26322 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 713 26232 26236 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 712 26189 26193 "main.ml" 763 28053 28059
type(
  unit
)
"main.ml" 661 24658 24707 "main.ml" 764 28060 28067
type(
  unit
)
"main.ml" 765 28069 28082 "main.ml" 765 28069 28083
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 765 28069 28083 "main.ml" 765 28069 28090
type(
  bool ref
)
ident(
  int_ref partial "main.ml" 120 4325 4329 "main.ml" 120 4325 4336
)
"main.ml" 765 28069 28081 "main.ml" 765 28069 28091
type(
  bool
)
"main.ml" 768 28138 28144 "main.ml" 768 28138 28160
type(
  Cabs.definition list -> unit
)
ident(
  int_ref analysePartielle "main.ml" 356 14834 14838 "main.ml" 356 14834 14854
)
"main.ml" 768 28138 28161 "main.ml" 768 28138 28172
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 765 28069 28120 "main.ml" 769 28173 28180
call(
  stack
)
type(
  unit
)
"main.ml" 770 28212 28221 "main.ml" 770 28212 28222
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 770 28212 28222 "main.ml" 770 28212 28231
type(
  bool ref
)
ident(
  int_ref print_exp "main.ml" 113 4207 4211 "main.ml" 113 4207 4220
)
"main.ml" 770 28212 28221 "main.ml" 770 28212 28231
type(
  bool
)
"main.ml" 771 28237 28245 "main.ml" 771 28237 28266
type(
  bool ref
)
ident(
  ext_ref XO.isPrint_Expression
)
"main.ml" 771 28237 28267 "main.ml" 771 28237 28269
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 771 28237 28270 "main.ml" 771 28237 28274
type(
  bool
)
"main.ml" 771 28237 28245 "main.ml" 771 28237 28274
type(
  unit
)
"main.ml" 773 28286 28294 "main.ml" 773 28286 28315
type(
  bool ref
)
ident(
  ext_ref XO.isPrint_Expression
)
"main.ml" 773 28286 28316 "main.ml" 773 28286 28318
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 773 28286 28319 "main.ml" 773 28286 28324
type(
  bool
)
"main.ml" 773 28286 28294 "main.ml" 773 28286 28324
type(
  unit
)
"main.ml" 770 28212 28218 "main.ml" 773 28286 28324
type(
  unit
)
"main.ml" 774 28326 28332 "main.ml" 774 28326 28361
type(
  bool ref
)
ident(
  ext_ref XO.notwithGlobalAndStaticInit
)
"main.ml" 774 28326 28362 "main.ml" 774 28326 28364
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"main.ml" 774 28326 28365 "main.ml" 774 28326 28366
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 774 28326 28366 "main.ml" 774 28326 28392
type(
  bool ref
)
ident(
  int_ref withoutGlobalAndStaticInit "main.ml" 126 4460 4464 "main.ml" 126 4460 4490
)
"main.ml" 774 28326 28365 "main.ml" 774 28326 28392
type(
  bool
)
"main.ml" 774 28326 28332 "main.ml" 774 28326 28392
type(
  unit
)
"main.ml" 780 28605 28617 "main.ml" 780 28605 28623
type(
  string
)
ident(
  def myMode "main.ml" 781 28705 28709 "main.ml" 794 29243 29261
)
"main.ml" 780 28605 28629 "main.ml" 780 28605 28630
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 780 28605 28630 "main.ml" 780 28605 28636
type(
  bool ref
)
ident(
  int_ref resume "main.ml" 128 4529 4533 "main.ml" 128 4529 4539
)
"main.ml" 780 28605 28629 "main.ml" 780 28605 28636
type(
  bool
)
"main.ml" 780 28605 28642 "main.ml" 780 28605 28650
type(
  string
)
"main.ml" 780 28605 28659 "main.ml" 780 28605 28660
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 780 28605 28660 "main.ml" 780 28605 28669
type(
  bool ref
)
ident(
  int_ref multiTree "main.ml" 127 4503 4507 "main.ml" 127 4503 4516
)
"main.ml" 780 28605 28659 "main.ml" 780 28605 28669
type(
  bool
)
"main.ml" 780 28605 28675 "main.ml" 780 28605 28686
type(
  string
)
"main.ml" 780 28605 28692 "main.ml" 780 28605 28701
type(
  string
)
"main.ml" 780 28605 28656 "main.ml" 780 28605 28701
type(
  string
)
"main.ml" 780 28605 28626 "main.ml" 780 28605 28701
type(
  string
)
"main.ml" 781 28705 28713 "main.ml" 781 28705 28719
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  def result "main.ml" 789 29040 29046 "main.ml" 794 29243 29261
)
"main.ml" 782 28722 28729 "main.ml" 782 28722 28730
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 782 28722 28730 "main.ml" 782 28722 28736
type(
  bool ref
)
ident(
  ext_ref Util.cSNPRT
)
"main.ml" 782 28722 28729 "main.ml" 782 28722 28736
type(
  bool
)
"main.ml" 783 28742 28748 "main.ml" 783 28742 28760
type(
  out_channel ->
  Cabs.file -> bool -> string -> Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  ext_ref XO.printFile
)
"main.ml" 783 28742 28761 "main.ml" 783 28742 28767
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 783 28742 28768 "main.ml" 783 28742 28779
type(
  Cabs.file
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 784 28781 28847 "main.ml" 784 28781 28851
type(
  bool
)
"main.ml" 784 28781 28852 "main.ml" 784 28781 28858
type(
  string
)
ident(
  int_ref myMode "main.ml" 780 28605 28617 "main.ml" 780 28605 28623
)
"main.ml" 783 28742 28748 "main.ml" 784 28781 28858
call(
  stack
)
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
"main.ml" 786 28870 28879 "main.ml" 786 28870 28907
type(
  Cabs.definition list -> unit
)
ident(
  ext_ref Resumeforgraph.get_intervals
)
"main.ml" 786 28870 28908 "main.ml" 786 28870 28919
type(
  Cabs.definition list
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 786 28870 28879 "main.ml" 786 28870 28919
call(
  stack
)
type(
  unit
)
"main.ml" 787 28921 28927 "main.ml" 787 28921 28939
type(
  out_channel ->
  Cabs.file -> bool -> string -> Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  ext_ref XO.printFile
)
"main.ml" 787 28921 28940 "main.ml" 787 28921 28946
type(
  out_channel
)
ident(
  ext_ref Pervasives.stdout
)
"main.ml" 787 28921 28947 "main.ml" 787 28921 28958
type(
  Cabs.file
)
ident(
  int_ref secondParse "main.ml" 645 24267 24272 "main.ml" 645 24267 24283
)
"main.ml" 787 28921 29017 "main.ml" 787 28921 29022
type(
  bool
)
"main.ml" 787 28921 29023 "main.ml" 787 28921 29029
type(
  string
)
ident(
  int_ref myMode "main.ml" 780 28605 28617 "main.ml" 780 28605 28623
)
"main.ml" 787 28921 28927 "main.ml" 787 28921 29029
call(
  stack
)
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
"main.ml" 786 28870 28878 "main.ml" 787 28921 29030
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
"main.ml" 782 28722 28726 "main.ml" 787 28921 29030
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
"main.ml" 789 29040 29049 "main.ml" 789 29040 29050
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 789 29040 29050 "main.ml" 789 29040 29058
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 789 29040 29049 "main.ml" 789 29040 29058
type(
  string
)
"main.ml" 789 29040 29059 "main.ml" 789 29040 29060
type(
  string -> string -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"main.ml" 789 29040 29061 "main.ml" 789 29040 29063
type(
  string
)
"main.ml" 789 29040 29049 "main.ml" 789 29040 29063
type(
  bool
)
"main.ml" 790 29069 29078 "main.ml" 790 29069 29087
type(
  (Orange.PartialAdapter(Orange.MonList).t -> unit) ->
  Orange.PartialAdapter(Orange.MonList).t list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 790 29069 29093 "main.ml" 790 29069 29094
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  def s "main.ml" 790 29069 29097 "main.ml" 790 29069 29119
)
"main.ml" 790 29069 29097 "main.ml" 790 29069 29109
type(
  string -> unit
)
ident(
  ext_ref Pervasives.print_string
)
"main.ml" 790 29069 29111 "main.ml" 790 29069 29112
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  int_ref s "main.ml" 790 29069 29093 "main.ml" 790 29069 29094
)
"main.ml" 790 29069 29113 "main.ml" 790 29069 29114
type(
  Orange.PartialAdapter(Orange.MonList).t -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 790 29069 29114 "main.ml" 790 29069 29118
type(
  string
)
"main.ml" 790 29069 29110 "main.ml" 790 29069 29119
call(
  stack
)
type(
  string
)
"main.ml" 790 29069 29097 "main.ml" 790 29069 29119
call(
  tail
)
type(
  unit
)
"main.ml" 790 29069 29088 "main.ml" 790 29069 29120
type(
  Orange.PartialAdapter(Orange.MonList).t -> unit
)
"main.ml" 790 29069 29121 "main.ml" 790 29069 29127
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  int_ref result "main.ml" 781 28705 28713 "main.ml" 781 28705 28719
)
"main.ml" 790 29069 29078 "main.ml" 790 29069 29127
call(
  stack
)
type(
  unit
)
"main.ml" 792 29139 29151 "main.ml" 792 29139 29154
type(
  out_channel
)
ident(
  def out "main.ml" 793 29179 29187 "main.ml" 794 29243 29261
)
"main.ml" 792 29139 29157 "main.ml" 792 29139 29165
type(
  string -> out_channel
)
ident(
  ext_ref Pervasives.open_out
)
"main.ml" 792 29139 29166 "main.ml" 792 29139 29167
type(
  string ref -> string
)
ident(
  ext_ref Pervasives.( ! )
)
"main.ml" 792 29139 29167 "main.ml" 792 29139 29175
type(
  string ref
)
ident(
  int_ref out_file "main.ml" 111 4163 4167 "main.ml" 111 4163 4175
)
"main.ml" 792 29139 29166 "main.ml" 792 29139 29175
type(
  string
)
"main.ml" 792 29139 29157 "main.ml" 792 29139 29175
call(
  stack
)
type(
  out_channel
)
"main.ml" 793 29179 29187 "main.ml" 793 29179 29196
type(
  (Orange.PartialAdapter(Orange.MonList).t -> unit) ->
  Orange.PartialAdapter(Orange.MonList).t list -> unit
)
ident(
  ext_ref List.iter
)
"main.ml" 793 29179 29202 "main.ml" 793 29179 29203
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  def s "main.ml" 793 29179 29206 "main.ml" 793 29179 29233
)
"main.ml" 793 29179 29206 "main.ml" 793 29179 29219
type(
  out_channel -> string -> unit
)
ident(
  ext_ref Pervasives.output_string
)
"main.ml" 793 29179 29220 "main.ml" 793 29179 29223
type(
  out_channel
)
ident(
  int_ref out "main.ml" 792 29139 29151 "main.ml" 792 29139 29154
)
"main.ml" 793 29179 29225 "main.ml" 793 29179 29226
type(
  Orange.PartialAdapter(Orange.MonList).t
)
ident(
  int_ref s "main.ml" 793 29179 29202 "main.ml" 793 29179 29203
)
"main.ml" 793 29179 29227 "main.ml" 793 29179 29228
type(
  Orange.PartialAdapter(Orange.MonList).t -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"main.ml" 793 29179 29228 "main.ml" 793 29179 29232
type(
  string
)
"main.ml" 793 29179 29224 "main.ml" 793 29179 29233
call(
  stack
)
type(
  string
)
"main.ml" 793 29179 29206 "main.ml" 793 29179 29233
call(
  tail
)
type(
  unit
)
"main.ml" 793 29179 29197 "main.ml" 793 29179 29234
type(
  Orange.PartialAdapter(Orange.MonList).t -> unit
)
"main.ml" 793 29179 29235 "main.ml" 793 29179 29241
type(
  Orange.PartialAdapter(Orange.MonList).t list
)
ident(
  int_ref result "main.ml" 781 28705 28713 "main.ml" 781 28705 28719
)
"main.ml" 793 29179 29187 "main.ml" 793 29179 29241
call(
  stack
)
type(
  unit
)
"main.ml" 794 29243 29248 "main.ml" 794 29243 29257
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 794 29243 29258 "main.ml" 794 29243 29261
type(
  out_channel
)
ident(
  int_ref out "main.ml" 792 29139 29151 "main.ml" 792 29139 29154
)
"main.ml" 794 29243 29248 "main.ml" 794 29243 29261
call(
  stack
)
type(
  unit
)
"main.ml" 793 29179 29187 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 792 29139 29147 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 789 29040 29046 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 781 28705 28709 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 780 28605 28613 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 774 28326 28332 "main.ml" 794 29243 29261
type(
  unit
)
"main.ml" 769 28173 28206 "main.ml" 795 29262 29269
type(
  unit
)
"main.ml" 765 28069 28078 "main.ml" 795 29262 29269
type(
  unit
)
"main.ml" 657 24616 24617 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 651 24445 24446 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 648 24383 24383 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 645 24267 24268 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 639 24119 24125 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 638 24047 24048 "main.ml" 796 29270 29277
type(
  unit
)
"main.ml" 635 23972 23983 "main.ml" 797 29278 29283
type(
  unit
)
"main.ml" 621 23421 23423 "main.ml" 797 29278 29283
type(
  unit
)
"main.ml" 799 29320 29325 "main.ml" 799 29320 29330
type(
  bool
)
ident(
  int_ref close "main.ml" 468 17725 17739 "main.ml" 468 17725 17744
)
"main.ml" 799 29320 29336 "main.ml" 799 29320 29345
type(
  out_channel -> unit
)
ident(
  ext_ref Pervasives.close_out
)
"main.ml" 799 29320 29346 "main.ml" 799 29320 29352
type(
  out_channel
)
ident(
  int_ref output "main.ml" 468 17725 17731 "main.ml" 468 17725 17737
)
"main.ml" 799 29320 29336 "main.ml" 799 29320 29352
call(
  stack
)
type(
  unit
)
"main.ml" 799 29320 29322 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 621 23421 23423 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 619 23351 23351 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 614 23171 23171 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 611 23058 23059 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 609 22988 22988 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 569 21746 21747 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 567 21649 21649 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 560 21533 21534 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 559 21514 21515 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 551 21294 21295 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 522 20163 20164 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 518 20019 20020 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 489 18416 18418 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 485 18257 18258 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 484 18181 18182 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 482 18092 18093 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 481 18036 18056 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 481 18036 18037 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 480 18007 18009 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 479 17984 17986 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 478 17960 17962 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 477 17916 17918 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 473 17830 17831 "main.ml" 799 29320 29352
type(
  unit
)
"main.ml" 468 17725 17726 "main.ml" 799 29320 29352
type(
  unit
)
