/* Generated by gep (119/02/19 20:43:37) copyright (c) 2008 IRIT - UPS */
#ifndef GLISS_ARM_INCLUDE_ARM_MACROS_H
#define GLISS_ARM_INCLUDE_ARM_MACROS_H

/* state access macros */
#define ARM_BBIT ((state)->BBIT)
#define ARM_PBIT ((state)->PBIT)
#define ARM_LR_SAVED ((state)->LR_saved)
#define ARM_LBIT ((state)->LBIT)
#define ARM_WBIT ((state)->WBIT)
#define ARM_SP_SAVED ((state)->SP_saved)
#define ARM_PSRXMODE ((state)->PSRXMODE)
#define ARM_D ((state)->D)
#define ARM_MSBIT ((state)->MSBIT)
#define ARM_HBIT ((state)->HBIT)
#define ARM_APSR ((state)->APSR)
#define ARM_SPSR ((state)->SPSR)
#define ARM_NPC ((state)->NPC)
#define ARM_RBIT ((state)->RBIT)
#define ARM_PSRFMODE ((state)->PSRFMODE)
#define ARM_S ((state)->S)
#define ARM_GPR ((state)->GPR)
#define ARM_PSRSMODE ((state)->PSRSMODE)
#define ARM_SPSR_SAVED ((state)->SPSR_saved)
#define ARM_IBIT ((state)->IBIT)
#define ARM_B15SET ((state)->B15SET)
#define ARM_R_SAVED ((state)->R_saved)
#define ARM_UBIT ((state)->UBIT)
#define ARM_PSRCMODE ((state)->PSRCMODE)
#define ARM_SBIT ((state)->SBIT)
#define ARM_ITSTATE ((state)->ITSTATE)
#define ARM_FPSCR ((state)->FPSCR)

#define ARM_M ((state)->M)



/* instruction size macros, not used anymore, replaced by more efficient and less costly */
/*#define ARM_UXTAHS_S__S__SS_SIZE	32
#define ARM_UXTAB16S_S__S__SS_SIZE	32
#define ARM_UXTABS_S__S__SS_SIZE	32
#define ARM_USUB8S_S__S__S_SIZE	32
#define ARM_USUB16S_S__S__S_SIZE	32
#define ARM_USAXS_S__S__S_SIZE	32
#define ARM_USATS_S___ID__SS_SIZE	32
#define ARM_USADA8S_S__S__S__S_SIZE	32
#define ARM_UQSUB8S_S__S__S_SIZE	32
#define ARM_UQSUB16S_S__S__S_SIZE	32
#define ARM_UQSAXS_S__S__S_SIZE	32
#define ARM_UQASXS_S__S__S_SIZE	32
#define ARM_UQADD8S_S__S__S_SIZE	32
#define ARM_UQADD16S_S__S__S_SIZE	32
#define ARM_UMULLS_S__S__S__S_SIZE	32
#define ARM_UMLALS_S__S__S__S_SIZE	32
#define ARM_UMAALS_S__S__S__S_SIZE	32
#define ARM_UHSUB8S_S__S__S_SIZE	32
#define ARM_UHSUB16S_S__S__S_SIZE	32
#define ARM_UHSAXS_S__S__S_SIZE	32
#define ARM_UHASXS_S__S__S_SIZE	32
#define ARM_UHADD8S_S__S__S_SIZE	32
#define ARM_UHADD16S_S__S__S_SIZE	32
#define ARM_UDIVS_S__S__S_SIZE	32
#define ARM_UBFXS_S__S___ID___ID_SIZE	32
#define ARM_UASXS_S__S__S_SIZE	32
#define ARM_UADD8S_S__S__S_SIZE	32
#define ARM_UADD16S_S__S__S_SIZE	32
#define ARM_SXTAHS_S__S__SS_SIZE	32
#define ARM_SXTAB16S_S__S__SS_SIZE	32
#define ARM_SXTABS_S__S__SS_SIZE	32
#define ARM_SUBSS_W_S__S__SS_SIZE	32
#define ARM_SUBWS_S__S___ID__SIZE	32
#define ARM_SUBSS_W_S__S___IU_SIZE	32
#define ARM_SSUB8S_S__S__S_SIZE	32
#define ARM_SSUB16S_S__S__S_SIZE	32
#define ARM_SSAXS_S__S__S_SIZE	32
#define ARM_SSATS_S___ID__SS_SIZE	32
#define ARM_SMULLS_S__S__S__S_SIZE	32
#define ARM_SMMLSSS_S__S__S__S_SIZE	32
#define ARM_SMMLASS_S__S__S__S_SIZE	32
#define ARM_SMLSLDSS_S__S__S__S_SIZE	32
#define ARM_SMLSDSS_S__S__S__S_SIZE	32
#define ARM_SMLAWSS_S__S__S__S_SIZE	32
#define ARM_SMLALDSS_S__S__S__S_SIZE	32
#define ARM_SMLALSSS_S__S__S__S_SIZE	32
#define ARM_SMLALS_S__S__S__S_SIZE	32
#define ARM_SMLADSS_S__S__S__S_SIZE	32
#define ARM_SMLASSS_S__S__S__S_SIZE	32
#define ARM_SHSUB8S_S__S__S_SIZE	32
#define ARM_SHSUB16S_S__S__S_SIZE	32
#define ARM_SHSAXS_S__S__S_SIZE	32
#define ARM_SHASXS_S__S__S_SIZE	32
#define ARM_SHADD8S_S__S__S_SIZE	32
#define ARM_SHADD16S_S__S__S_SIZE	32
#define ARM_SELS_S__S__S_SIZE	32
#define ARM_SDIVS_S__S__S_SIZE	32
#define ARM_SBFXS_S__S___ID___ID_SIZE	32
#define ARM_SBCSS_W_S__S__SS_SIZE	32
#define ARM_SBCSS_W_S__S___IU_SIZE	32
#define ARM_SASXS_S__S__S_SIZE	32
#define ARM_SADD8S_S__S__S_SIZE	32
#define ARM_SADD16S_S__S__S_SIZE	32
#define ARM_RSBSS_S__S__SS_SIZE	32
#define ARM_RORSS_W_S__S__S_SIZE	32
#define ARM_REVSHS_W_S__S_SIZE	32
#define ARM_REV16S_W_S__S_SIZE	32
#define ARM_REVS_W_S__S_SIZE	32
#define ARM_RBITS_S__S_SIZE	32
#define ARM_QSUB8S_S__S__S_SIZE	32
#define ARM_QSUB16S_S__S__S_SIZE	32
#define ARM_QSUBS_S__S__S_SIZE	32
#define ARM_QSAXS_S__S__S_SIZE	32
#define ARM_QDSUBS_S__S__S_SIZE	32
#define ARM_QDADDS_S__S__S_SIZE	32
#define ARM_QASXS_S__S__S_SIZE	32
#define ARM_QADD8S_S__S__S_SIZE	32
#define ARM_QADD16S_S__S__S_SIZE	32
#define ARM_QADDS_S__S__S_SIZE	32
#define ARM_PKHBTS_S__S__SS_SIZE	32
#define ARM_ORNSS_S__S__SS_SIZE	32
#define ARM_ORNSS_S__S___IU_SIZE	32
#define ARM_MRRCSS_D__D__S__S__CRD_SIZE	32
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__SIZE	32
#define ARM_MLSS_S__S__S__S_SIZE	32
#define ARM_MLAS_S__S__S__S_SIZE	32
#define ARM_MCRRSS_D__D__S__S__CRD_SIZE	32
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__SIZE	32
#define ARM_LSRSS_W_S__S__S_SIZE	32
#define ARM_LDMDBS_SS___LB_S_RB__SIZE	32
#define ARM_EORSS_W_S__S__SS_SIZE	32
#define ARM_EORSS_W_S__S___IU_SIZE	32
#define ARM_CLZS_S__S_SIZE	32
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__SIZE	32
#define ARM_BICSS_W_S__S__SS_SIZE	32
#define ARM_BICSS_W_S__S___IU_SIZE	32
#define ARM_BFIS_S__S___ID___ID_SIZE	32
#define ARM_BS_W_08X_SIZE	32
#define ARM_BS_W_08X_0_SIZE	32
#define ARM_MOVTS_S___ID_SIZE	32
#define ARM_ORRS_W_S__S__SS_SIZE	32
#define ARM_MOVWS_S___ID_SIZE	32
#define ARM_ORRSS_W_S__S___IU_SIZE	32
#define ARM_ASRSS_W_S__S__S_SIZE	32
#define ARM_ANDSS_W_S__S__SS_SIZE	32
#define ARM_ANDSS_W_S__S___IU_SIZE	32
#define ARM_ADDSS_W_S__S__SS_SIZE	32
#define ARM_ADDWS_S__S___ID__SIZE	32
#define ARM_ADDSS_W_S__S___IU_SIZE	32
#define ARM_ADCSS_W_S__S__SS_SIZE	32
#define ARM_ADCSS_W_S__S___IU_SIZE	32
#define ARM_PLIS__LT_S__S_RT__SIZE	32
#define ARM_PLIS__LT_PC_RT__SIZE	32
#define ARM_PLIS__LT_S_RT__SIZE	32
#define ARM_PLIS__LT_S_RT__0_SIZE	32
#define ARM_PLDSS__LT_S__S_RT__SIZE	32
#define ARM_PLDSS__LT_S_RT__SIZE	32
#define ARM_PLDSS__LT_S_RT__0_SIZE	32
#define ARM_RSBSS_W_S__S___ID_SIZE	32
#define ARM_LSLSS_W_S__S__S_SIZE	32
#define ARM_LDRDS_S__S___LT_SS_SIZE	32
#define ARM_STRDS_S__S___LT_SS_SIZE	32
#define ARM_STREXHS_S__S___LT_S_RT__SIZE	32
#define ARM_STREXBS_S__S__S___LT_S_RT__SIZE	32
#define ARM_STREXBS_S__S___LT_S_RT__SIZE	32
#define ARM_STREXS_S__S___LT_S_RT__SIZE	32
#define ARM_LDREXHS_S___LT_S_RT__SIZE	32
#define ARM_LDREXBS_S___LT_S_RT__SIZE	32
#define ARM_LDREXBS_S___LT_S_RT__0_SIZE	32
#define ARM_LDREXS_S___LT_S_RT__SIZE	32
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB__SIZE	32
#define ARM_LDRSHS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_LDRSHS_S___LT_S___I0XX_RT__SIZE	32
#define ARM_LDRSBS_S___LT_PC_RT__SIZE	32
#define ARM_LDRSBS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_LDRSBS_S___LT_S___I0XX_RT__SIZE	32
#define ARM_LDRBS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_LDRBS_W_S___LT_S___I0XX_RT__SIZE	32
#define ARM_STRBS_S___LT_SS_SIZE	32
#define ARM_STRBS_W_S___LT_S___I0XX_RT__SIZE	32
#define ARM_STRS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_STRS_W_S___LT_S___I0XX_RT__SIZE	32
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__SIZE	32
#define ARM_STRHS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_STRHS_W_S___LT_S_RT__SIZE	32
#define ARM_LDRHS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_LDRHS_W_S___LT_S_RT__SIZE	32
#define ARM_LDRSHS_W_S___LT_S__S_RT__SIZE	32
#define ARM_STRHS_W_S___LT_S__S_RT__SIZE	32
#define ARM_LDRHS_W_S___LT_S__S_RT__SIZE	32
#define ARM_LDRS_S___LT_S_RT____IS0XX_SIZE	32
#define ARM_LDRS_W_S___LT_S___I0XX_RT__SIZE	32
#define ARM_LDRSHTS_S___LT_S_RT__SIZE	32
#define ARM_LDRSBTS_S___LT_S_RT__SIZE	32
#define ARM_STRTS_S___LT_S_RT__SIZE	32
#define ARM_LDRTS_S___LT_S_RT__SIZE	32
#define ARM_STRHTS_S___LT_S_RT__SIZE	32
#define ARM_LDRHTS_S___LT_S_RT__SIZE	32
#define ARM_STRBTS_S___LT_S_RT__SIZE	32
#define ARM_LDRBTS_S___LT_S_RT__SIZE	32
#define ARM_LDRSBS_W_S___LT_S__S_RT__SIZE	32
#define ARM_STRBS_W_S___LT_S__S_RT__SIZE	32
#define ARM_LDRBS_W_S___LT_S__S_RT__SIZE	32
#define ARM_STRS_W_S___LT_S__S_RT__SIZE	32
#define ARM_LDRS_W_S___LT_S__S_RT__SIZE	32
#define ARM_LDC2SS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_LDCSS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_STC2SS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_STCSS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_STCSS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_STCSS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_BLXS_0X08X_SIZE	32
#define ARM_TBBS__LT_S__S_RT__SIZE	32
#define ARM_BLS_0XX_SIZE	32
#define ARM_VSS_F64_DD__DD__DD_SIZE	32
#define ARM_VSS_F32_SD__SD__SD_SIZE	32
#define ARM_VSS_F32_QD__QD__QD_SIZE	32
#define ARM_VSS_F32_DD__DD__DD_SIZE	32
#define ARM_VPOPS__LB_SD_RB__SIZE	32
#define ARM_VPOPS__LB_DD_RB__SIZE	32
#define ARM_VADDS_F64_DD__DD__DD_SIZE	32
#define ARM_VADDS_F32_SD__SD__SD_SIZE	32
#define ARM_VADDS_F32_QD__QD__QD_SIZE	32
#define ARM_VADDS_F32_DD__DD__DD_SIZE	32
#define ARM_VCVTS_F64_S_DD__SD_SIZE	32
#define ARM_VCVTSS_U32_F64_SD__DD_SIZE	32
#define ARM_VCVTS_F32_S_SD__SD_SIZE	32
#define ARM_VPUSHS__LB_SD_RB__SIZE	32
#define ARM_VPUSHS__LB_DD_RB__SIZE	32
#define ARM_VMULS_F64_DD__DD__DD_SIZE	32
#define ARM_VMULS_F32_SD__SD__SD_SIZE	32
#define ARM_VMULS_F32_QD__QD__QD_SIZE	32
#define ARM_VMULS_F32_DD__DD__DD_SIZE	32
#define ARM_VMRSS_S__FPSCR_SIZE	32
#define ARM_VSTRS_SD___LT_S___ISD_RT__SIZE	32
#define ARM_VSTRS_DD___LT_S___ISD_RT__SIZE	32
#define ARM_VLDRS_DD___LT_S___ISD_RT__SIZE	32
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_SIZE	32
#define ARM_VDIVS_F64_DD__DD__DD_SIZE	32
#define ARM_VDIVS_F32_SD__SD__SD_SIZE	32
#define ARM_VSUBS_F64_DD__DD__DD_SIZE	32
#define ARM_VSUBS_F32_SD__SD__SD_SIZE	32
#define ARM_VMOVS_DD__S__S_SIZE	32
#define ARM_VMOVS_SD__S_SIZE	32
#define ARM_VMOVS_F64_DD__DD_SIZE	32
#define ARM_VMOVS_F32_SD__SD_SIZE	32
#define ARM_VMOVS_F64_DD___ID_SIZE	32
#define ARM_VMOVS_F32_SD___ID_SIZE	32
#define ARM_UXTHS_RD__RD_SIZE	16
#define ARM_UXTBS_RD__RD_SIZE	16
#define ARM_YIELDS_SIZE	16
#define ARM_MOVS_S__S_SIZE	16
#define ARM_MOVS_RD___ID_SIZE	16
#define ARM_TSTS_RD__RD_SIZE	16
#define ARM_SXTHS_RD__RD_SIZE	16
#define ARM_SXTBS_RD__RD_SIZE	16
#define ARM_SUBS_RD__RD__RD_SIZE	16
#define ARM_SUBS_SP___ID_SIZE	16
#define ARM_SUBS_RD___ID_SIZE	16
#define ARM_SUBS_RD__RD___ID_SIZE	16
#define ARM_STRHS_RD___LT_RD__RD__RT__SIZE	16
#define ARM_STRHS_RD___LT_RD___I0XX_RT__SIZE	16
#define ARM_STRBS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_STRBS_RD___LT_RD___ID_RT__SIZE	16
#define ARM_STRS_RD___LT_SP___ID_RT__SIZE	16
#define ARM_STRS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_STRS_RD___LT_RD___I0XX_RT__SIZE	16
#define ARM_STMIAS_RD_21___LB_S_RB__SIZE	16
#define ARM_SBCS_RD__RD_SIZE	16
#define ARM_RORS_RD__RD_SIZE	16
#define ARM_REVSHS_RD__RD_SIZE	16
#define ARM_REV16S_RD__RD_SIZE	16
#define ARM_REVS_RD__RD_SIZE	16
#define ARM_PUSHS__LB_SS_RB__SIZE	16
#define ARM_PUSHS__LB_SS_RB__0_SIZE	16
#define ARM_POPS__LB_SS_RB__SIZE	16
#define ARM_POPS__LB_SS_RB__0_SIZE	16
#define ARM_ORRS_RD__RD_SIZE	16
#define ARM_RSBS_RD__RD___I0_SIZE	16
#define ARM_MVNS_RD__RD_SIZE	16
#define ARM_MULS_RD__RD_SIZE	16
#define ARM_LSRS_RD__RD_SIZE	16
#define ARM_LSRS_RD__RD___ID_SIZE	16
#define ARM_LSLS_RD__RD_SIZE	16
#define ARM_LSLS_RD__RD___ID_SIZE	16
#define ARM_LDRSHS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_LDRSBS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_LDRHS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_LDRHS_RD___LT_RD___I0XX_RT__SIZE	16
#define ARM_LDRBS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_LDRBS_RD___LT_RD___ID_RT__SIZE	16
#define ARM_LDRS_RD___LT_SP___I0XX_RT__SIZE	16
#define ARM_LDRS_RD___LT_PC___I0XX_RT__SIZE	16
#define ARM_LDRS_RD___LT_RD__RD_RT__SIZE	16
#define ARM_LDRS_RD___LT_RD___I0XX_RT__SIZE	16
#define ARM_LDMIAS_RD___LB_S_RB__SIZE	16
#define ARM_EORS_RD__RD_SIZE	16
#define ARM_CMPS_RD__S_SIZE	16
#define ARM_CMPS_RD__RD_SIZE	16
#define ARM_CMPS_RD___ID_SIZE	16
#define ARM_CMNS_RD__RD_SIZE	16
#define ARM_CBZS_RD__D_SIZE	16
#define ARM_BXS_S_SIZE	16
#define ARM_BLXS_S_SIZE	16
#define ARM_BKPT__ID_SIZE	16
#define ARM_BICS_RD__RD_SIZE	16
#define ARM_BS_N__40_SIZE	16
#define ARM_S_N_08X_SIZE	16
#define ARM_ASRS_RD__RD_SIZE	16
#define ARM_ASRS_RD__RD___ID_SIZE	16
#define ARM_ANDS_RD__RD_SIZE	16
#define ARM_ADDS_S__S_SIZE	16
#define ARM_ADDS_RD__RD__RD_SIZE	16
#define ARM_ADDS_SP__SP___ID_SIZE	16
#define ARM_ADDS_RD__SP___ID_SIZE	16
#define ARM_ADDS_RD__PC___ID_SIZE	16
#define ARM_ADDS_RD___ID_SIZE	16
#define ARM_ADDS_RD__RD___ID_SIZE	16
#define ARM_ADCS_RD__RD_SIZE	16
#define ARM_MRCS_D__D__S__CRD__CRD__D_SIZE	32
#define ARM_LDCSSS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_STCSSS_D__D___LT_RD_RT___D_SIZE	32
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_SIZE	32
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_SIZE	32
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__SIZE	32
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_SIZE	32
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_SIZE	32
#define ARM_VSTMSSS_SS___LB_S_RB__SIZE	32
#define ARM_VSTMSSS_SS___LB_S_RB__0_SIZE	32
#define ARM_VSTMSSS_SS___LB_S_RB__1_SIZE	32
#define ARM_VSTMSSS_SS___LB_S_RB__2_SIZE	32
#define ARM_VMULS_F64_DD__DD__DD_0_SIZE	32
#define ARM_VMULS_F32_SD__SD__SD_0_SIZE	32
#define ARM_VMUL_F32_QD__QD__QD_SIZE	32
#define ARM_VMUL_F32_DD__DD__DD_SIZE	32
#define ARM_VMOVS_DD__S__S_0_SIZE	32
#define ARM_VMOVS_SD__S_0_SIZE	32
#define ARM_VMOVS_F64_DD__DD_0_SIZE	32
#define ARM_VMOVS_F32_SD__SD_0_SIZE	32
#define ARM_VMOVS_F64_DD___ID_0_SIZE	32
#define ARM_VMOVS_F32_SD___ID_0_SIZE	32
#define ARM_VSS_F64_DD__DD__DD_0_SIZE	32
#define ARM_VSS_F32_SD__SD__SD_0_SIZE	32
#define ARM_VS_F32_QD__QD__QD_SIZE	32
#define ARM_VS_F32_DD__DD__DD_SIZE	32
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_SIZE	32
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_SIZE	32
#define ARM_VLDMDBS_S_21___LB_S_RB__SIZE	32
#define ARM_VLDMIAS_SS___LB_S_RB__SIZE	32
#define ARM_VLDMDBS_S_21___LB_S_RB__0_SIZE	32
#define ARM_VLDMIAS_SS___LB_S_RB__0_SIZE	32
#define ARM_VDIVS_F64_DD__DD__DD_0_SIZE	32
#define ARM_VDIVS_F32_SD__SD__SD_0_SIZE	32
#define ARM_VCVT_FD_FD_S__S_SIZE	32
#define ARM_VCVTSS_S_S_S_S_SIZE	32
#define ARM_VADDS_F64_DD__DD__DD_0_SIZE	32
#define ARM_VADDS_F32_SD__SD__SD_0_SIZE	32
#define ARM_VADD_F32_QD__QD__QD_SIZE	32
#define ARM_VADD_F32_DD__DD__DD_SIZE	32
#define ARM_DMB_S_SIZE	32
#define ARM_MRSS_S__CPSR_SIZE	32
#define ARM_MRSS_S__SPSR_SIZE	32
#define ARM_MSRS_CPSR___S_SIZE	32
#define ARM_MSRS_CPSR_FSXC__S_SIZE	32
#define ARM_MSRS_CPSR_SXC__S_SIZE	32
#define ARM_MSRS_CPSR_FXC__S_SIZE	32
#define ARM_MSRS_CPSR_FSX__S_SIZE	32
#define ARM_MSRS_CPSR_XC__S_SIZE	32
#define ARM_MSRS_CPSR_SC__S_SIZE	32
#define ARM_MSRS_CPSR_SX__S_SIZE	32
#define ARM_MSRS_CPSR_F__S_SIZE	32
#define ARM_MSRS_CPSR_FX__S_SIZE	32
#define ARM_MSRS_CPSR_FS__S_SIZE	32
#define ARM_MSRS_CPSR_C__S_SIZE	32
#define ARM_MSRS_CPSR_X__S_SIZE	32
#define ARM_MSRS_CPSR_S__S_SIZE	32
#define ARM_MSRS_CPSR_F__S_0_SIZE	32
#define ARM_MSRS_SPSR___S_SIZE	32
#define ARM_MSRS_SPSR_FSXC__S_SIZE	32
#define ARM_MSRS_SPSR_SXC__S_SIZE	32
#define ARM_MSRS_SPSR_FXC__S_SIZE	32
#define ARM_MSRS_SPSR_FSX__S_SIZE	32
#define ARM_MSRS_SPSR_XC__S_SIZE	32
#define ARM_MSRS_SPSR_SC__S_SIZE	32
#define ARM_MSRS_SPSR_SX__S_SIZE	32
#define ARM_MSRS_SPSR_F__S_SIZE	32
#define ARM_MSRS_SPSR_FX__S_SIZE	32
#define ARM_MSRS_SPSR_FS__S_SIZE	32
#define ARM_MSRS_SPSR_C__S_SIZE	32
#define ARM_MSRS_SPSR_X__S_SIZE	32
#define ARM_MSRS_SPSR_S__S_SIZE	32
#define ARM_MSRS_SPSR_F__S_0_SIZE	32
#define ARM_MSRS_CPSR____ID_SIZE	32
#define ARM_MSRS_CPSR_FSXC___ID_SIZE	32
#define ARM_MSRS_CPSR_SXC___ID_SIZE	32
#define ARM_MSRS_CPSR_FXC___ID_SIZE	32
#define ARM_MSRS_CPSR_FSX___ID_SIZE	32
#define ARM_MSRS_CPSR_XC___ID_SIZE	32
#define ARM_MSRS_CPSR_SC___ID_SIZE	32
#define ARM_MSRS_CPSR_SX___ID_SIZE	32
#define ARM_MSRS_CPSR_F___ID_SIZE	32
#define ARM_MSRS_CPSR_FX___ID_SIZE	32
#define ARM_MSRS_CPSR_FS___ID_SIZE	32
#define ARM_MSRS_CPSR_C___ID_SIZE	32
#define ARM_MSRS_CPSR_X___ID_SIZE	32
#define ARM_MSRS_CPSR_S___ID_SIZE	32
#define ARM_MSRS_CPSR_F___ID_0_SIZE	32
#define ARM_MSRS_SPSR____ID_SIZE	32
#define ARM_MSRS_SPSR_FSXC___ID_SIZE	32
#define ARM_MSRS_SPSR_SXC___ID_SIZE	32
#define ARM_MSRS_SPSR_FXC___ID_SIZE	32
#define ARM_MSRS_SPSR_FSX___ID_SIZE	32
#define ARM_MSRS_SPSR_XC___ID_SIZE	32
#define ARM_MSRS_SPSR_SC___ID_SIZE	32
#define ARM_MSRS_SPSR_SX___ID_SIZE	32
#define ARM_MSRS_SPSR_F___ID_SIZE	32
#define ARM_MSRS_SPSR_FX___ID_SIZE	32
#define ARM_MSRS_SPSR_FS___ID_SIZE	32
#define ARM_MSRS_SPSR_C___ID_SIZE	32
#define ARM_MSRS_SPSR_X___ID_SIZE	32
#define ARM_MSRS_SPSR_S___ID_SIZE	32
#define ARM_MSRS_SPSR_F___ID_0_SIZE	32
#define ARM_CDPSS_D__D__D__D__D__D_SIZE	32
#define ARM_BFIS_S___ID___ID_SIZE	32
#define ARM_CLZS_S__S_0_SIZE	32
#define ARM_SWPS_S__S___LT_S_RT__SIZE	32
#define ARM_SWPSB_S__S___LT_S_RT__SIZE	32
#define ARM_UMLALSS_S__S__S__S_SIZE	32
#define ARM_SMLALSS_S__S__S__S_SIZE	32
#define ARM_UMULLSS_S__S__S__S_SIZE	32
#define ARM_SMULLSS_S__S__S__S_SIZE	32
#define ARM_MULSS_S__S__S_SIZE	32
#define ARM_MLASS_S__S__S__S_SIZE	32
#define ARM_SWIS_D_SIZE	32
#define ARM_LDMSS_SS___LB_S_RB_S_SIZE	32
#define ARM_STMSS_SS___LB_S_RB_S_SIZE	32
#define ARM_STREXHS_S__S___LT_S_RT__0_SIZE	32
#define ARM_STREXDS_S__S___LT_S_RT__SIZE	32
#define ARM_STREXBS_S__S___LT_S_RT__0_SIZE	32
#define ARM_STREXS_S__S___LT_S_RT__0_SIZE	32
#define ARM_LDREXHS_S___LT_S_RT__0_SIZE	32
#define ARM_LDREXDS_S___LT_S_RT__SIZE	32
#define ARM_LDREXBS_S___LT_S_RT__1_SIZE	32
#define ARM_LDREXS_S___LT_S_RT__0_SIZE	32
#define ARM_STRDS_S___LT_SS__S_IUSS_SIZE	32
#define ARM_LDRSSH_S___LT_SS__SSSS_SIZE	32
#define ARM_LDRSSH_S___LT_SS__S_IUSS_SIZE	32
#define ARM_LDRSSB_S___LT_SS__SSSS_SIZE	32
#define ARM_LDRSSB_S___LT_SS__S_IUSS_SIZE	32
#define ARM_LDRSH_S___LT_SS__SSSS_SIZE	32
#define ARM_LDRSH_S___LT_SS__S_IUSS_SIZE	32
#define ARM_STRHS_S___LT_SS__SSSS_SIZE	32
#define ARM_STRHS_S___LT_SS__S_IUSS_SIZE	32
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_SIZE	32
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_SIZE	32
#define ARM_STRSSS_S___LT_SS__S_IDSS_SIZE	32
#define ARM_LDRSSS_S___LT_SS__S_IDSS_SIZE	32
#define ARM_BSS__40_SIZE	32
#define ARM_BLXS_S_0_SIZE	32
#define ARM_BXS_S_0_SIZE	32
#define ARM_MOVS_S___ID_SIZE	32
#define ARM_MOVTS_S___ID_0_SIZE	32
#define ARM_TSTS_S___ID_SIZE	32
#define ARM_TSTS_S__S__S_S_SIZE	32
#define ARM_TSTS_S__S_SIZE	32
#define ARM_TEQS_S___ID_SIZE	32
#define ARM_TEQS_S__S__S_S_SIZE	32
#define ARM_TEQS_S__S_SIZE	32
#define ARM_SUBSS_S__S___ID_SIZE	32
#define ARM_SUBSS_S__S__S__S_S_SIZE	32
#define ARM_SUBSS_S__S__S_SIZE	32
#define ARM_SBCSS_S__S___ID_SIZE	32
#define ARM_SBCSS_S__S__S__S_S_SIZE	32
#define ARM_SBCSS_S__S__S_SIZE	32
#define ARM_RSCSS_S__S___ID_SIZE	32
#define ARM_RSCSS_S__S__S__S_S_SIZE	32
#define ARM_RSCSS_S__S__S_SIZE	32
#define ARM_RSBSS_S__S___ID_SIZE	32
#define ARM_RSBSS_S__S__S__S_S_SIZE	32
#define ARM_RSBSS_S__S__S_SIZE	32
#define ARM_ORRSS_S__S___ID_SIZE	32
#define ARM_ORRSS_S__S__S__S_S_SIZE	32
#define ARM_ORRSS_S__S__S_SIZE	32
#define ARM_MVNSS_S___ID_SIZE	32
#define ARM_MVNSS_S__S__S_S_SIZE	32
#define ARM_MVNSS_S__S_SIZE	32
#define ARM_MOVSS_S___ID_SIZE	32
#define ARM_MOVSS_S__S__S_S_SIZE	32
#define ARM_MOVSS_S__S_SIZE	32
#define ARM_EORSS_S__S___ID_SIZE	32
#define ARM_EORSS_S__S__S__S_S_SIZE	32
#define ARM_EORSS_S__S__S_SIZE	32
#define ARM_CMPS_S___ID_SIZE	32
#define ARM_CMPS_S__S__S_S_SIZE	32
#define ARM_CMPS_S__S_SIZE	32
#define ARM_CMNS_S___ID_SIZE	32
#define ARM_CMNS_S__S__S_S_SIZE	32
#define ARM_CMNS_S__S_SIZE	32
#define ARM_BICSS_S__S___ID_SIZE	32
#define ARM_BICSS_S__S__S__S_S_SIZE	32
#define ARM_BICSS_S__S__S_SIZE	32
#define ARM_ANDSS_S__S___ID_SIZE	32
#define ARM_ANDSS_S__S__S__S_S_SIZE	32
#define ARM_ANDSS_S__S__S_SIZE	32
#define ARM_ADDSS_S__S__S__S_S_SIZE	32
#define ARM_ADDSS_S__S__S_SIZE	32
#define ARM_ADCSS_S__S___ID_SIZE	32
#define ARM_ADCSS_S__S__S__S_S_SIZE	32
#define ARM_ADCSS_S__S__S_SIZE	32
#define ARM_ADDSS_S__S___ID_SIZE	32
*/


/* parameter access and instruction size macros */
#define ARM_UNKNOWN___IADDR			((inst)->addr)
#define ARM_UNKNOWN___ISIZE			16
#define ARM_UXTAHS_S__S__SS___IADDR		((inst)->addr)
#define ARM_UXTAHS_S__S__SS___ISIZE		32
#define ARM_UXTAHS_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UXTAHS_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_UXTAHS_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_UXTAHS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_UXTAB16S_S__S__SS___IADDR		((inst)->addr)
#define ARM_UXTAB16S_S__S__SS___ISIZE		32
#define ARM_UXTAB16S_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UXTAB16S_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_UXTAB16S_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_UXTAB16S_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_UXTABS_S__S__SS___IADDR		((inst)->addr)
#define ARM_UXTABS_S__S__SS___ISIZE		32
#define ARM_UXTABS_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UXTABS_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_UXTABS_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_UXTABS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_USUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_USUB8S_S__S__S___ISIZE		32
#define ARM_USUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_USUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_USUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_USUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_USUB16S_S__S__S___ISIZE		32
#define ARM_USUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_USUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_USUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_USAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_USAXS_S__S__S___ISIZE		32
#define ARM_USAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_USAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_USAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_USATS_S___ID__SS___IADDR		((inst)->addr)
#define ARM_USATS_S___ID__SS___ISIZE		32
#define ARM_USATS_S___ID__SS_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_USATS_S___ID__SS_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_USATS_S___ID__SS_i_x_sh		((inst)->instrinput[2].val.uint8)
#define ARM_USATS_S___ID__SS_i_x_imm2		((inst)->instrinput[3].val.uint8)
#define ARM_USATS_S___ID__SS_i_x_sat_imm		((inst)->instrinput[4].val.uint8)
#define ARM_USATS_S___ID__SS_i_x_imm3		((inst)->instrinput[5].val.uint8)
#define ARM_USADA8S_S__S__S__S___IADDR		((inst)->addr)
#define ARM_USADA8S_S__S__S__S___ISIZE		32
#define ARM_USADA8S_S__S__S__S_i_x_ra_r		((inst)->instrinput[0].val.uint8)
#define ARM_USADA8S_S__S__S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_USADA8S_S__S__S__S_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_USADA8S_S__S__S__S_i_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_UQSUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_UQSUB8S_S__S__S___ISIZE		32
#define ARM_UQSUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQSUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQSUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UQSUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_UQSUB16S_S__S__S___ISIZE		32
#define ARM_UQSUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQSUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQSUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UQSAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_UQSAXS_S__S__S___ISIZE		32
#define ARM_UQSAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQSAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQSAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UQASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_UQASXS_S__S__S___ISIZE		32
#define ARM_UQASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UQADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_UQADD8S_S__S__S___ISIZE		32
#define ARM_UQADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UQADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_UQADD16S_S__S__S___ISIZE		32
#define ARM_UQADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UQADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UQADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMULLS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_UMULLS_S__S__S__S___ISIZE		32
#define ARM_UMULLS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_UMULLS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UMULLS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMULLS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[3].val.uint8)
#define ARM_UMLALS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_UMLALS_S__S__S__S___ISIZE		32
#define ARM_UMLALS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_UMLALS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UMLALS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMLALS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[3].val.uint8)
#define ARM_UMAALS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_UMAALS_S__S__S__S___ISIZE		32
#define ARM_UMAALS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_UMAALS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UMAALS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMAALS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[3].val.uint8)
#define ARM_UHSUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_UHSUB8S_S__S__S___ISIZE		32
#define ARM_UHSUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHSUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHSUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UHSUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_UHSUB16S_S__S__S___ISIZE		32
#define ARM_UHSUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHSUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHSUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UHSAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_UHSAXS_S__S__S___ISIZE		32
#define ARM_UHSAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHSAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHSAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UHASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_UHASXS_S__S__S___ISIZE		32
#define ARM_UHASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UHADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_UHADD8S_S__S__S___ISIZE		32
#define ARM_UHADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UHADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_UHADD16S_S__S__S___ISIZE		32
#define ARM_UHADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UHADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UHADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UDIVS_S__S__S___IADDR		((inst)->addr)
#define ARM_UDIVS_S__S__S___ISIZE		32
#define ARM_UDIVS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UDIVS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UDIVS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UBFXS_S__S___ID___ID___IADDR		((inst)->addr)
#define ARM_UBFXS_S__S___ID___ID___ISIZE		32
#define ARM_UBFXS_S__S___ID___ID_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UBFXS_S__S___ID___ID_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UBFXS_S__S___ID___ID_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_UBFXS_S__S___ID___ID_i_x_widthm1		((inst)->instrinput[3].val.uint8)
#define ARM_UBFXS_S__S___ID___ID_i_x_imm2		((inst)->instrinput[4].val.uint8)
#define ARM_UASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_UASXS_S__S__S___ISIZE		32
#define ARM_UASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_UADD8S_S__S__S___ISIZE		32
#define ARM_UADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_UADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_UADD16S_S__S__S___ISIZE		32
#define ARM_UADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_UADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_UADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SXTAHS_S__S__SS___IADDR		((inst)->addr)
#define ARM_SXTAHS_S__S__SS___ISIZE		32
#define ARM_SXTAHS_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SXTAHS_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_SXTAHS_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_SXTAHS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_SXTAB16S_S__S__SS___IADDR		((inst)->addr)
#define ARM_SXTAB16S_S__S__SS___ISIZE		32
#define ARM_SXTAB16S_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SXTAB16S_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_SXTAB16S_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_SXTAB16S_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_SXTABS_S__S__SS___IADDR		((inst)->addr)
#define ARM_SXTABS_S__S__SS___ISIZE		32
#define ARM_SXTABS_S__S__SS_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SXTABS_S__S__SS_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_SXTABS_S__S__SS_i_x_rotate		((inst)->instrinput[2].val.uint8)
#define ARM_SXTABS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_SUBSS_W_S__S__SS___ISIZE		32
#define ARM_SUBSS_W_S__S__SS_i_x_t		((inst)->instrinput[0].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_SUBSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_SUBWS_S__S___ID____IADDR		((inst)->addr)
#define ARM_SUBWS_S__S___ID____ISIZE		32
#define ARM_SUBWS_S__S___ID__i_x_i		((inst)->instrinput[0].val.uint8)
#define ARM_SUBWS_S__S___ID__i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_SUBWS_S__S___ID__i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_SUBWS_S__S___ID__i_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_SUBWS_S__S___ID__i_x_imm3		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_SUBSS_W_S__S___IU___ISIZE		32
#define ARM_SUBSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_SUBSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_SUBSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_SUBSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_SSUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_SSUB8S_S__S__S___ISIZE		32
#define ARM_SSUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SSUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SSUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SSUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_SSUB16S_S__S__S___ISIZE		32
#define ARM_SSUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SSUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SSUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SSAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_SSAXS_S__S__S___ISIZE		32
#define ARM_SSAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SSAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SSAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SSATS_S___ID__SS___IADDR		((inst)->addr)
#define ARM_SSATS_S___ID__SS___ISIZE		32
#define ARM_SSATS_S___ID__SS_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SSATS_S___ID__SS_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_SSATS_S___ID__SS_i_x_sh		((inst)->instrinput[2].val.uint8)
#define ARM_SSATS_S___ID__SS_i_x_imm2		((inst)->instrinput[3].val.uint8)
#define ARM_SSATS_S___ID__SS_i_x_sat_imm		((inst)->instrinput[4].val.uint8)
#define ARM_SSATS_S___ID__SS_i_x_imm3		((inst)->instrinput[5].val.uint8)
#define ARM_SMULLS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMULLS_S__S__S__S___ISIZE		32
#define ARM_SMULLS_S__S__S__S_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMULLS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMULLS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMULLS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMMLSSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMMLSSS_S__S__S__S___ISIZE		32
#define ARM_SMMLSSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMMLSSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMMLSSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMMLSSS_S__S__S__S_i_x_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMMLSSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMMLASS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMMLASS_S__S__S__S___ISIZE		32
#define ARM_SMMLASS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMMLASS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMMLASS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMMLASS_S__S__S__S_i_x_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMMLASS_S__S__S__S_i_x_ra_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLSLDSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLSLDSS_S__S__S__S___ISIZE		32
#define ARM_SMLSLDSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLSLDSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLSLDSS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLSLDSS_S__S__S__S_i_x_m		((inst)->instrinput[3].val.uint8)
#define ARM_SMLSLDSS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLSDSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLSDSS_S__S__S__S___ISIZE		32
#define ARM_SMLSDSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLSDSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLSDSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLSDSS_S__S__S__S_i_x_m		((inst)->instrinput[3].val.uint8)
#define ARM_SMLSDSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLAWSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLAWSS_S__S__S__S___ISIZE		32
#define ARM_SMLAWSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLAWSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLAWSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLAWSS_S__S__S__S_i_x_m		((inst)->instrinput[3].val.uint8)
#define ARM_SMLAWSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLALDSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLALDSS_S__S__S__S___ISIZE		32
#define ARM_SMLALDSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLALDSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLALDSS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLALDSS_S__S__S__S_i_x_m		((inst)->instrinput[3].val.uint8)
#define ARM_SMLALDSS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLALSSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLALSSS_S__S__S__S___ISIZE		32
#define ARM_SMLALSSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLALSSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLALSSS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLALSSS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMLALSSS_S__S__S__S_i_x_m		((inst)->instrinput[4].val.uint8)
#define ARM_SMLALSSS_S__S__S__S_i_x_n		((inst)->instrinput[5].val.uint8)
#define ARM_SMLALS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLALS_S__S__S__S___ISIZE		32
#define ARM_SMLALS_S__S__S__S_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLALS_S__S__S__S_i_x_rdlo_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLALS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLALS_S__S__S__S_i_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMLADSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLADSS_S__S__S__S___ISIZE		32
#define ARM_SMLADSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLADSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLADSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLADSS_S__S__S__S_i_x_m		((inst)->instrinput[3].val.uint8)
#define ARM_SMLADSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[4].val.uint8)
#define ARM_SMLASSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLASSS_S__S__S__S___ISIZE		32
#define ARM_SMLASSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLASSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLASSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLASSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMLASSS_S__S__S__S_i_x_m		((inst)->instrinput[4].val.uint8)
#define ARM_SMLASSS_S__S__S__S_i_x_n		((inst)->instrinput[5].val.uint8)
#define ARM_SHSUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_SHSUB8S_S__S__S___ISIZE		32
#define ARM_SHSUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHSUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHSUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SHSUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_SHSUB16S_S__S__S___ISIZE		32
#define ARM_SHSUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHSUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHSUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SHSAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_SHSAXS_S__S__S___ISIZE		32
#define ARM_SHSAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHSAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHSAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SHASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_SHASXS_S__S__S___ISIZE		32
#define ARM_SHASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SHADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_SHADD8S_S__S__S___ISIZE		32
#define ARM_SHADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SHADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_SHADD16S_S__S__S___ISIZE		32
#define ARM_SHADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SHADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SHADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SELS_S__S__S___IADDR		((inst)->addr)
#define ARM_SELS_S__S__S___ISIZE		32
#define ARM_SELS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SELS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SELS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SDIVS_S__S__S___IADDR		((inst)->addr)
#define ARM_SDIVS_S__S__S___ISIZE		32
#define ARM_SDIVS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SDIVS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SDIVS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SBFXS_S__S___ID___ID___IADDR		((inst)->addr)
#define ARM_SBFXS_S__S___ID___ID___ISIZE		32
#define ARM_SBFXS_S__S___ID___ID_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SBFXS_S__S___ID___ID_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SBFXS_S__S___ID___ID_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_SBFXS_S__S___ID___ID_i_x_widthm1		((inst)->instrinput[3].val.uint8)
#define ARM_SBFXS_S__S___ID___ID_i_x_imm2		((inst)->instrinput[4].val.uint8)
#define ARM_SBCSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_SBCSS_W_S__S__SS___ISIZE		32
#define ARM_SBCSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[0].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_t		((inst)->instrinput[1].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_SBCSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_SBCSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_SBCSS_W_S__S___IU___ISIZE		32
#define ARM_SBCSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_SBCSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_SBCSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_SBCSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_SBCSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_SBCSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_SASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_SASXS_S__S__S___ISIZE		32
#define ARM_SASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_SADD8S_S__S__S___ISIZE		32
#define ARM_SADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_SADD16S_S__S__S___ISIZE		32
#define ARM_SADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_SADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_S__S__SS___IADDR		((inst)->addr)
#define ARM_RSBSS_S__S__SS___ISIZE		32
#define ARM_RSBSS_S__S__SS_i_x_imm2		((inst)->instrinput[0].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_t		((inst)->instrinput[1].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_RSBSS_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_RORSS_W_S__S__S___IADDR		((inst)->addr)
#define ARM_RORSS_W_S__S__S___ISIZE		32
#define ARM_RORSS_W_S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_RORSS_W_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_RORSS_W_S__S__S_i_x_S_set		((inst)->instrinput[2].val.uint8)
#define ARM_RORSS_W_S__S__S_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_REVSHS_W_S__S___IADDR		((inst)->addr)
#define ARM_REVSHS_W_S__S___ISIZE		32
#define ARM_REVSHS_W_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_REVSHS_W_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_REV16S_W_S__S___IADDR		((inst)->addr)
#define ARM_REV16S_W_S__S___ISIZE		32
#define ARM_REV16S_W_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_REV16S_W_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_REVS_W_S__S___IADDR		((inst)->addr)
#define ARM_REVS_W_S__S___ISIZE		32
#define ARM_REVS_W_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_REVS_W_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_RBITS_S__S___IADDR		((inst)->addr)
#define ARM_RBITS_S__S___ISIZE		32
#define ARM_RBITS_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_RBITS_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_QSUB8S_S__S__S___IADDR		((inst)->addr)
#define ARM_QSUB8S_S__S__S___ISIZE		32
#define ARM_QSUB8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QSUB8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QSUB8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QSUB16S_S__S__S___IADDR		((inst)->addr)
#define ARM_QSUB16S_S__S__S___ISIZE		32
#define ARM_QSUB16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QSUB16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QSUB16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QSUBS_S__S__S___IADDR		((inst)->addr)
#define ARM_QSUBS_S__S__S___ISIZE		32
#define ARM_QSUBS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QSUBS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QSUBS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QSAXS_S__S__S___IADDR		((inst)->addr)
#define ARM_QSAXS_S__S__S___ISIZE		32
#define ARM_QSAXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QSAXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QSAXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QDSUBS_S__S__S___IADDR		((inst)->addr)
#define ARM_QDSUBS_S__S__S___ISIZE		32
#define ARM_QDSUBS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QDSUBS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QDSUBS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QDADDS_S__S__S___IADDR		((inst)->addr)
#define ARM_QDADDS_S__S__S___ISIZE		32
#define ARM_QDADDS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QDADDS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QDADDS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QASXS_S__S__S___IADDR		((inst)->addr)
#define ARM_QASXS_S__S__S___ISIZE		32
#define ARM_QASXS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QASXS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QASXS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QADD8S_S__S__S___IADDR		((inst)->addr)
#define ARM_QADD8S_S__S__S___ISIZE		32
#define ARM_QADD8S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QADD8S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QADD8S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QADD16S_S__S__S___IADDR		((inst)->addr)
#define ARM_QADD16S_S__S__S___ISIZE		32
#define ARM_QADD16S_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QADD16S_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QADD16S_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_QADDS_S__S__S___IADDR		((inst)->addr)
#define ARM_QADDS_S__S__S___ISIZE		32
#define ARM_QADDS_S__S__S_i_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_QADDS_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_QADDS_S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_PKHBTS_S__S__SS___IADDR		((inst)->addr)
#define ARM_PKHBTS_S__S__SS___ISIZE		32
#define ARM_PKHBTS_S__S__SS_i_x_tb		((inst)->instrinput[0].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_T		((inst)->instrinput[1].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_imm3		((inst)->instrinput[3].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_rm_r		((inst)->instrinput[5].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_S_set		((inst)->instrinput[6].val.uint8)
#define ARM_PKHBTS_S__S__SS_i_x_rd_r		((inst)->instrinput[7].val.uint8)
#define ARM_ORNSS_S__S__SS___IADDR		((inst)->addr)
#define ARM_ORNSS_S__S__SS___ISIZE		32
#define ARM_ORNSS_S__S__SS_i_x_imm2		((inst)->instrinput[0].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_t		((inst)->instrinput[1].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ORNSS_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_ORNSS_S__S___IU___IADDR		((inst)->addr)
#define ARM_ORNSS_S__S___IU___ISIZE		32
#define ARM_ORNSS_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_ORNSS_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_ORNSS_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ORNSS_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORNSS_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_ORNSS_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD___IADDR		((inst)->addr)
#define ARM_MRRCSS_D__D__S__S__CRD___ISIZE		32
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_opc1		((inst)->instrinput[0].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_CRm		((inst)->instrinput[1].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_rt2_r		((inst)->instrinput[3].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_mrrc		((inst)->instrinput[4].val.uint8)
#define ARM_MRRCSS_D__D__S__S__CRD_i_x_coproc		((inst)->instrinput[5].val.uint32)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB____IADDR		((inst)->addr)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB____ISIZE		32
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_opc1		((inst)->instrinput[0].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_opc2		((inst)->instrinput[1].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_CRn		((inst)->instrinput[2].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_CRm		((inst)->instrinput[3].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_rt_r		((inst)->instrinput[4].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_mrc		((inst)->instrinput[5].val.uint8)
#define ARM_MRCSS_D__D__S__CRD__CRD___LB_D_RB__i_x_coproc		((inst)->instrinput[6].val.uint32)
#define ARM_MLSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_MLSS_S__S__S__S___ISIZE		32
#define ARM_MLSS_S__S__S__S_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_MLSS_S__S__S__S_i_x_ra_r		((inst)->instrinput[1].val.uint8)
#define ARM_MLSS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_MLSS_S__S__S__S_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_MLAS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_MLAS_S__S__S__S___ISIZE		32
#define ARM_MLAS_S__S__S__S_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_MLAS_S__S__S__S_i_x_ra_r		((inst)->instrinput[1].val.uint8)
#define ARM_MLAS_S__S__S__S_i_x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_MLAS_S__S__S__S_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD___IADDR		((inst)->addr)
#define ARM_MCRRSS_D__D__S__S__CRD___ISIZE		32
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_opc1		((inst)->instrinput[0].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_CRm		((inst)->instrinput[1].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_rt2_r		((inst)->instrinput[3].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_mcrr		((inst)->instrinput[4].val.uint8)
#define ARM_MCRRSS_D__D__S__S__CRD_i_x_coproc		((inst)->instrinput[5].val.uint32)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB____IADDR		((inst)->addr)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB____ISIZE		32
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_opc1		((inst)->instrinput[0].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_opc2		((inst)->instrinput[1].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_CRn		((inst)->instrinput[2].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_CRm		((inst)->instrinput[3].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_rt_r		((inst)->instrinput[4].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_mcr		((inst)->instrinput[5].val.uint8)
#define ARM_MCRSS_D__D__S__CRD__CRD___LB_D_RB__i_x_coproc		((inst)->instrinput[6].val.uint32)
#define ARM_LSRSS_W_S__S__S___IADDR		((inst)->addr)
#define ARM_LSRSS_W_S__S__S___ISIZE		32
#define ARM_LSRSS_W_S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_LSRSS_W_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LSRSS_W_S__S__S_i_x_S_set		((inst)->instrinput[2].val.uint8)
#define ARM_LSRSS_W_S__S__S_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDMDBS_SS___LB_S_RB____IADDR		((inst)->addr)
#define ARM_LDMDBS_SS___LB_S_RB____ISIZE		32
#define ARM_LDMDBS_SS___LB_S_RB__i_x_llist_r		((inst)->instrinput[0].val.uint16)
#define ARM_LDMDBS_SS___LB_S_RB__i_x_W		((inst)->instrinput[1].val.uint8)
#define ARM_LDMDBS_SS___LB_S_RB__i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDMDBS_SS___LB_S_RB__i_x_M		((inst)->instrinput[3].val.uint8)
#define ARM_LDMDBS_SS___LB_S_RB__i_x_P		((inst)->instrinput[4].val.uint8)
#define ARM_EORSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_EORSS_W_S__S__SS___ISIZE		32
#define ARM_EORSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_t		((inst)->instrinput[2].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_EORSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[6].val.uint8)
#define ARM_EORSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_EORSS_W_S__S___IU___ISIZE		32
#define ARM_EORSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_EORSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_EORSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_EORSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_EORSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_EORSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_CLZS_S__S___IADDR		((inst)->addr)
#define ARM_CLZS_S__S___ISIZE		32
#define ARM_CLZS_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_CLZS_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB____IADDR		((inst)->addr)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB____ISIZE		32
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_CRm		((inst)->instrinput[0].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_opc2		((inst)->instrinput[1].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_coproc		((inst)->instrinput[2].val.uint32)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_CRd		((inst)->instrinput[3].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_CRn		((inst)->instrinput[4].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_opc1		((inst)->instrinput[5].val.uint8)
#define ARM_CDPSS_D__D__CRD__CRD__CRD___LB_D_RB__i_x_opc0		((inst)->instrinput[6].val.uint8)
#define ARM_BICSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_BICSS_W_S__S__SS___ISIZE		32
#define ARM_BICSS_W_S__S__SS_i_x_t		((inst)->instrinput[0].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_BICSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_BICSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_BICSS_W_S__S___IU___ISIZE		32
#define ARM_BICSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_BICSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[1].val.uint8)
#define ARM_BICSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[2].val.uint8)
#define ARM_BICSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_BICSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_BICSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_BFIS_S__S___ID___ID___IADDR		((inst)->addr)
#define ARM_BFIS_S__S___ID___ID___ISIZE		32
#define ARM_BFIS_S__S___ID___ID_i_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_BFIS_S__S___ID___ID_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_BFIS_S__S___ID___ID_i_x_msb		((inst)->instrinput[2].val.uint8)
#define ARM_BFIS_S__S___ID___ID_i_x_imm2		((inst)->instrinput[3].val.uint8)
#define ARM_BFIS_S__S___ID___ID_i_x_imm3		((inst)->instrinput[4].val.uint8)
#define ARM_BS_W_08X___IADDR		((inst)->addr)
#define ARM_BS_W_08X___ISIZE		32
#define ARM_BS_W_08X_i_x_imm10		((inst)->instrinput[0].val.uint16)
#define ARM_BS_W_08X_i_x_imm11		((inst)->instrinput[1].val.uint16)
#define ARM_BS_W_08X_i_x_j2		((inst)->instrinput[2].val.uint8)
#define ARM_BS_W_08X_i_x_S_set		((inst)->instrinput[3].val.uint8)
#define ARM_BS_W_08X_i_x_j1		((inst)->instrinput[4].val.uint8)
#define ARM_BS_W_08X_0___IADDR		((inst)->addr)
#define ARM_BS_W_08X_0___ISIZE		32
#define ARM_BS_W_08X_0_i_x_imm6		((inst)->instrinput[0].val.uint8)
#define ARM_BS_W_08X_0_i_x_imm11		((inst)->instrinput[1].val.uint16)
#define ARM_BS_W_08X_0_i_x_cond_cond		((inst)->instrinput[2].val.uint8)
#define ARM_BS_W_08X_0_i_x_j2		((inst)->instrinput[3].val.uint8)
#define ARM_BS_W_08X_0_i_x_S_set		((inst)->instrinput[4].val.uint8)
#define ARM_BS_W_08X_0_i_x_j1		((inst)->instrinput[5].val.uint8)
#define ARM_MOVTS_S___ID___IADDR		((inst)->addr)
#define ARM_MOVTS_S___ID___ISIZE		32
#define ARM_MOVTS_S___ID_i_x_i		((inst)->instrinput[0].val.uint8)
#define ARM_MOVTS_S___ID_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_MOVTS_S___ID_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_MOVTS_S___ID_i_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_MOVTS_S___ID_i_x_imm4		((inst)->instrinput[4].val.uint8)
#define ARM_ORRS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_ORRS_W_S__S__SS___ISIZE		32
#define ARM_ORRS_W_S__S__SS_i_x_imm2		((inst)->instrinput[0].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_t		((inst)->instrinput[1].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ORRS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_MOVWS_S___ID___IADDR		((inst)->addr)
#define ARM_MOVWS_S___ID___ISIZE		32
#define ARM_MOVWS_S___ID_i_x_i		((inst)->instrinput[0].val.uint8)
#define ARM_MOVWS_S___ID_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_MOVWS_S___ID_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_MOVWS_S___ID_i_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_MOVWS_S___ID_i_x_imm4		((inst)->instrinput[4].val.uint8)
#define ARM_ORRSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_ORRSS_W_S__S___IU___ISIZE		32
#define ARM_ORRSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_ORRSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_ORRSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ORRSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORRSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_ORRSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ASRSS_W_S__S__S___IADDR		((inst)->addr)
#define ARM_ASRSS_W_S__S__S___ISIZE		32
#define ARM_ASRSS_W_S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_ASRSS_W_S__S__S_i_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_ASRSS_W_S__S__S_i_x_S_set		((inst)->instrinput[2].val.uint8)
#define ARM_ASRSS_W_S__S__S_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_ANDSS_W_S__S__SS___ISIZE		32
#define ARM_ANDSS_W_S__S__SS_i_x_t		((inst)->instrinput[0].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[4].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ANDSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_ANDSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_ANDSS_W_S__S___IU___ISIZE		32
#define ARM_ANDSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_ANDSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_ANDSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ANDSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_ANDSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ADDSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_ADDSS_W_S__S__SS___ISIZE		32
#define ARM_ADDSS_W_S__S__SS_i_x_t		((inst)->instrinput[0].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ADDSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_ADDWS_S__S___ID____IADDR		((inst)->addr)
#define ARM_ADDWS_S__S___ID____ISIZE		32
#define ARM_ADDWS_S__S___ID__i_x_i		((inst)->instrinput[0].val.uint8)
#define ARM_ADDWS_S__S___ID__i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_ADDWS_S__S___ID__i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ADDWS_S__S___ID__i_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_ADDWS_S__S___ID__i_x_imm3		((inst)->instrinput[4].val.uint8)
#define ARM_ADDSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_ADDSS_W_S__S___IU___ISIZE		32
#define ARM_ADDSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_ADDSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_ADDSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ADDSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADDSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_ADDSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ADCSS_W_S__S__SS___IADDR		((inst)->addr)
#define ARM_ADCSS_W_S__S__SS___ISIZE		32
#define ARM_ADCSS_W_S__S__SS_i_x_imm2		((inst)->instrinput[0].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_t		((inst)->instrinput[1].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_imm3		((inst)->instrinput[2].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_ADCSS_W_S__S__SS_i_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_ADCSS_W_S__S___IU___IADDR		((inst)->addr)
#define ARM_ADCSS_W_S__S___IU___ISIZE		32
#define ARM_ADCSS_W_S__S___IU_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_ADCSS_W_S__S___IU_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_ADCSS_W_S__S___IU_i_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_ADCSS_W_S__S___IU_i_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADCSS_W_S__S___IU_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_ADCSS_W_S__S___IU_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_PLIS__LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_PLIS__LT_S__S_RT____ISIZE		32
#define ARM_PLIS__LT_S__S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint32)
#define ARM_PLIS__LT_S__S_RT__i_x_imm2		((inst)->instrinput[1].val.uint8)
#define ARM_PLIS__LT_S__S_RT__i_x_Rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_PLIS__LT_PC_RT____IADDR		((inst)->addr)
#define ARM_PLIS__LT_PC_RT____ISIZE		32
#define ARM_PLIS__LT_PC_RT__i_x_x_U		((inst)->instrinput[0].val.uint8)
#define ARM_PLIS__LT_PC_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_PLIS__LT_S_RT____IADDR		((inst)->addr)
#define ARM_PLIS__LT_S_RT____ISIZE		32
#define ARM_PLIS__LT_S_RT__i_x_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_PLIS__LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[1].val.uint32)
#define ARM_PLIS__LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_PLIS__LT_S_RT__0___ISIZE		32
#define ARM_PLIS__LT_S_RT__0_i_x_x_imm12		((inst)->instrinput[0].val.uint16)
#define ARM_PLIS__LT_S_RT__0_i_x_x_Rn_r		((inst)->instrinput[1].val.uint32)
#define ARM_PLDSS__LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_PLDSS__LT_S__S_RT____ISIZE		32
#define ARM_PLDSS__LT_S__S_RT__i_x_W		((inst)->instrinput[0].val.uint8)
#define ARM_PLDSS__LT_S__S_RT__i_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_PLDSS__LT_S__S_RT__i_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_PLDSS__LT_S__S_RT__i_x_Rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_PLDSS__LT_S_RT____IADDR		((inst)->addr)
#define ARM_PLDSS__LT_S_RT____ISIZE		32
#define ARM_PLDSS__LT_S_RT__i_x_x_W		((inst)->instrinput[0].val.uint8)
#define ARM_PLDSS__LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_PLDSS__LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_PLDSS__LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_PLDSS__LT_S_RT__0___ISIZE		32
#define ARM_PLDSS__LT_S_RT__0_i_x_x_W		((inst)->instrinput[0].val.uint8)
#define ARM_PLDSS__LT_S_RT__0_i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_PLDSS__LT_S_RT__0_i_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_W_S__S___ID___IADDR		((inst)->addr)
#define ARM_RSBSS_W_S__S___ID___ISIZE		32
#define ARM_RSBSS_W_S__S___ID_i_x_imm3		((inst)->instrinput[0].val.uint8)
#define ARM_RSBSS_W_S__S___ID_i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_RSBSS_W_S__S___ID_i_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_W_S__S___ID_i_x_Rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSBSS_W_S__S___ID_i_x_i		((inst)->instrinput[4].val.uint8)
#define ARM_RSBSS_W_S__S___ID_i_x_S_set		((inst)->instrinput[5].val.uint8)
#define ARM_LSLSS_W_S__S__S___IADDR		((inst)->addr)
#define ARM_LSLSS_W_S__S__S___ISIZE		32
#define ARM_LSLSS_W_S__S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_LSLSS_W_S__S__S_i_x_S_set		((inst)->instrinput[1].val.uint8)
#define ARM_LSLSS_W_S__S__S_i_x_rd_r		((inst)->instrinput[2].val.uint8)
#define ARM_LSLSS_W_S__S__S_i_x_rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRDS_S__S___LT_SS___IADDR		((inst)->addr)
#define ARM_LDRDS_S__S___LT_SS___ISIZE		32
#define ARM_LDRDS_S__S___LT_SS_i_x_x_P_U_1_W		((inst)->instrinput[0].val.uint32)
#define ARM_LDRDS_S__S___LT_SS_i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRDS_S__S___LT_SS_i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRDS_S__S___LT_SS_i_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_LDRDS_S__S___LT_SS_i_x_x_Rt2_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRDS_S__S___LT_SS___IADDR		((inst)->addr)
#define ARM_STRDS_S__S___LT_SS___ISIZE		32
#define ARM_STRDS_S__S___LT_SS_i_x_x_P_U_1_W		((inst)->instrinput[0].val.uint32)
#define ARM_STRDS_S__S___LT_SS_i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRDS_S__S___LT_SS_i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRDS_S__S___LT_SS_i_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_STRDS_S__S___LT_SS_i_x_x_Rt2_r		((inst)->instrinput[4].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STREXHS_S__S___LT_S_RT____ISIZE		32
#define ARM_STREXHS_S__S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT__i_x_Rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXBS_S__S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STREXBS_S__S__S___LT_S_RT____ISIZE		32
#define ARM_STREXBS_S__S__S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STREXBS_S__S__S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXBS_S__S__S___LT_S_RT__i_x_Rd_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXBS_S__S__S___LT_S_RT__i_x_Rt2_r		((inst)->instrinput[3].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STREXBS_S__S___LT_S_RT____ISIZE		32
#define ARM_STREXBS_S__S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT__i_x_Rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STREXS_S__S___LT_S_RT____ISIZE		32
#define ARM_STREXS_S__S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__i_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__i_x_Rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDREXHS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDREXHS_S___LT_S_RT____ISIZE		32
#define ARM_LDREXHS_S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDREXHS_S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDREXBS_S___LT_S_RT____ISIZE		32
#define ARM_LDREXBS_S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__i_x_Rt2_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_LDREXBS_S___LT_S_RT__0___ISIZE		32
#define ARM_LDREXBS_S___LT_S_RT__0_i_x_Rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__0_i_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDREXS_S___LT_S_RT____ISIZE		32
#define ARM_LDREXS_S___LT_S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDREXS_S___LT_S_RT__i_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXS_S___LT_S_RT__i_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB____IADDR		((inst)->addr)
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB____ISIZE		32
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_W		((inst)->instrinput[0].val.uint8)
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_register_list__l		((inst)->instrinput[1].val.uint16)
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_register_list__M		((inst)->instrinput[2].val.uint8)
#define ARM_STMSS_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_Rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSHS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_LDRSHS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_LDRSHS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSHS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSHS_S___LT_S_RT____IS0XX_i_x_x_Rt_1_P_U_W_val		((inst)->instrinput[2].val.uint32)
#define ARM_LDRSHS_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRSHS_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_LDRSHS_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSHS_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRSHS_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_LDRSBS_S___LT_PC_RT____IADDR		((inst)->addr)
#define ARM_LDRSBS_S___LT_PC_RT____ISIZE		32
#define ARM_LDRSBS_S___LT_PC_RT__i_x_Rt_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSBS_S___LT_PC_RT__i_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRSBS_S___LT_PC_RT__i_x_U		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSBS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_LDRSBS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_LDRSBS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSBS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSBS_S___LT_S_RT____IS0XX_i_x_x_Rt_1_P_U_W_val		((inst)->instrinput[2].val.uint32)
#define ARM_LDRSBS_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRSBS_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_LDRSBS_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSBS_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRSBS_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_LDRBS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_LDRBS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_LDRBS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRBS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRBS_S___LT_S_RT____IS0XX_i_x_x_Rt_1_P_U_W_val		((inst)->instrinput[2].val.uint32)
#define ARM_LDRBS_W_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRBS_W_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_LDRBS_W_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRBS_W_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRBS_W_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_STRBS_S___LT_SS___IADDR		((inst)->addr)
#define ARM_STRBS_S___LT_SS___ISIZE		32
#define ARM_STRBS_S___LT_SS_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRBS_S___LT_SS_i_x_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRBS_S___LT_SS_i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_STRBS_S___LT_SS_i_x_x_P_U_W		((inst)->instrinput[3].val.uint32)
#define ARM_STRBS_W_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_STRBS_W_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_STRBS_W_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRBS_W_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_STRBS_W_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_STRS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_STRS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_S___LT_S_RT____IS0XX_i_x_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRS_S___LT_S_RT____IS0XX_i_x_x_P_U_W		((inst)->instrinput[2].val.uint32)
#define ARM_STRS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_STRS_W_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_STRS_W_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_STRS_W_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_W_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_STRS_W_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB____IADDR		((inst)->addr)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB____ISIZE		32
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_W		((inst)->instrinput[0].val.uint8)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_register_list__l		((inst)->instrinput[1].val.uint16)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_register_list__M		((inst)->instrinput[2].val.uint8)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_register_list__P		((inst)->instrinput[3].val.uint8)
#define ARM_LDMSS_W_SS___LB_SSSSSSSSSSSSSSS_RB__i_x_Rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRHS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_STRHS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_STRHS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRHS_S___LT_S_RT____IS0XX_i_x_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_S___LT_S_RT____IS0XX_i_x_x_P_U_W		((inst)->instrinput[3].val.uint32)
#define ARM_STRHS_W_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STRHS_W_S___LT_S_RT____ISIZE		32
#define ARM_STRHS_W_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRHS_W_S___LT_S_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_STRHS_W_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_LDRHS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_LDRHS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_LDRHS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRHS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRHS_S___LT_S_RT____IS0XX_i_x_x_Rt_1_P_U_W_val		((inst)->instrinput[2].val.uint32)
#define ARM_LDRHS_W_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRHS_W_S___LT_S_RT____ISIZE		32
#define ARM_LDRHS_W_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRHS_W_S___LT_S_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRHS_W_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_LDRSHS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_LDRSHS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_LDRSHS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSHS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSHS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSHS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_STRHS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_STRHS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_STRHS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRHS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRHS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_LDRHS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_LDRHS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRHS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRHS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_LDRHS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRS_S___LT_S_RT____IS0XX___IADDR		((inst)->addr)
#define ARM_LDRS_S___LT_S_RT____IS0XX___ISIZE		32
#define ARM_LDRS_S___LT_S_RT____IS0XX_i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_S___LT_S_RT____IS0XX_i_x_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_S___LT_S_RT____IS0XX_i_x_x_P_U_W		((inst)->instrinput[2].val.uint32)
#define ARM_LDRS_S___LT_S_RT____IS0XX_i_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_LDRS_W_S___LT_S___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRS_W_S___LT_S___I0XX_RT____ISIZE		32
#define ARM_LDRS_W_S___LT_S___I0XX_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_W_S___LT_S___I0XX_RT__i_x_x_imm12		((inst)->instrinput[1].val.uint16)
#define ARM_LDRS_W_S___LT_S___I0XX_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSHTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRSHTS_S___LT_S_RT____ISIZE		32
#define ARM_LDRSHTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSHTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSHTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSBTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRSBTS_S___LT_S_RT____ISIZE		32
#define ARM_LDRSBTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSBTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSBTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint32)
#define ARM_STRTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STRTS_S___LT_S_RT____ISIZE		32
#define ARM_STRTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_STRTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRTS_S___LT_S_RT____ISIZE		32
#define ARM_LDRTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRHTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STRHTS_S___LT_S_RT____ISIZE		32
#define ARM_STRHTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRHTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_STRHTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRHTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRHTS_S___LT_S_RT____ISIZE		32
#define ARM_LDRHTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRHTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRHTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRBTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STRBTS_S___LT_S_RT____ISIZE		32
#define ARM_STRBTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRBTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_STRBTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRBTS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDRBTS_S___LT_S_RT____ISIZE		32
#define ARM_LDRBTS_S___LT_S_RT__i_x_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRBTS_S___LT_S_RT__i_x_x_imm8		((inst)->instrinput[1].val.uint8)
#define ARM_LDRBTS_S___LT_S_RT__i_x_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSBS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_LDRSBS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_LDRSBS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSBS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint32)
#define ARM_LDRSBS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSBS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_STRBS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_STRBS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_STRBS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRBS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRBS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_STRBS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRBS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_LDRBS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_LDRBS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint32)
#define ARM_LDRBS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRBS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_LDRBS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_STRS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_STRS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_STRS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STRS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_STRS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRS_W_S___LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_LDRS_W_S___LT_S__S_RT____ISIZE		32
#define ARM_LDRS_W_S___LT_S__S_RT__i_x_x_rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_W_S___LT_S__S_RT__i_x_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_W_S___LT_S__S_RT__i_x_x_imm2		((inst)->instrinput[2].val.uint8)
#define ARM_LDRS_W_S___LT_S__S_RT__i_x_x_rm_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_LDC2SS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_LDC2SS_D__D___LT_RD_RT___D_i_x_x_coproc		((inst)->instrinput[0].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT___D_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT___D_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT___D_i_x_x_D		((inst)->instrinput[3].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT___D_i_x_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_coproc		((inst)->instrinput[0].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD_RT____ISD_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_coproc		((inst)->instrinput[0].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_coproc		((inst)->instrinput[0].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDC2SS_D__D___LT_RD___ISD_RT__i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_LDCSS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_LDCSS_D__D___LT_RD_RT___D_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSS_D__D___LT_RD_RT___D_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT___D_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT___D_i_x_x_D		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT___D_i_x_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSS_D__D___LT_RD_RT____ISD_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__21_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSS_D__D___LT_RD___ISD_RT__i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_STC2SS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_STC2SS_D__D___LT_RD_RT___D_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STC2SS_D__D___LT_RD_RT___D_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT___D_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT___D_i_x_x_D		((inst)->instrinput[3].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT___D_i_x_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STC2SS_D__D___LT_RD_RT____ISD_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__21_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STC2SS_D__D___LT_RD___ISD_RT__i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_STCSS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_STCSS_D__D___LT_RD_RT___D_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSS_D__D___LT_RD_RT___D_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT___D_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT___D_i_x_x_D		((inst)->instrinput[3].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT___D_i_x_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_STCSS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STCSS_D__D___LT_RD_RT____ISD_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__21_i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_STCSS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_D		((inst)->instrinput[4].val.uint8)
#define ARM_STCSS_D__D___LT_RD___ISD_RT__i_x_x_CRd		((inst)->instrinput[5].val.uint8)
#define ARM_BLXS_0X08X___IADDR		((inst)->addr)
#define ARM_BLXS_0X08X___ISIZE		32
#define ARM_BLXS_0X08X_i_x_H		((inst)->instrinput[0].val.uint8)
#define ARM_BLXS_0X08X_i_x_imm10L		((inst)->instrinput[1].val.uint16)
#define ARM_BLXS_0X08X_i_x_J2		((inst)->instrinput[2].val.uint8)
#define ARM_BLXS_0X08X_i_x_J1		((inst)->instrinput[3].val.uint8)
#define ARM_BLXS_0X08X_i_x_imm10H		((inst)->instrinput[4].val.uint16)
#define ARM_BLXS_0X08X_i_x_S		((inst)->instrinput[5].val.uint8)
#define ARM_TBBS__LT_S__S_RT____IADDR		((inst)->addr)
#define ARM_TBBS__LT_S__S_RT____ISIZE		32
#define ARM_TBBS__LT_S__S_RT__i_x_Rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TBBS__LT_S__S_RT__i_x_H		((inst)->instrinput[1].val.uint8)
#define ARM_TBBS__LT_S__S_RT__i_x_Rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_BLS_0XX___IADDR		((inst)->addr)
#define ARM_BLS_0XX___ISIZE		32
#define ARM_BLS_0XX_i_x_imm10		((inst)->instrinput[0].val.uint16)
#define ARM_BLS_0XX_i_x_imm11		((inst)->instrinput[1].val.uint16)
#define ARM_BLS_0XX_i_x_J2		((inst)->instrinput[2].val.uint8)
#define ARM_BLS_0XX_i_x_S_set		((inst)->instrinput[3].val.uint8)
#define ARM_BLS_0XX_i_x_J1		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F64_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VSS_F64_DD__DD__DD___ISIZE		32
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_i_x_x_op_		((inst)->instrinput[6].val.uint8)
#define ARM_VSS_F32_SD__SD__SD___IADDR		((inst)->addr)
#define ARM_VSS_F32_SD__SD__SD___ISIZE		32
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vn__p		((inst)->instrinput[0].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_Vm__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_i_x_x_op_		((inst)->instrinput[6].val.uint8)
#define ARM_VSS_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VSS_F32_QD__QD__QD___ISIZE		32
#define ARM_VSS_F32_QD__QD__QD_i_x_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F32_QD__QD__QD_i_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VSS_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VSS_F32_DD__DD__DD___ISIZE		32
#define ARM_VSS_F32_DD__DD__DD_i_x_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F32_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VPOPS__LB_SD_RB____IADDR		((inst)->addr)
#define ARM_VPOPS__LB_SD_RB____ISIZE		32
#define ARM_VPOPS__LB_SD_RB__i_x_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_VPOPS__LB_SD_RB__i_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VPOPS__LB_SD_RB__i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VPOPS__LB_DD_RB____IADDR		((inst)->addr)
#define ARM_VPOPS__LB_DD_RB____ISIZE		32
#define ARM_VPOPS__LB_DD_RB__i_x_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_VPOPS__LB_DD_RB__i_x_x_Vd__r		((inst)->instrinput[1].val.uint8)
#define ARM_VPOPS__LB_DD_RB__i_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VADDS_F64_DD__DD__DD___ISIZE		32
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD___IADDR		((inst)->addr)
#define ARM_VADDS_F32_SD__SD__SD___ISIZE		32
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vn__p		((inst)->instrinput[0].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vm__p		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VADDS_F32_QD__QD__QD___ISIZE		32
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F32_QD__QD__QD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VADDS_F32_DD__DD__DD___ISIZE		32
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F32_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VCVTS_F64_S_DD__SD___IADDR		((inst)->addr)
#define ARM_VCVTS_F64_S_DD__SD___ISIZE		32
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_opc2		((inst)->instrinput[0].val.uint32)
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_Vd__r		((inst)->instrinput[1].val.uint8)
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VCVTS_F64_S_DD__SD_i_x_x_op_		((inst)->instrinput[5].val.uint8)
#define ARM_VCVTSS_U32_F64_SD__DD___IADDR		((inst)->addr)
#define ARM_VCVTSS_U32_F64_SD__DD___ISIZE		32
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_opc2		((inst)->instrinput[0].val.uint32)
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VCVTSS_U32_F64_SD__DD_i_x_x_op_		((inst)->instrinput[5].val.uint8)
#define ARM_VCVTS_F32_S_SD__SD___IADDR		((inst)->addr)
#define ARM_VCVTS_F32_S_SD__SD___ISIZE		32
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_opc2		((inst)->instrinput[0].val.uint32)
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VCVTS_F32_S_SD__SD_i_x_x_op_		((inst)->instrinput[5].val.uint8)
#define ARM_VPUSHS__LB_SD_RB____IADDR		((inst)->addr)
#define ARM_VPUSHS__LB_SD_RB____ISIZE		32
#define ARM_VPUSHS__LB_SD_RB__i_x_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_VPUSHS__LB_SD_RB__i_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VPUSHS__LB_SD_RB__i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VPUSHS__LB_DD_RB____IADDR		((inst)->addr)
#define ARM_VPUSHS__LB_DD_RB____ISIZE		32
#define ARM_VPUSHS__LB_DD_RB__i_x_x_imm8		((inst)->instrinput[0].val.uint8)
#define ARM_VPUSHS__LB_DD_RB__i_x_x_Vd__r		((inst)->instrinput[1].val.uint8)
#define ARM_VPUSHS__LB_DD_RB__i_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VMULS_F64_DD__DD__DD___ISIZE		32
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD___IADDR		((inst)->addr)
#define ARM_VMULS_F32_SD__SD__SD___ISIZE		32
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vn__p		((inst)->instrinput[0].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vm__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VMULS_F32_QD__QD__QD___ISIZE		32
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F32_QD__QD__QD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VMULS_F32_DD__DD__DD___ISIZE		32
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F32_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMRSS_S__FPSCR___IADDR		((inst)->addr)
#define ARM_VMRSS_S__FPSCR___ISIZE		32
#define ARM_VMRSS_S__FPSCR_i_x_Rt_r		((inst)->instrinput[0].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT____IADDR		((inst)->addr)
#define ARM_VSTRS_SD___LT_S___ISD_RT____ISIZE		32
#define ARM_VSTRS_SD___LT_S___ISD_RT__i_x_x_U		((inst)->instrinput[0].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__i_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT____IADDR		((inst)->addr)
#define ARM_VSTRS_DD___LT_S___ISD_RT____ISIZE		32
#define ARM_VSTRS_DD___LT_S___ISD_RT__i_x_x_U		((inst)->instrinput[0].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__i_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT____IADDR		((inst)->addr)
#define ARM_VLDRS_DD___LT_S___ISD_RT____ISIZE		32
#define ARM_VLDRS_DD___LT_S___ISD_RT__i_x_x_U		((inst)->instrinput[0].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__i_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0___IADDR		((inst)->addr)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0___ISIZE		32
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_i_x_x_U		((inst)->instrinput[0].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_i_x_x_Rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_i_x_x_imm8		((inst)->instrinput[2].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_i_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__0_i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VDIVS_F64_DD__DD__DD___ISIZE		32
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD___IADDR		((inst)->addr)
#define ARM_VDIVS_F32_SD__SD__SD___ISIZE		32
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vn__p		((inst)->instrinput[0].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vm__p		((inst)->instrinput[2].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VSUBS_F64_DD__DD__DD___ISIZE		32
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSUBS_F64_DD__DD__DD_i_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD___IADDR		((inst)->addr)
#define ARM_VSUBS_F32_SD__SD__SD___ISIZE		32
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vn__p		((inst)->instrinput[0].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vm__p		((inst)->instrinput[2].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSUBS_F32_SD__SD__SD_i_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VMOVS_DD__S__S___IADDR		((inst)->addr)
#define ARM_VMOVS_DD__S__S___ISIZE		32
#define ARM_VMOVS_DD__S__S_i_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_DD__S__S_i_x_Rt2_r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_DD__S__S_i_x_Rm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_DD__S__S_i_x_Rm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_DD__S__S_i_x_Rt_r		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_SD__S___IADDR		((inst)->addr)
#define ARM_VMOVS_SD__S___ISIZE		32
#define ARM_VMOVS_SD__S_i_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_SD__S_i_x_Rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_SD__S_i_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_SD__S_i_x_Vn__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F64_DD__DD___IADDR		((inst)->addr)
#define ARM_VMOVS_F64_DD__DD___ISIZE		32
#define ARM_VMOVS_F64_DD__DD_i_x_x_Vm__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_F64_DD__DD_i_x_x_Vm__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F64_DD__DD_i_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F64_DD__DD_i_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F32_SD__SD___IADDR		((inst)->addr)
#define ARM_VMOVS_F32_SD__SD___ISIZE		32
#define ARM_VMOVS_F32_SD__SD_i_x_x_Vm__p		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_F32_SD__SD_i_x_x_Vm__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F32_SD__SD_i_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F32_SD__SD_i_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F64_DD___ID___IADDR		((inst)->addr)
#define ARM_VMOVS_F64_DD___ID___ISIZE		32
#define ARM_VMOVS_F64_DD___ID_i_x_x_Vd__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_F64_DD___ID_i_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F64_DD___ID_i_x_x_imm4L		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F64_DD___ID_i_x_x_imm4H		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F32_SD___ID___IADDR		((inst)->addr)
#define ARM_VMOVS_F32_SD___ID___ISIZE		32
#define ARM_VMOVS_F32_SD___ID_i_x_x_Vd__p		((inst)->instrinput[0].val.uint8)
#define ARM_VMOVS_F32_SD___ID_i_x_x_Vd__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F32_SD___ID_i_x_x_imm4L		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F32_SD___ID_i_x_x_imm4H		((inst)->instrinput[3].val.uint8)
#define ARM_UXTHS_RD__RD___IADDR		((inst)->addr)
#define ARM_UXTHS_RD__RD___ISIZE		16
#define ARM_UXTHS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_UXTHS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_UXTBS_RD__RD___IADDR		((inst)->addr)
#define ARM_UXTBS_RD__RD___ISIZE		16
#define ARM_UXTBS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_UXTBS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_YIELDS___IADDR		((inst)->addr)
#define ARM_YIELDS___ISIZE		16
#define ARM_YIELDS_i_x_mask		((inst)->instrinput[0].val.uint8)
#define ARM_YIELDS_i_x_firstcond		((inst)->instrinput[1].val.uint8)
#define ARM_MOVS_S__S___IADDR		((inst)->addr)
#define ARM_MOVS_S__S___ISIZE		16
#define ARM_MOVS_S__S_i_x_H		((inst)->instrinput[0].val.uint8)
#define ARM_MOVS_S__S_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_MOVS_S__S_i_x_rd_ro		((inst)->instrinput[2].val.uint8)
#define ARM_MOVS_RD___ID___IADDR		((inst)->addr)
#define ARM_MOVS_RD___ID___ISIZE		16
#define ARM_MOVS_RD___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_MOVS_RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_TSTS_RD__RD___IADDR		((inst)->addr)
#define ARM_TSTS_RD__RD___ISIZE		16
#define ARM_TSTS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_TSTS_RD__RD_i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SXTHS_RD__RD___IADDR		((inst)->addr)
#define ARM_SXTHS_RD__RD___ISIZE		16
#define ARM_SXTHS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_SXTHS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SXTBS_RD__RD___IADDR		((inst)->addr)
#define ARM_SXTBS_RD__RD___ISIZE		16
#define ARM_SXTBS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_SXTBS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SUBS_RD__RD__RD___IADDR		((inst)->addr)
#define ARM_SUBS_RD__RD__RD___ISIZE		16
#define ARM_SUBS_RD__RD__RD_i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_SUBS_RD__RD__RD_i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SUBS_RD__RD__RD_i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_SUBS_SP___ID___IADDR		((inst)->addr)
#define ARM_SUBS_SP___ID___ISIZE		16
#define ARM_SUBS_SP___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_SUBS_RD___ID___IADDR		((inst)->addr)
#define ARM_SUBS_RD___ID___ISIZE		16
#define ARM_SUBS_RD___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_SUBS_RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SUBS_RD__RD___ID___IADDR		((inst)->addr)
#define ARM_SUBS_RD__RD___ID___ISIZE		16
#define ARM_SUBS_RD__RD___ID_i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_SUBS_RD__RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SUBS_RD__RD___ID_i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_RD___LT_RD__RD__RT____IADDR		((inst)->addr)
#define ARM_STRHS_RD___LT_RD__RD__RT____ISIZE		16
#define ARM_STRHS_RD___LT_RD__RD__RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRHS_RD___LT_RD__RD__RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_RD___LT_RD__RD__RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_RD___LT_RD___I0XX_RT____IADDR		((inst)->addr)
#define ARM_STRHS_RD___LT_RD___I0XX_RT____ISIZE		16
#define ARM_STRHS_RD___LT_RD___I0XX_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRHS_RD___LT_RD___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_RD___LT_RD___I0XX_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_STRBS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_STRBS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_STRBS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRBS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRBS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_STRBS_RD___LT_RD___ID_RT____IADDR		((inst)->addr)
#define ARM_STRBS_RD___LT_RD___ID_RT____ISIZE		16
#define ARM_STRBS_RD___LT_RD___ID_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRBS_RD___LT_RD___ID_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRBS_RD___LT_RD___ID_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_STRS_RD___LT_SP___ID_RT____IADDR		((inst)->addr)
#define ARM_STRS_RD___LT_SP___ID_RT____ISIZE		16
#define ARM_STRS_RD___LT_SP___ID_RT__i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_RD___LT_SP___ID_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_STRS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_STRS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_STRS_RD___LT_RD___I0XX_RT____IADDR		((inst)->addr)
#define ARM_STRS_RD___LT_RD___I0XX_RT____ISIZE		16
#define ARM_STRS_RD___LT_RD___I0XX_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_STRS_RD___LT_RD___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_STRS_RD___LT_RD___I0XX_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_STMIAS_RD_21___LB_S_RB____IADDR		((inst)->addr)
#define ARM_STMIAS_RD_21___LB_S_RB____ISIZE		16
#define ARM_STMIAS_RD_21___LB_S_RB__i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_STMIAS_RD_21___LB_S_RB__i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_SBCS_RD__RD___IADDR		((inst)->addr)
#define ARM_SBCS_RD__RD___ISIZE		16
#define ARM_SBCS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_SBCS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_RORS_RD__RD___IADDR		((inst)->addr)
#define ARM_RORS_RD__RD___ISIZE		16
#define ARM_RORS_RD__RD_i_x_rs_ro		((inst)->instrinput[0].val.uint8)
#define ARM_RORS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_REVSHS_RD__RD___IADDR		((inst)->addr)
#define ARM_REVSHS_RD__RD___ISIZE		16
#define ARM_REVSHS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_REVSHS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_REV16S_RD__RD___IADDR		((inst)->addr)
#define ARM_REV16S_RD__RD___ISIZE		16
#define ARM_REV16S_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_REV16S_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_REVS_RD__RD___IADDR		((inst)->addr)
#define ARM_REVS_RD__RD___ISIZE		16
#define ARM_REVS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_REVS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_PUSHS__LB_SS_RB____IADDR		((inst)->addr)
#define ARM_PUSHS__LB_SS_RB____ISIZE		16
#define ARM_PUSHS__LB_SS_RB__i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_PUSHS__LB_SS_RB__0___IADDR		((inst)->addr)
#define ARM_PUSHS__LB_SS_RB__0___ISIZE		16
#define ARM_PUSHS__LB_SS_RB__0_i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_POPS__LB_SS_RB____IADDR		((inst)->addr)
#define ARM_POPS__LB_SS_RB____ISIZE		16
#define ARM_POPS__LB_SS_RB__i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_POPS__LB_SS_RB__0___IADDR		((inst)->addr)
#define ARM_POPS__LB_SS_RB__0___ISIZE		16
#define ARM_POPS__LB_SS_RB__0_i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_ORRS_RD__RD___IADDR		((inst)->addr)
#define ARM_ORRS_RD__RD___ISIZE		16
#define ARM_ORRS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ORRS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_RSBS_RD__RD___I0___IADDR		((inst)->addr)
#define ARM_RSBS_RD__RD___I0___ISIZE		16
#define ARM_RSBS_RD__RD___I0_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_RSBS_RD__RD___I0_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_MVNS_RD__RD___IADDR		((inst)->addr)
#define ARM_MVNS_RD__RD___ISIZE		16
#define ARM_MVNS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_MVNS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_MULS_RD__RD___IADDR		((inst)->addr)
#define ARM_MULS_RD__RD___ISIZE		16
#define ARM_MULS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_MULS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LSRS_RD__RD___IADDR		((inst)->addr)
#define ARM_LSRS_RD__RD___ISIZE		16
#define ARM_LSRS_RD__RD_i_x_rs_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LSRS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LSRS_RD__RD___ID___IADDR		((inst)->addr)
#define ARM_LSRS_RD__RD___ID___ISIZE		16
#define ARM_LSRS_RD__RD___ID_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LSRS_RD__RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LSRS_RD__RD___ID_i_x_imm5_n		((inst)->instrinput[2].val.uint8)
#define ARM_LSLS_RD__RD___IADDR		((inst)->addr)
#define ARM_LSLS_RD__RD___ISIZE		16
#define ARM_LSLS_RD__RD_i_x_rs_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LSLS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LSLS_RD__RD___ID___IADDR		((inst)->addr)
#define ARM_LSLS_RD__RD___ID___ISIZE		16
#define ARM_LSLS_RD__RD___ID_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LSLS_RD__RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LSLS_RD__RD___ID_i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSHS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_LDRSHS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_LDRSHS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSHS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSHS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSBS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_LDRSBS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_LDRSBS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSBS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSBS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_LDRHS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_LDRHS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_LDRHS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRHS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRHS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_LDRHS_RD___LT_RD___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRHS_RD___LT_RD___I0XX_RT____ISIZE		16
#define ARM_LDRHS_RD___LT_RD___I0XX_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRHS_RD___LT_RD___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRHS_RD___LT_RD___I0XX_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_LDRBS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_LDRBS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_LDRBS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRBS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRBS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_LDRBS_RD___LT_RD___ID_RT____IADDR		((inst)->addr)
#define ARM_LDRBS_RD___LT_RD___ID_RT____ISIZE		16
#define ARM_LDRBS_RD___LT_RD___ID_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRBS_RD___LT_RD___ID_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRBS_RD___LT_RD___ID_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_LDRS_RD___LT_SP___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRS_RD___LT_SP___I0XX_RT____ISIZE		16
#define ARM_LDRS_RD___LT_SP___I0XX_RT__i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_RD___LT_SP___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_RD___LT_PC___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRS_RD___LT_PC___I0XX_RT____ISIZE		16
#define ARM_LDRS_RD___LT_PC___I0XX_RT__i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_RD___LT_PC___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_RD___LT_RD__RD_RT____IADDR		((inst)->addr)
#define ARM_LDRS_RD___LT_RD__RD_RT____ISIZE		16
#define ARM_LDRS_RD___LT_RD__RD_RT__i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_RD___LT_RD__RD_RT__i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_RD___LT_RD__RD_RT__i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_LDRS_RD___LT_RD___I0XX_RT____IADDR		((inst)->addr)
#define ARM_LDRS_RD___LT_RD___I0XX_RT____ISIZE		16
#define ARM_LDRS_RD___LT_RD___I0XX_RT__i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_LDRS_RD___LT_RD___I0XX_RT__i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_LDRS_RD___LT_RD___I0XX_RT__i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_LDMIAS_RD___LB_S_RB____IADDR		((inst)->addr)
#define ARM_LDMIAS_RD___LB_S_RB____ISIZE		16
#define ARM_LDMIAS_RD___LB_S_RB__i_x_llist_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDMIAS_RD___LB_S_RB__i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_EORS_RD__RD___IADDR		((inst)->addr)
#define ARM_EORS_RD__RD___ISIZE		16
#define ARM_EORS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_EORS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_RD__S___IADDR		((inst)->addr)
#define ARM_CMPS_RD__S___ISIZE		16
#define ARM_CMPS_RD__S_i_x_H		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_RD__S_i_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_RD__S_i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_CMPS_RD__RD___IADDR		((inst)->addr)
#define ARM_CMPS_RD__RD___ISIZE		16
#define ARM_CMPS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_RD__RD_i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_RD___ID___IADDR		((inst)->addr)
#define ARM_CMPS_RD___ID___ISIZE		16
#define ARM_CMPS_RD___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_RD___ID_i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_CMNS_RD__RD___IADDR		((inst)->addr)
#define ARM_CMNS_RD__RD___ISIZE		16
#define ARM_CMNS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_CMNS_RD__RD_i_x_rn_ro		((inst)->instrinput[1].val.uint8)
#define ARM_CBZS_RD__D___IADDR		((inst)->addr)
#define ARM_CBZS_RD__D___ISIZE		16
#define ARM_CBZS_RD__D_i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_CBZS_RD__D_i_x_i		((inst)->instrinput[1].val.uint8)
#define ARM_CBZS_RD__D_i_x_op_		((inst)->instrinput[2].val.uint8)
#define ARM_CBZS_RD__D_i_x_imm5		((inst)->instrinput[3].val.uint8)
#define ARM_BXS_S___IADDR		((inst)->addr)
#define ARM_BXS_S___ISIZE		16
#define ARM_BXS_S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_BLXS_S___IADDR		((inst)->addr)
#define ARM_BLXS_S___ISIZE		16
#define ARM_BLXS_S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_BKPT__ID___IADDR		((inst)->addr)
#define ARM_BKPT__ID___ISIZE		16
#define ARM_BKPT__ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_BICS_RD__RD___IADDR		((inst)->addr)
#define ARM_BICS_RD__RD___ISIZE		16
#define ARM_BICS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_BICS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_BS_N__40___IADDR		((inst)->addr)
#define ARM_BS_N__40___ISIZE		16
#define ARM_BS_N__40_i_x_imm11		((inst)->instrinput[0].val.int16)
#define ARM_S_N_08X___IADDR		((inst)->addr)
#define ARM_S_N_08X___ISIZE		16
#define ARM_S_N_08X_i_x_simm_n		((inst)->instrinput[0].val.int8)
#define ARM_S_N_08X_i_x_cond		((inst)->instrinput[1].val.uint8)
#define ARM_ASRS_RD__RD___IADDR		((inst)->addr)
#define ARM_ASRS_RD__RD___ISIZE		16
#define ARM_ASRS_RD__RD_i_x_rs_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ASRS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ASRS_RD__RD___ID___IADDR		((inst)->addr)
#define ARM_ASRS_RD__RD___ID___ISIZE		16
#define ARM_ASRS_RD__RD___ID_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ASRS_RD__RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ASRS_RD__RD___ID_i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_ANDS_RD__RD___IADDR		((inst)->addr)
#define ARM_ANDS_RD__RD___ISIZE		16
#define ARM_ANDS_RD__RD_i_x_rm_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ANDS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_S__S___IADDR		((inst)->addr)
#define ARM_ADDS_S__S___ISIZE		16
#define ARM_ADDS_S__S_i_x_rm_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_S__S_i_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD__RD__RD___IADDR		((inst)->addr)
#define ARM_ADDS_RD__RD__RD___ISIZE		16
#define ARM_ADDS_RD__RD__RD_i_x_rd_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD__RD__RD_i_x_rm_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD__RD__RD_i_x_rn_ro		((inst)->instrinput[2].val.uint8)
#define ARM_ADDS_SP__SP___ID___IADDR		((inst)->addr)
#define ARM_ADDS_SP__SP___ID___ISIZE		16
#define ARM_ADDS_SP__SP___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD__SP___ID___IADDR		((inst)->addr)
#define ARM_ADDS_RD__SP___ID___ISIZE		16
#define ARM_ADDS_RD__SP___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD__SP___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD__PC___ID___IADDR		((inst)->addr)
#define ARM_ADDS_RD__PC___ID___ISIZE		16
#define ARM_ADDS_RD__PC___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD__PC___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD___ID___IADDR		((inst)->addr)
#define ARM_ADDS_RD___ID___ISIZE		16
#define ARM_ADDS_RD___ID_i_x_imm_n		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD__RD___ID___IADDR		((inst)->addr)
#define ARM_ADDS_RD__RD___ID___ISIZE		16
#define ARM_ADDS_RD__RD___ID_i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ADDS_RD__RD___ID_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_ADDS_RD__RD___ID_i_x_imm_n		((inst)->instrinput[2].val.uint8)
#define ARM_ADCS_RD__RD___IADDR		((inst)->addr)
#define ARM_ADCS_RD__RD___ISIZE		16
#define ARM_ADCS_RD__RD_i_x_rn_ro		((inst)->instrinput[0].val.uint8)
#define ARM_ADCS_RD__RD_i_x_rd_ro		((inst)->instrinput[1].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D___IADDR		((inst)->addr)
#define ARM_MRCS_D__D__S__CRD__CRD__D___ISIZE		32
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_opc2		((inst)->instrinput[0].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_CRm		((inst)->instrinput[1].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_coproc		((inst)->instrinput[2].val.uint32)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_Rt_r		((inst)->instrinput[3].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_CRn		((inst)->instrinput[4].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_MRCS_D__D__S__CRD__CRD__D_x_opc1		((inst)->instrinput[6].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_LDCSSS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_CRd		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_cond_cond		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT___D_x_D		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD_RT____ISD_x_D		((inst)->instrinput[6].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__21_x_D		((inst)->instrinput[6].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_LDCSSS_D__D___LT_RD___ISD_RT__x_D		((inst)->instrinput[6].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT___D___IADDR		((inst)->addr)
#define ARM_STCSSS_D__D___LT_RD_RT___D___ISIZE		32
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_CRd		((inst)->instrinput[3].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_cond_cond		((inst)->instrinput[4].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT___D_x_D		((inst)->instrinput[5].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD___IADDR		((inst)->addr)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD___ISIZE		32
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_STCSSS_D__D___LT_RD_RT____ISD_x_D		((inst)->instrinput[6].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21___IADDR		((inst)->addr)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21___ISIZE		32
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__21_x_D		((inst)->instrinput[6].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT____IADDR		((inst)->addr)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT____ISIZE		32
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_coproc		((inst)->instrinput[0].val.uint32)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_addr_r_r		((inst)->instrinput[1].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_addr_i		((inst)->instrinput[2].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_addr_u		((inst)->instrinput[3].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_CRd		((inst)->instrinput[4].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_STCSSS_D__D___LT_RD___ISD_RT__x_D		((inst)->instrinput[6].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0___IADDR		((inst)->addr)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0___ISIZE		32
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_U		((inst)->instrinput[1].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSTRS_SD___LT_S___ISD_RT__0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0___IADDR		((inst)->addr)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0___ISIZE		32
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_U		((inst)->instrinput[1].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSTRS_DD___LT_S___ISD_RT__0_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB____IADDR		((inst)->addr)
#define ARM_VSTMSSS_SS___LB_S_RB____ISIZE		32
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0___IADDR		((inst)->addr)
#define ARM_VSTMSSS_SS___LB_S_RB__0___ISIZE		32
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_W		((inst)->instrinput[2].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_Rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_imm8		((inst)->instrinput[4].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__0_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__1___IADDR		((inst)->addr)
#define ARM_VSTMSSS_SS___LB_S_RB__1___ISIZE		32
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__1_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2___IADDR		((inst)->addr)
#define ARM_VSTMSSS_SS___LB_S_RB__2___ISIZE		32
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_W		((inst)->instrinput[2].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_Rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_imm8		((inst)->instrinput[4].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSTMSSS_SS___LB_S_RB__2_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0___IADDR		((inst)->addr)
#define ARM_VMULS_F64_DD__DD__DD_0___ISIZE		32
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VMULS_F64_DD__DD__DD_0_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0___IADDR		((inst)->addr)
#define ARM_VMULS_F32_SD__SD__SD_0___ISIZE		32
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vn__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMULS_F32_SD__SD__SD_0_x_x_Vd__r		((inst)->instrinput[6].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VMUL_F32_QD__QD__QD___ISIZE		32
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMUL_F32_QD__QD__QD_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VMUL_F32_DD__DD__DD___ISIZE		32
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMUL_F32_DD__DD__DD_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VMOVS_DD__S__S_0___IADDR		((inst)->addr)
#define ARM_VMOVS_DD__S__S_0___ISIZE		32
#define ARM_VMOVS_DD__S__S_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_DD__S__S_0_x_op_		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_DD__S__S_0_x_Rt2_r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_DD__S__S_0_x_Rm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_DD__S__S_0_x_Rm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_DD__S__S_0_x_Rt_r		((inst)->instrinput[5].val.uint8)
#define ARM_VMOVS_SD__S_0___IADDR		((inst)->addr)
#define ARM_VMOVS_SD__S_0___ISIZE		32
#define ARM_VMOVS_SD__S_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_SD__S_0_x_op_		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_SD__S_0_x_Rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_SD__S_0_x_Vn__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_SD__S_0_x_Vn__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_F64_DD__DD_0___IADDR		((inst)->addr)
#define ARM_VMOVS_F64_DD__DD_0___ISIZE		32
#define ARM_VMOVS_F64_DD__DD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_F64_DD__DD_0_x_x_Vm__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F64_DD__DD_0_x_x_Vm__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F64_DD__DD_0_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F64_DD__DD_0_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_F32_SD__SD_0___IADDR		((inst)->addr)
#define ARM_VMOVS_F32_SD__SD_0___ISIZE		32
#define ARM_VMOVS_F32_SD__SD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_F32_SD__SD_0_x_x_Vm__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F32_SD__SD_0_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F32_SD__SD_0_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F32_SD__SD_0_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_F64_DD___ID_0___IADDR		((inst)->addr)
#define ARM_VMOVS_F64_DD___ID_0___ISIZE		32
#define ARM_VMOVS_F64_DD___ID_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_F64_DD___ID_0_x_x_Vd__r		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F64_DD___ID_0_x_x_Vd__p		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F64_DD___ID_0_x_x_imm4L		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F64_DD___ID_0_x_x_imm4H		((inst)->instrinput[4].val.uint8)
#define ARM_VMOVS_F32_SD___ID_0___IADDR		((inst)->addr)
#define ARM_VMOVS_F32_SD___ID_0___ISIZE		32
#define ARM_VMOVS_F32_SD___ID_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VMOVS_F32_SD___ID_0_x_x_Vd__p		((inst)->instrinput[1].val.uint8)
#define ARM_VMOVS_F32_SD___ID_0_x_x_Vd__r		((inst)->instrinput[2].val.uint8)
#define ARM_VMOVS_F32_SD___ID_0_x_x_imm4L		((inst)->instrinput[3].val.uint8)
#define ARM_VMOVS_F32_SD___ID_0_x_x_imm4H		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0___IADDR		((inst)->addr)
#define ARM_VSS_F64_DD__DD__DD_0___ISIZE		32
#define ARM_VSS_F64_DD__DD__DD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vd__r		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vm__r		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_Vm__p		((inst)->instrinput[6].val.uint8)
#define ARM_VSS_F64_DD__DD__DD_0_x_x_op_		((inst)->instrinput[7].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0___IADDR		((inst)->addr)
#define ARM_VSS_F32_SD__SD__SD_0___ISIZE		32
#define ARM_VSS_F32_SD__SD__SD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vn__r		((inst)->instrinput[2].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vd__p		((inst)->instrinput[3].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vm__p		((inst)->instrinput[5].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_Vm__r		((inst)->instrinput[6].val.uint8)
#define ARM_VSS_F32_SD__SD__SD_0_x_x_op_		((inst)->instrinput[7].val.uint8)
#define ARM_VS_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VS_F32_QD__QD__QD___ISIZE		32
#define ARM_VS_F32_QD__QD__QD_x_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VS_F32_QD__QD__QD_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VS_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VS_F32_DD__DD__DD___ISIZE		32
#define ARM_VS_F32_DD__DD__DD_x_x_op_		((inst)->instrinput[0].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VS_F32_DD__DD__DD_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1___IADDR		((inst)->addr)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1___ISIZE		32
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_U		((inst)->instrinput[1].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_Vd__p		((inst)->instrinput[4].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__1_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2___IADDR		((inst)->addr)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2___ISIZE		32
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_U		((inst)->instrinput[1].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VLDRS_DD___LT_S___ISD_RT__2_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB____IADDR		((inst)->addr)
#define ARM_VLDMDBS_S_21___LB_S_RB____ISIZE		32
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB____IADDR		((inst)->addr)
#define ARM_VLDMIAS_SS___LB_S_RB____ISIZE		32
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_W		((inst)->instrinput[1].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_D		((inst)->instrinput[2].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_Rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_imm8		((inst)->instrinput[4].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__0___IADDR		((inst)->addr)
#define ARM_VLDMDBS_S_21___LB_S_RB__0___ISIZE		32
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_D		((inst)->instrinput[1].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_Rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_imm8		((inst)->instrinput[3].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VLDMDBS_S_21___LB_S_RB__0_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0___IADDR		((inst)->addr)
#define ARM_VLDMIAS_SS___LB_S_RB__0___ISIZE		32
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_W		((inst)->instrinput[1].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_D		((inst)->instrinput[2].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_Rn_r		((inst)->instrinput[3].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_imm8		((inst)->instrinput[4].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VLDMIAS_SS___LB_S_RB__0_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0___IADDR		((inst)->addr)
#define ARM_VDIVS_F64_DD__DD__DD_0___ISIZE		32
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VDIVS_F64_DD__DD__DD_0_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0___IADDR		((inst)->addr)
#define ARM_VDIVS_F32_SD__SD__SD_0___ISIZE		32
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vn__r		((inst)->instrinput[2].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VDIVS_F32_SD__SD__SD_0_x_x_Vd__r		((inst)->instrinput[6].val.uint8)
#define ARM_VCVT_FD_FD_S__S___IADDR		((inst)->addr)
#define ARM_VCVT_FD_FD_S__S___ISIZE		32
#define ARM_VCVT_FD_FD_S__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VCVT_FD_FD_S__S_x_D_		((inst)->instrinput[1].val.uint8)
#define ARM_VCVT_FD_FD_S__S_x_Vd		((inst)->instrinput[2].val.uint8)
#define ARM_VCVT_FD_FD_S__S_x_sz		((inst)->instrinput[3].val.uint8)
#define ARM_VCVT_FD_FD_S__S_x_Vm		((inst)->instrinput[4].val.uint8)
#define ARM_VCVT_FD_FD_S__S_x_M		((inst)->instrinput[5].val.uint8)
#define ARM_VCVTSS_S_S_S_S___IADDR		((inst)->addr)
#define ARM_VCVTSS_S_S_S_S___ISIZE		32
#define ARM_VCVTSS_S_S_S_S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VCVTSS_S_S_S_S_x_D_		((inst)->instrinput[1].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_opc2		((inst)->instrinput[2].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_Vd		((inst)->instrinput[3].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_sz		((inst)->instrinput[4].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_op_		((inst)->instrinput[5].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_Vm		((inst)->instrinput[6].val.uint8)
#define ARM_VCVTSS_S_S_S_S_x_M		((inst)->instrinput[7].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0___IADDR		((inst)->addr)
#define ARM_VADDS_F64_DD__DD__DD_0___ISIZE		32
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vn__r		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vn__p		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vm__r		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vm__p		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vd__r		((inst)->instrinput[5].val.uint8)
#define ARM_VADDS_F64_DD__DD__DD_0_x_x_Vd__p		((inst)->instrinput[6].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0___IADDR		((inst)->addr)
#define ARM_VADDS_F32_SD__SD__SD_0___ISIZE		32
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vn__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vm__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VADDS_F32_SD__SD__SD_0_x_x_Vd__r		((inst)->instrinput[6].val.uint8)
#define ARM_VADD_F32_QD__QD__QD___IADDR		((inst)->addr)
#define ARM_VADD_F32_QD__QD__QD___ISIZE		32
#define ARM_VADD_F32_QD__QD__QD_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VADD_F32_QD__QD__QD_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADD_F32_QD__QD__QD_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADD_F32_QD__QD__QD_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADD_F32_QD__QD__QD_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADD_F32_QD__QD__QD_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_VADD_F32_DD__DD__DD___IADDR		((inst)->addr)
#define ARM_VADD_F32_DD__DD__DD___ISIZE		32
#define ARM_VADD_F32_DD__DD__DD_x_x_Vn__r		((inst)->instrinput[0].val.uint8)
#define ARM_VADD_F32_DD__DD__DD_x_x_Vn__p		((inst)->instrinput[1].val.uint8)
#define ARM_VADD_F32_DD__DD__DD_x_x_Vm__r		((inst)->instrinput[2].val.uint8)
#define ARM_VADD_F32_DD__DD__DD_x_x_Vm__p		((inst)->instrinput[3].val.uint8)
#define ARM_VADD_F32_DD__DD__DD_x_x_Vd__r		((inst)->instrinput[4].val.uint8)
#define ARM_VADD_F32_DD__DD__DD_x_x_Vd__p		((inst)->instrinput[5].val.uint8)
#define ARM_DMB_S___IADDR		((inst)->addr)
#define ARM_DMB_S___ISIZE		32
#define ARM_DMB_S_x_option		((inst)->instrinput[0].val.uint8)
#define ARM_MRSS_S__CPSR___IADDR		((inst)->addr)
#define ARM_MRSS_S__CPSR___ISIZE		32
#define ARM_MRSS_S__CPSR_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MRSS_S__CPSR_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MRSS_S__SPSR___IADDR		((inst)->addr)
#define ARM_MRSS_S__SPSR___ISIZE		32
#define ARM_MRSS_S__SPSR_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MRSS_S__SPSR_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR___S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR___S___ISIZE		32
#define ARM_MSRS_CPSR___S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR___S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_FSXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FSXC__S___ISIZE		32
#define ARM_MSRS_CPSR_FSXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_FSXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_SXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SXC__S___ISIZE		32
#define ARM_MSRS_CPSR_SXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_SXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_FXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FXC__S___ISIZE		32
#define ARM_MSRS_CPSR_FXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_FXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_FSX__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FSX__S___ISIZE		32
#define ARM_MSRS_CPSR_FSX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_FSX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_XC__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_XC__S___ISIZE		32
#define ARM_MSRS_CPSR_XC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_XC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_SC__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SC__S___ISIZE		32
#define ARM_MSRS_CPSR_SC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_SC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_SX__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SX__S___ISIZE		32
#define ARM_MSRS_CPSR_SX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_SX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_F__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_F__S___ISIZE		32
#define ARM_MSRS_CPSR_F__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_F__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_FX__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FX__S___ISIZE		32
#define ARM_MSRS_CPSR_FX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_FX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_FS__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FS__S___ISIZE		32
#define ARM_MSRS_CPSR_FS__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_FS__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_C__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_C__S___ISIZE		32
#define ARM_MSRS_CPSR_C__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_C__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_X__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_X__S___ISIZE		32
#define ARM_MSRS_CPSR_X__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_X__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_S__S___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_S__S___ISIZE		32
#define ARM_MSRS_CPSR_S__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_S__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR_F__S_0___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_F__S_0___ISIZE		32
#define ARM_MSRS_CPSR_F__S_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_CPSR_F__S_0_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR___S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR___S___ISIZE		32
#define ARM_MSRS_SPSR___S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR___S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_FSXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FSXC__S___ISIZE		32
#define ARM_MSRS_SPSR_FSXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_FSXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_SXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SXC__S___ISIZE		32
#define ARM_MSRS_SPSR_SXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_SXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_FXC__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FXC__S___ISIZE		32
#define ARM_MSRS_SPSR_FXC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_FXC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_FSX__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FSX__S___ISIZE		32
#define ARM_MSRS_SPSR_FSX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_FSX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_XC__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_XC__S___ISIZE		32
#define ARM_MSRS_SPSR_XC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_XC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_SC__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SC__S___ISIZE		32
#define ARM_MSRS_SPSR_SC__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_SC__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_SX__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SX__S___ISIZE		32
#define ARM_MSRS_SPSR_SX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_SX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_F__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_F__S___ISIZE		32
#define ARM_MSRS_SPSR_F__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_F__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_FX__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FX__S___ISIZE		32
#define ARM_MSRS_SPSR_FX__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_FX__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_FS__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FS__S___ISIZE		32
#define ARM_MSRS_SPSR_FS__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_FS__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_C__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_C__S___ISIZE		32
#define ARM_MSRS_SPSR_C__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_C__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_X__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_X__S___ISIZE		32
#define ARM_MSRS_SPSR_X__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_X__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_S__S___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_S__S___ISIZE		32
#define ARM_MSRS_SPSR_S__S_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_S__S_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_SPSR_F__S_0___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_F__S_0___ISIZE		32
#define ARM_MSRS_SPSR_F__S_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MSRS_SPSR_F__S_0_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_MSRS_CPSR____ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR____ID___ISIZE		32
#define ARM_MSRS_CPSR____ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR____ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR____ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_FSXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FSXC___ID___ISIZE		32
#define ARM_MSRS_CPSR_FSXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_FSXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_FSXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_SXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SXC___ID___ISIZE		32
#define ARM_MSRS_CPSR_SXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_SXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_SXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_FXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FXC___ID___ISIZE		32
#define ARM_MSRS_CPSR_FXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_FXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_FXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_FSX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FSX___ID___ISIZE		32
#define ARM_MSRS_CPSR_FSX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_FSX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_FSX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_XC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_XC___ID___ISIZE		32
#define ARM_MSRS_CPSR_XC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_XC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_XC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_SC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SC___ID___ISIZE		32
#define ARM_MSRS_CPSR_SC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_SC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_SC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_SX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_SX___ID___ISIZE		32
#define ARM_MSRS_CPSR_SX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_SX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_SX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_F___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_F___ID___ISIZE		32
#define ARM_MSRS_CPSR_F___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_F___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_F___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_FX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FX___ID___ISIZE		32
#define ARM_MSRS_CPSR_FX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_FX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_FX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_FS___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_FS___ID___ISIZE		32
#define ARM_MSRS_CPSR_FS___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_FS___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_FS___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_C___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_C___ID___ISIZE		32
#define ARM_MSRS_CPSR_C___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_C___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_C___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_X___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_X___ID___ISIZE		32
#define ARM_MSRS_CPSR_X___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_X___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_X___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_S___ID___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_S___ID___ISIZE		32
#define ARM_MSRS_CPSR_S___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_S___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_CPSR_F___ID_0___IADDR		((inst)->addr)
#define ARM_MSRS_CPSR_F___ID_0___ISIZE		32
#define ARM_MSRS_CPSR_F___ID_0_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_CPSR_F___ID_0_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_CPSR_F___ID_0_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR____ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR____ID___ISIZE		32
#define ARM_MSRS_SPSR____ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR____ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR____ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_FSXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FSXC___ID___ISIZE		32
#define ARM_MSRS_SPSR_FSXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_FSXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_FSXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_SXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SXC___ID___ISIZE		32
#define ARM_MSRS_SPSR_SXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_SXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_SXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_FXC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FXC___ID___ISIZE		32
#define ARM_MSRS_SPSR_FXC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_FXC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_FXC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_FSX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FSX___ID___ISIZE		32
#define ARM_MSRS_SPSR_FSX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_FSX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_FSX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_XC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_XC___ID___ISIZE		32
#define ARM_MSRS_SPSR_XC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_XC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_XC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_SC___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SC___ID___ISIZE		32
#define ARM_MSRS_SPSR_SC___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_SC___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_SC___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_SX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_SX___ID___ISIZE		32
#define ARM_MSRS_SPSR_SX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_SX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_SX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_F___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_F___ID___ISIZE		32
#define ARM_MSRS_SPSR_F___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_F___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_F___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_FX___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FX___ID___ISIZE		32
#define ARM_MSRS_SPSR_FX___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_FX___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_FX___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_FS___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_FS___ID___ISIZE		32
#define ARM_MSRS_SPSR_FS___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_FS___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_FS___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_C___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_C___ID___ISIZE		32
#define ARM_MSRS_SPSR_C___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_C___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_C___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_X___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_X___ID___ISIZE		32
#define ARM_MSRS_SPSR_X___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_X___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_X___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_S___ID___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_S___ID___ISIZE		32
#define ARM_MSRS_SPSR_S___ID_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_S___ID_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MSRS_SPSR_F___ID_0___IADDR		((inst)->addr)
#define ARM_MSRS_SPSR_F___ID_0___ISIZE		32
#define ARM_MSRS_SPSR_F___ID_0_x_shifter_operand_rotate		((inst)->instrinput[0].val.uint8)
#define ARM_MSRS_SPSR_F___ID_0_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MSRS_SPSR_F___ID_0_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D___IADDR		((inst)->addr)
#define ARM_CDPSS_D__D__D__D__D__D___ISIZE		32
#define ARM_CDPSS_D__D__D__D__D__D_x_opc2		((inst)->instrinput[0].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D_x_CRm		((inst)->instrinput[1].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D_x_coproc		((inst)->instrinput[2].val.uint32)
#define ARM_CDPSS_D__D__D__D__D__D_x_CRd		((inst)->instrinput[3].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D_x_CRn		((inst)->instrinput[4].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D_x_cond_cond		((inst)->instrinput[5].val.uint8)
#define ARM_CDPSS_D__D__D__D__D__D_x_opc1		((inst)->instrinput[6].val.uint8)
#define ARM_BFIS_S___ID___ID___IADDR		((inst)->addr)
#define ARM_BFIS_S___ID___ID___ISIZE		32
#define ARM_BFIS_S___ID___ID_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_BFIS_S___ID___ID_x_rd_r		((inst)->instrinput[1].val.uint8)
#define ARM_BFIS_S___ID___ID_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_BFIS_S___ID___ID_x_lsb		((inst)->instrinput[3].val.uint8)
#define ARM_BFIS_S___ID___ID_x_msb		((inst)->instrinput[4].val.uint8)
#define ARM_CLZS_S__S_0___IADDR		((inst)->addr)
#define ARM_CLZS_S__S_0___ISIZE		32
#define ARM_CLZS_S__S_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_CLZS_S__S_0_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_CLZS_S__S_0_x_rd_r		((inst)->instrinput[2].val.uint8)
#define ARM_SWPS_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_SWPS_S__S___LT_S_RT____ISIZE		32
#define ARM_SWPS_S__S___LT_S_RT__x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_SWPS_S__S___LT_S_RT__x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SWPS_S__S___LT_S_RT__x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SWPS_S__S___LT_S_RT__x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_SWPSB_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_SWPSB_S__S___LT_S_RT____ISIZE		32
#define ARM_SWPSB_S__S___LT_S_RT__x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_SWPSB_S__S___LT_S_RT__x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_SWPSB_S__S___LT_S_RT__x_rm_r		((inst)->instrinput[2].val.uint8)
#define ARM_SWPSB_S__S___LT_S_RT__x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_UMLALSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_UMLALSS_S__S__S__S___ISIZE		32
#define ARM_UMLALSS_S__S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_UMLALSS_S__S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_UMLALSS_S__S__S__S_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMLALSS_S__S__S__S_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_UMLALSS_S__S__S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_UMLALSS_S__S__S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_SMLALSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMLALSS_S__S__S__S___ISIZE		32
#define ARM_SMLALSS_S__S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMLALSS_S__S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMLALSS_S__S__S__S_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMLALSS_S__S__S__S_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMLALSS_S__S__S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_SMLALSS_S__S__S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_UMULLSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_UMULLSS_S__S__S__S___ISIZE		32
#define ARM_UMULLSS_S__S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_UMULLSS_S__S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_UMULLSS_S__S__S__S_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_UMULLSS_S__S__S__S_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_UMULLSS_S__S__S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_UMULLSS_S__S__S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_SMULLSS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_SMULLSS_S__S__S__S___ISIZE		32
#define ARM_SMULLSS_S__S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_SMULLSS_S__S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_SMULLSS_S__S__S__S_x_rdlo_r		((inst)->instrinput[2].val.uint8)
#define ARM_SMULLSS_S__S__S__S_x_rdhi_r		((inst)->instrinput[3].val.uint8)
#define ARM_SMULLSS_S__S__S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_SMULLSS_S__S__S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_MULSS_S__S__S___IADDR		((inst)->addr)
#define ARM_MULSS_S__S__S___ISIZE		32
#define ARM_MULSS_S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_MULSS_S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_MULSS_S__S__S_x_rd_r		((inst)->instrinput[2].val.uint8)
#define ARM_MULSS_S__S__S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_MULSS_S__S__S_x_sets_set		((inst)->instrinput[4].val.uint8)
#define ARM_MLASS_S__S__S__S___IADDR		((inst)->addr)
#define ARM_MLASS_S__S__S__S___ISIZE		32
#define ARM_MLASS_S__S__S__S_x_rs_r		((inst)->instrinput[0].val.uint8)
#define ARM_MLASS_S__S__S__S_x_rm_r		((inst)->instrinput[1].val.uint8)
#define ARM_MLASS_S__S__S__S_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_MLASS_S__S__S__S_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_MLASS_S__S__S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_MLASS_S__S__S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_SWIS_D___IADDR		((inst)->addr)
#define ARM_SWIS_D___ISIZE		32
#define ARM_SWIS_D_x_Immed_24_n		((inst)->instrinput[0].val.int32)
#define ARM_SWIS_D_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_LDMSS_SS___LB_S_RB_S___IADDR		((inst)->addr)
#define ARM_LDMSS_SS___LB_S_RB_S___ISIZE		32
#define ARM_LDMSS_SS___LB_S_RB_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDMSS_SS___LB_S_RB_S_x_reglist_r		((inst)->instrinput[1].val.uint16)
#define ARM_LDMSS_SS___LB_S_RB_S_x_setw		((inst)->instrinput[2].val.uint8)
#define ARM_LDMSS_SS___LB_S_RB_S_x_sets		((inst)->instrinput[3].val.uint8)
#define ARM_LDMSS_SS___LB_S_RB_S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_LDMSS_SS___LB_S_RB_S_x_adr_mode		((inst)->instrinput[5].val.uint8)
#define ARM_STMSS_SS___LB_S_RB_S___IADDR		((inst)->addr)
#define ARM_STMSS_SS___LB_S_RB_S___ISIZE		32
#define ARM_STMSS_SS___LB_S_RB_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_STMSS_SS___LB_S_RB_S_x_reglist_r		((inst)->instrinput[1].val.uint16)
#define ARM_STMSS_SS___LB_S_RB_S_x_setw		((inst)->instrinput[2].val.uint8)
#define ARM_STMSS_SS___LB_S_RB_S_x_sets		((inst)->instrinput[3].val.uint8)
#define ARM_STMSS_SS___LB_S_RB_S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_STMSS_SS___LB_S_RB_S_x_adr_mode		((inst)->instrinput[5].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_STREXHS_S__S___LT_S_RT__0___ISIZE		32
#define ARM_STREXHS_S__S___LT_S_RT__0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STREXHS_S__S___LT_S_RT__0_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT__0_x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXHS_S__S___LT_S_RT__0_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_STREXDS_S__S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_STREXDS_S__S___LT_S_RT____ISIZE		32
#define ARM_STREXDS_S__S___LT_S_RT__x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STREXDS_S__S___LT_S_RT__x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXDS_S__S___LT_S_RT__x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXDS_S__S___LT_S_RT__x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_STREXBS_S__S___LT_S_RT__0___ISIZE		32
#define ARM_STREXBS_S__S___LT_S_RT__0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STREXBS_S__S___LT_S_RT__0_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT__0_x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXBS_S__S___LT_S_RT__0_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_STREXS_S__S___LT_S_RT__0___ISIZE		32
#define ARM_STREXS_S__S___LT_S_RT__0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STREXS_S__S___LT_S_RT__0_x_rn_r		((inst)->instrinput[1].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__0_x_rt_r		((inst)->instrinput[2].val.uint8)
#define ARM_STREXS_S__S___LT_S_RT__0_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDREXHS_S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_LDREXHS_S___LT_S_RT__0___ISIZE		32
#define ARM_LDREXHS_S___LT_S_RT__0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDREXHS_S___LT_S_RT__0_x_rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXHS_S___LT_S_RT__0_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDREXDS_S___LT_S_RT____IADDR		((inst)->addr)
#define ARM_LDREXDS_S___LT_S_RT____ISIZE		32
#define ARM_LDREXDS_S___LT_S_RT__x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDREXDS_S___LT_S_RT__x_rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXDS_S___LT_S_RT__x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__1___IADDR		((inst)->addr)
#define ARM_LDREXBS_S___LT_S_RT__1___ISIZE		32
#define ARM_LDREXBS_S___LT_S_RT__1_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDREXBS_S___LT_S_RT__1_x_rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXBS_S___LT_S_RT__1_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDREXS_S___LT_S_RT__0___IADDR		((inst)->addr)
#define ARM_LDREXS_S___LT_S_RT__0___ISIZE		32
#define ARM_LDREXS_S___LT_S_RT__0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDREXS_S___LT_S_RT__0_x_rt_r		((inst)->instrinput[1].val.uint8)
#define ARM_LDREXS_S___LT_S_RT__0_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS___IADDR		((inst)->addr)
#define ARM_STRDS_S___LT_SS__S_IUSS___ISIZE		32
#define ARM_STRDS_S___LT_SS__S_IUSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_rt_r		((inst)->instrinput[5].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_imml		((inst)->instrinput[6].val.uint8)
#define ARM_STRDS_S___LT_SS__S_IUSS_x_immh		((inst)->instrinput[7].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS___IADDR		((inst)->addr)
#define ARM_LDRSSH_S___LT_SS__SSSS___ISIZE		32
#define ARM_LDRSSH_S___LT_SS__SSSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_rm_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSH_S___LT_SS__SSSS_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS___IADDR		((inst)->addr)
#define ARM_LDRSSH_S___LT_SS__S_IUSS___ISIZE		32
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_rd_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_imml		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSSH_S___LT_SS__S_IUSS_x_immh		((inst)->instrinput[7].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS___IADDR		((inst)->addr)
#define ARM_LDRSSB_S___LT_SS__SSSS___ISIZE		32
#define ARM_LDRSSB_S___LT_SS__SSSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_rm_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSB_S___LT_SS__SSSS_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS___IADDR		((inst)->addr)
#define ARM_LDRSSB_S___LT_SS__S_IUSS___ISIZE		32
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_rd_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_imml		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSSB_S___LT_SS__S_IUSS_x_immh		((inst)->instrinput[7].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS___IADDR		((inst)->addr)
#define ARM_LDRSH_S___LT_SS__SSSS___ISIZE		32
#define ARM_LDRSH_S___LT_SS__SSSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSH_S___LT_SS__SSSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS_x_rm_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSH_S___LT_SS__SSSS_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS___IADDR		((inst)->addr)
#define ARM_LDRSH_S___LT_SS__S_IUSS___ISIZE		32
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_rd_r		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_imml		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSH_S___LT_SS__S_IUSS_x_immh		((inst)->instrinput[7].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS___IADDR		((inst)->addr)
#define ARM_STRHS_S___LT_SS__SSSS___ISIZE		32
#define ARM_STRHS_S___LT_SS__SSSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STRHS_S___LT_SS__SSSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS_x_rm_r		((inst)->instrinput[5].val.uint8)
#define ARM_STRHS_S___LT_SS__SSSS_x_rd_r		((inst)->instrinput[6].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS___IADDR		((inst)->addr)
#define ARM_STRHS_S___LT_SS__S_IUSS___ISIZE		32
#define ARM_STRHS_S___LT_SS__S_IUSS_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_setpre		((inst)->instrinput[1].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_setu		((inst)->instrinput[2].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_rd_r		((inst)->instrinput[5].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_imml		((inst)->instrinput[6].val.uint8)
#define ARM_STRHS_S___LT_SS__S_IUSS_x_immh		((inst)->instrinput[7].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS___IADDR		((inst)->addr)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS___ISIZE		32
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_setw		((inst)->instrinput[5].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_setb		((inst)->instrinput[6].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_setu		((inst)->instrinput[7].val.uint8)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_cond_cond		((inst)->instrinput[8].val.uint32)
#define ARM_STRSSS_S___LT_SS__SS__S__IDSS_x_setpre		((inst)->instrinput[9].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS___IADDR		((inst)->addr)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS___ISIZE		32
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_rn_r		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_setw		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_setb		((inst)->instrinput[6].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_setu		((inst)->instrinput[7].val.uint8)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_cond_cond		((inst)->instrinput[8].val.uint32)
#define ARM_LDRSSS_S___LT_SS__SS__S__IDSS_x_setpre		((inst)->instrinput[9].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS___IADDR		((inst)->addr)
#define ARM_STRSSS_S___LT_SS__S_IDSS___ISIZE		32
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_offset12_n		((inst)->instrinput[1].val.uint16)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_setb		((inst)->instrinput[4].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_setu		((inst)->instrinput[5].val.uint8)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_cond_cond		((inst)->instrinput[6].val.uint32)
#define ARM_STRSSS_S___LT_SS__S_IDSS_x_setpre		((inst)->instrinput[7].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS___IADDR		((inst)->addr)
#define ARM_LDRSSS_S___LT_SS__S_IDSS___ISIZE		32
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_offset12_n		((inst)->instrinput[1].val.uint16)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_rn_r		((inst)->instrinput[2].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_setw		((inst)->instrinput[3].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_setb		((inst)->instrinput[4].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_setu		((inst)->instrinput[5].val.uint8)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_cond_cond		((inst)->instrinput[6].val.uint32)
#define ARM_LDRSSS_S___LT_SS__S_IDSS_x_setpre		((inst)->instrinput[7].val.uint8)
#define ARM_BSS__40___IADDR		((inst)->addr)
#define ARM_BSS__40___ISIZE		32
#define ARM_BSS__40_x_setl		((inst)->instrinput[0].val.uint8)
#define ARM_BSS__40_x_cond_cond		((inst)->instrinput[1].val.uint8)
#define ARM_BSS__40_x_signed_immed_24_n		((inst)->instrinput[2].val.int32)
#define ARM_BLXS_S_0___IADDR		((inst)->addr)
#define ARM_BLXS_S_0___ISIZE		32
#define ARM_BLXS_S_0_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_BLXS_S_0_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_BXS_S_0___IADDR		((inst)->addr)
#define ARM_BXS_S_0___ISIZE		32
#define ARM_BXS_S_0_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_BXS_S_0_x_cond_cond		((inst)->instrinput[1].val.uint32)
#define ARM_MOVS_S___ID___IADDR		((inst)->addr)
#define ARM_MOVS_S___ID___ISIZE		32
#define ARM_MOVS_S___ID_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MOVS_S___ID_x_imm4		((inst)->instrinput[1].val.uint8)
#define ARM_MOVS_S___ID_x_imm12		((inst)->instrinput[2].val.uint16)
#define ARM_MOVS_S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_MOVTS_S___ID_0___IADDR		((inst)->addr)
#define ARM_MOVTS_S___ID_0___ISIZE		32
#define ARM_MOVTS_S___ID_0_x_cond_cond		((inst)->instrinput[0].val.uint32)
#define ARM_MOVTS_S___ID_0_x_imm4		((inst)->instrinput[1].val.uint8)
#define ARM_MOVTS_S___ID_0_x_imm12		((inst)->instrinput[2].val.uint16)
#define ARM_MOVTS_S___ID_0_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_TSTS_S___ID___IADDR		((inst)->addr)
#define ARM_TSTS_S___ID___ISIZE		32
#define ARM_TSTS_S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TSTS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_TSTS_S___ID_x_cond_cond		((inst)->instrinput[2].val.uint32)
#define ARM_TSTS_S___ID_x_shifter_operand_v		((inst)->instrinput[3].val.uint8)
#define ARM_TSTS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_TSTS_S__S__S_S___ISIZE		32
#define ARM_TSTS_S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TSTS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_TSTS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_TSTS_S__S__S_S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_TSTS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_TSTS_S__S___IADDR		((inst)->addr)
#define ARM_TSTS_S__S___ISIZE		32
#define ARM_TSTS_S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TSTS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_TSTS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_TSTS_S__S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_TSTS_S__S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_TEQS_S___ID___IADDR		((inst)->addr)
#define ARM_TEQS_S___ID___ISIZE		32
#define ARM_TEQS_S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TEQS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_TEQS_S___ID_x_cond_cond		((inst)->instrinput[2].val.uint32)
#define ARM_TEQS_S___ID_x_shifter_operand_v		((inst)->instrinput[3].val.uint8)
#define ARM_TEQS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_TEQS_S__S__S_S___ISIZE		32
#define ARM_TEQS_S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TEQS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_TEQS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_TEQS_S__S__S_S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_TEQS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_TEQS_S__S___IADDR		((inst)->addr)
#define ARM_TEQS_S__S___ISIZE		32
#define ARM_TEQS_S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_TEQS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_TEQS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_TEQS_S__S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_TEQS_S__S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_SUBSS_S__S___ID___ISIZE		32
#define ARM_SUBSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SUBSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_SUBSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_SUBSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_SUBSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_SUBSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_SUBSS_S__S__S__S_S___ISIZE		32
#define ARM_SUBSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SUBSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_SUBSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_SUBSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_SUBSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_SUBSS_S__S__S___IADDR		((inst)->addr)
#define ARM_SUBSS_S__S__S___ISIZE		32
#define ARM_SUBSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SUBSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_SUBSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_SUBSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_SUBSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_SUBSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_SUBSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_SBCSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_SBCSS_S__S___ID___ISIZE		32
#define ARM_SBCSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SBCSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_SBCSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_SBCSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_SBCSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_SBCSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_SBCSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_SBCSS_S__S__S__S_S___ISIZE		32
#define ARM_SBCSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SBCSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_SBCSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_SBCSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_SBCSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_SBCSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_SBCSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_SBCSS_S__S__S___IADDR		((inst)->addr)
#define ARM_SBCSS_S__S__S___ISIZE		32
#define ARM_SBCSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_SBCSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_SBCSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_SBCSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_SBCSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_SBCSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_SBCSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_RSCSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_RSCSS_S__S___ID___ISIZE		32
#define ARM_RSCSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSCSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_RSCSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_RSCSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSCSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_RSCSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_RSCSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_RSCSS_S__S__S__S_S___ISIZE		32
#define ARM_RSCSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSCSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_RSCSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_RSCSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSCSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_RSCSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_RSCSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_RSCSS_S__S__S___IADDR		((inst)->addr)
#define ARM_RSCSS_S__S__S___ISIZE		32
#define ARM_RSCSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSCSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_RSCSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_RSCSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSCSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_RSCSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_RSCSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_RSBSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_RSBSS_S__S___ID___ISIZE		32
#define ARM_RSBSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSBSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_RSBSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSBSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_RSBSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_RSBSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_RSBSS_S__S__S__S_S___ISIZE		32
#define ARM_RSBSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSBSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_RSBSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSBSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_RSBSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_RSBSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_RSBSS_S__S__S___IADDR		((inst)->addr)
#define ARM_RSBSS_S__S__S___ISIZE		32
#define ARM_RSBSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_RSBSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_RSBSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_RSBSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_RSBSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_RSBSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_RSBSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ORRSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_ORRSS_S__S___ID___ISIZE		32
#define ARM_ORRSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ORRSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_ORRSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_ORRSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORRSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_ORRSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_ORRSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_ORRSS_S__S__S__S_S___ISIZE		32
#define ARM_ORRSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ORRSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_ORRSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ORRSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORRSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ORRSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ORRSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ORRSS_S__S__S___IADDR		((inst)->addr)
#define ARM_ORRSS_S__S__S___ISIZE		32
#define ARM_ORRSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ORRSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_ORRSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ORRSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ORRSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ORRSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ORRSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_MVNSS_S___ID___IADDR		((inst)->addr)
#define ARM_MVNSS_S___ID___ISIZE		32
#define ARM_MVNSS_S___ID_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MVNSS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_MVNSS_S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MVNSS_S___ID_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_MVNSS_S___ID_x_sets_set		((inst)->instrinput[4].val.uint8)
#define ARM_MVNSS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_MVNSS_S__S__S_S___ISIZE		32
#define ARM_MVNSS_S__S__S_S_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MVNSS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_MVNSS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_MVNSS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_MVNSS_S__S__S_S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_MVNSS_S__S__S_S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_MVNSS_S__S___IADDR		((inst)->addr)
#define ARM_MVNSS_S__S___ISIZE		32
#define ARM_MVNSS_S__S_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MVNSS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_MVNSS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_MVNSS_S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_MVNSS_S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_MVNSS_S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_MOVSS_S___ID___IADDR		((inst)->addr)
#define ARM_MOVSS_S___ID___ISIZE		32
#define ARM_MOVSS_S___ID_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MOVSS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_MOVSS_S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_MOVSS_S___ID_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_MOVSS_S___ID_x_sets_set		((inst)->instrinput[4].val.uint8)
#define ARM_MOVSS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_MOVSS_S__S__S_S___ISIZE		32
#define ARM_MOVSS_S__S__S_S_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MOVSS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_MOVSS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_MOVSS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_MOVSS_S__S__S_S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_MOVSS_S__S__S_S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_MOVSS_S__S___IADDR		((inst)->addr)
#define ARM_MOVSS_S__S___ISIZE		32
#define ARM_MOVSS_S__S_x_rd_r		((inst)->instrinput[0].val.uint8)
#define ARM_MOVSS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_MOVSS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_MOVSS_S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_MOVSS_S__S_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_MOVSS_S__S_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_EORSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_EORSS_S__S___ID___ISIZE		32
#define ARM_EORSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_EORSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_EORSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_EORSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_EORSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_EORSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_EORSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_EORSS_S__S__S__S_S___ISIZE		32
#define ARM_EORSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_EORSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_EORSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_EORSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_EORSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_EORSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_EORSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_EORSS_S__S__S___IADDR		((inst)->addr)
#define ARM_EORSS_S__S__S___ISIZE		32
#define ARM_EORSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_EORSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_EORSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_EORSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_EORSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_EORSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_EORSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_CMPS_S___ID___IADDR		((inst)->addr)
#define ARM_CMPS_S___ID___ISIZE		32
#define ARM_CMPS_S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_S___ID_x_cond_cond		((inst)->instrinput[2].val.uint32)
#define ARM_CMPS_S___ID_x_shifter_operand_v		((inst)->instrinput[3].val.uint8)
#define ARM_CMPS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_CMPS_S__S__S_S___ISIZE		32
#define ARM_CMPS_S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_CMPS_S__S__S_S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_CMPS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_CMPS_S__S___IADDR		((inst)->addr)
#define ARM_CMPS_S__S___ISIZE		32
#define ARM_CMPS_S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMPS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_CMPS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_CMPS_S__S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_CMPS_S__S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_CMNS_S___ID___IADDR		((inst)->addr)
#define ARM_CMNS_S___ID___ISIZE		32
#define ARM_CMNS_S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMNS_S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_CMNS_S___ID_x_cond_cond		((inst)->instrinput[2].val.uint32)
#define ARM_CMNS_S___ID_x_shifter_operand_v		((inst)->instrinput[3].val.uint8)
#define ARM_CMNS_S__S__S_S___IADDR		((inst)->addr)
#define ARM_CMNS_S__S__S_S___ISIZE		32
#define ARM_CMNS_S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMNS_S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_CMNS_S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_CMNS_S__S__S_S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_CMNS_S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_CMNS_S__S___IADDR		((inst)->addr)
#define ARM_CMNS_S__S___ISIZE		32
#define ARM_CMNS_S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_CMNS_S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_CMNS_S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_CMNS_S__S_x_cond_cond		((inst)->instrinput[3].val.uint32)
#define ARM_CMNS_S__S_x_shifter_operand_r_r		((inst)->instrinput[4].val.uint8)
#define ARM_BICSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_BICSS_S__S___ID___ISIZE		32
#define ARM_BICSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_BICSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_BICSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_BICSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_BICSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_BICSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_BICSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_BICSS_S__S__S__S_S___ISIZE		32
#define ARM_BICSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_BICSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_BICSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_BICSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_BICSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_BICSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_BICSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_BICSS_S__S__S___IADDR		((inst)->addr)
#define ARM_BICSS_S__S__S___ISIZE		32
#define ARM_BICSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_BICSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_BICSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_BICSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_BICSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_BICSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_BICSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ANDSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_ANDSS_S__S___ID___ISIZE		32
#define ARM_ANDSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ANDSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_ANDSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_ANDSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_ANDSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_ANDSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_ANDSS_S__S__S__S_S___ISIZE		32
#define ARM_ANDSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ANDSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_ANDSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ANDSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ANDSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ANDSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ANDSS_S__S__S___IADDR		((inst)->addr)
#define ARM_ANDSS_S__S__S___ISIZE		32
#define ARM_ANDSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ANDSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_ANDSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ANDSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ANDSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ANDSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ANDSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ADDSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_ADDSS_S__S__S__S_S___ISIZE		32
#define ARM_ADDSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADDSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_ADDSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ADDSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADDSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADDSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ADDSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ADDSS_S__S__S___IADDR		((inst)->addr)
#define ARM_ADDSS_S__S__S___ISIZE		32
#define ARM_ADDSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADDSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_ADDSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ADDSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADDSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADDSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ADDSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ADCSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_ADCSS_S__S___ID___ISIZE		32
#define ARM_ADCSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADCSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_ADCSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_ADCSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADCSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_ADCSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)
#define ARM_ADCSS_S__S__S__S_S___IADDR		((inst)->addr)
#define ARM_ADCSS_S__S__S__S_S___ISIZE		32
#define ARM_ADCSS_S__S__S__S_S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADCSS_S__S__S__S_S_x_shifter_operand_shiftAmt_r		((inst)->instrinput[1].val.uint8)
#define ARM_ADCSS_S__S__S__S_S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ADCSS_S__S__S__S_S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADCSS_S__S__S__S_S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADCSS_S__S__S__S_S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ADCSS_S__S__S__S_S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ADCSS_S__S__S___IADDR		((inst)->addr)
#define ARM_ADCSS_S__S__S___ISIZE		32
#define ARM_ADCSS_S__S__S_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADCSS_S__S__S_x_shifter_operand_shiftAmt		((inst)->instrinput[1].val.uint8)
#define ARM_ADCSS_S__S__S_x_shifter_operand_shiftKind		((inst)->instrinput[2].val.uint8)
#define ARM_ADCSS_S__S__S_x_shifter_operand_r_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADCSS_S__S__S_x_rd_r		((inst)->instrinput[4].val.uint8)
#define ARM_ADCSS_S__S__S_x_cond_cond		((inst)->instrinput[5].val.uint32)
#define ARM_ADCSS_S__S__S_x_sets_set		((inst)->instrinput[6].val.uint8)
#define ARM_ADDSS_S__S___ID___IADDR		((inst)->addr)
#define ARM_ADDSS_S__S___ID___ISIZE		32
#define ARM_ADDSS_S__S___ID_x_rn_r		((inst)->instrinput[0].val.uint8)
#define ARM_ADDSS_S__S___ID_x_shifter_operand_rotate		((inst)->instrinput[1].val.uint8)
#define ARM_ADDSS_S__S___ID_x_shifter_operand_v		((inst)->instrinput[2].val.uint8)
#define ARM_ADDSS_S__S___ID_x_rd_r		((inst)->instrinput[3].val.uint8)
#define ARM_ADDSS_S__S___ID_x_cond_cond		((inst)->instrinput[4].val.uint32)
#define ARM_ADDSS_S__S___ID_x_sets_set		((inst)->instrinput[5].val.uint8)


#endif /* GLISS_ARM_INCLUDE_ARM_MACROS_H */
