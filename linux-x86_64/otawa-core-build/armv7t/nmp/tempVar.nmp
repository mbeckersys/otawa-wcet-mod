
////////////////////////////////////////////////////
// Temp var declarations                          //
////////////////////////////////////////////////////

//Flag

var TMP_DOUBLE     [1, u64]
var TMP_REGSWORD   [1, s32]

//Signed 
var TMP_DWORD[1, s64]
var TMP_REG1 [1, s32]
var TMP_REG2 [1, s32]
var TMP_REG3 [1, s32]
var TMP_REG4 [1, s32]
var TMP_REG5 [1, s32]
var TMP_REG6 [1, s32]
var TMP_SHIFTED1 [1, s32]

var TMP64_REG1 [1, s64]
var TMP64_REG2 [1, s64]
var TMP64_REG3 [1, s64]
var TMP64_REG4 [1, s64]
var TMP64_REG5 [1, s64]
var TMP64_REG6 [1, s64]

//Unsigned 
var TMP_UDWORD[1, u64]
var TMP_UREG1 [1, u32]
var TMP_UREG2 [1, u32]
var TMP_UREG3 [1, u32]
var TMP_UREG4 [1, u32]
var TMP_UREG5 [1, u32]
var TMP_UREG6 [1, u32]

var TMP64_UREG1[1, u64]
var TMP64_UREG2[1, u64]
var TMP64_UREG3[1, u64]
var TMP64_UREG4[1, u64]
var TMP64_UREG5[1, u64]
var TMP64_UREG6[1, u64]


var TMP_REGLIST  [ 1 , u16 ]
var TMP_SWORD    [ 1 , s32 ]
var TMP_BYTE     [ 1 , s8 ]
var TMP_INC	 [ 1 , s8 ]
var TMP_LIMIT    [ 1 , s8 ]
var TMP_ROT      [ 1 , u4]
var TMP_IMM      [ 1 , u8]
var TMP_IMM2     [ 1 , u8]
var TMP_IMM3  [ 1 , u8]
var TMP_IMM4  [ 1 , u8]
var TMP_IMM8  [ 1 , u8]
var TMP_IMM16  [ 1 , u16]
var TMP_IMM32  [ 1 , u32]
var TMP_EA       [ 1 , address_t ]
var TMP_SETBIT   [ 1 , s8 ]
var TMP_START_ADDR	 [ 1 , u32]
var TMP_END_ADDR	 [ 1 , u32]
var TMP_CUR_ADDR     [ 1 , u32]
var TMP_BIT       [1, u1]
var TMP_ELEV      [1, s11]
var TMP_FIVE      [1, u5]
var TMP_INDEX1 [1, u4]
var TMP_INDEX2 [1, u4]
var TMP_INDEX3 [1, u4]
var TMP_HALF [1, s16]

// ARM ref flags
var carry[1, bool]
var setflags[1, bool]
var overflow[1, bool]
var wback[1, bool]

// ARM ref registers
var d[1, card(4)]
var n[1, card(4)]
var m[1, card(4)]

// ARM ref data
var address[1, card(32)]
var bitcount[1, card(32)]
var newaddress[1, card(32)]
var data[1, card(16)]
var i[1, card(32)]
var imm32[1, card(32)]
var offset[1, int(32)]
var offset_addr[1, int(32)]
var operand1[1, int(32)]
var operand2[1, int(32)]
var registers[1, card(16)]
var result[1, card(32)]
var shifted[1, int(32)]
var targetAddress[1, card(32)]
var targetInstrSet[1, card(2)]
var unrotated_value[1, card(32)]
var base[1, card(32)]
