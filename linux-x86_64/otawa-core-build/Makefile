# generated by PACKAGE V1.3 (2018-03-13 18:40:56.115394)

PREFIX=/home/becker/async/WCET_gitlab/otawa/linux-x86_64/otawa-core

# CMake flags
ifeq ($(OS),mingw)
CMAKE_FLAGS=-G "MSYS Makefiles"
else
CMAKE_FLAGS=
endif

# compute max number of jobs
ifdef NO_JOBS
P_JOBS=
else
ifeq ($(OS),linux)
P_CORES=$(shell cat /proc/cpuinfo | grep processor | wc -l)
else
P_CORES=1
endif
ifeq ($(P_CORES),1)
P_JOBS=
else
P_JOBS=-j $(P_CORES)
endif
endif

# ELM dependency on libxml2, libxslt
ifeq ($(TARGET_OS),mingw)
ELM_FLAGS = \
	-DLIBXML2_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXML2_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxml2-2.dll \
	-DLIBXSLT_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXSLT_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxslt-1.dll
endif
ifeq ($(TARGET_OS),win32)
ELM_FLAGS = \
	-DLIBXML2_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXML2_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxml2-2.dll \
	-DLIBXSLT_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXSLT_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxslt-1.dll
endif
ifeq ($(TARGET_OS),win64)
ELM_FLAGS = \
	-DLIBXML2_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXML2_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxml2-2.dll \
	-DLIBXSLT_INCLUDE_DIR:PATH=$(CURDIR)/win/include \
	-DLIBXSLT_LIBRARIES:FILEPATH=$(CURDIR)/win/bin/libxslt-1.dll
endif


ifeq ($(OS),mingw)
path_win2ux=$(subst c:,/c,$(subst \,/,$(1)))
else
path_win2ux=$(1)
endif

# identify the OS
UNAME := $(shell uname -o)
OS = unix
ifeq ($(UNAME), GNU/Linux)
OS = linux
endif
ifeq ($(UNAME), Msys)
OS = mingw
export CC = gcc
endif

ifndef TARGET_OS
TARGET_OS=$(OS)
endif

export BASE_gel = $(PREFIX)
export BASE_elm = $(PREFIX)
export BASE_otawa = $(PREFIX)
export BASE_orange = $(PREFIX)
export BASE_thot = $(PREFIX)
export BASE_gliss2 = $(PREFIX)
export BASE_armv7t = $(PREFIX)
export BASE_ppc2 = $(PREFIX)
export BASE_lp_solve5 = $(PREFIX)
export BASE_frontc = $(PREFIX)
all: gel-all elm-all otawa-all orange-all thot-all gliss2-all armv7t-all ppc2-all lp_solve5-all frontc-all

install: gel-install elm-install otawa-install orange-install frontc-install


.setup-gel: 
	cd gel; cmake . -DINSTALL_TYPE=$(INSTALL_TYPE) -DCMAKE_INSTALL_PREFIX:PATH=$(PREFIX)
	cd gel; date > ../$@

gel-all: .setup-gel
	@cd gel; echo "*** making gel ***"
	cd gel; make $(P_JOBS)   all

gel-install: gel-all 
	cd gel; make  install

.setup-elm: 
	cd elm; cmake . $(ELM_FLAGS) -DCMAKE_INSTALL_PREFIX:PATH=$(PREFIX)
	cd elm; date > ../$@

elm-all: .setup-elm
	@cd elm; echo "*** making elm ***"
	cd elm; make $(P_JOBS)   all

elm-install: elm-all 
	cd elm; make  install

.setup-otawa: 
	cd otawa; cmake .  -DCMAKE_INSTALL_PREFIX:PATH=$(PREFIX)
	cd otawa; date > ../$@

otawa-all: elm-install gel-install ppc2-all lp_solve5-all thot-all armv7t-all .setup-otawa
	@cd otawa; echo "*** making otawa ***"
	cd otawa; make $(P_JOBS)   all

otawa-install: otawa-all elm-install gel-install
	cd otawa; make  install

.setup-orange: 
	cd orange; date > ../$@

orange-all: frontc-install .setup-orange
	@cd orange; echo "*** making orange ***"
	cd orange; make NATIVE=1   all

orange-install: orange-all frontc-install
	cd orange; make PREFIX=$(call path_win2ux,$(PREFIX))  install

.setup-thot: 
	cd thot; date > ../$@

thot-all: .setup-thot
	@cd thot; echo "*** making thot ***"
	cd thot; make   all

.setup-gliss2: 
	cd gliss2; date > ../$@

gliss2-all: thot-all .setup-gliss2
	@cd gliss2; echo "*** making gliss2 ***"
	cd gliss2; make   all

.setup-armv7t: 
	cd armv7t; date > ../$@

armv7t-all: gliss2-all .setup-armv7t
	@cd armv7t; echo "*** making armv7t ***"
	cd armv7t; make WITH_DYNLIB=1 WITH_FAST_STATE=1  all

.setup-ppc2: 
	cd ppc2; date > ../$@

ppc2-all: gliss2-all .setup-ppc2
	@cd ppc2; echo "*** making ppc2 ***"
	cd ppc2; make WITH_VLE=1 WITH_DYNLIB=1  all

.setup-lp_solve5: 
	cd lp_solve5; date > ../$@

lp_solve5-all: .setup-lp_solve5
	@cd lp_solve5; echo "*** making lp_solve5 ***"
	cd lp_solve5; (cd lpsolve55; sh ccc.$(TARGET_OS))

.setup-frontc: 
	cd frontc; date > ../$@

frontc-all: .setup-frontc
	@cd frontc; echo "*** making frontc ***"
	cd frontc; make   all

frontc-install: frontc-all 

